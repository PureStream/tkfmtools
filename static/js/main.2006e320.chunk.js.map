{"version":3,"sources":["components/LanguageProvider.js","components/MyAccordion.js","components/icon.js","components/Navbars.js","components/ToTopBtn.js","components/theme.js","components/SiteAccordionBody.js","pages/Home.js","components/PageWithTabs.js","components/FilterComponents.js","components/MyToggleButtonGroup.js","components/SwitchableShowcase.js","components/MyMasonry.js","components/CardTable.js","components/CharShowcase.js","components/CharFilter.js","components/ItemShowcase.js","components/ItemFilter.js","components/CharPotential.js","routes.js","pages/Enlist.js","pages/Potential.js","App.js","index.js"],"names":["stringDataList","pageString","pageString_tr","charString","characterString_tr","itemString","pageString_en","characterString_en","LanguageContext","createContext","userLanguage","LanguageProvider","children","useState","localSetting","localStorage","getItem","lang","navigator","language","test","getDefaultLanguage","setUserLanguage","provider","toLanguage","window","setItem","Provider","value","StyledAccordion","styled","Accordion","props","theme","colors","surface","onSurface","secondary","MyAccordion","className","expanded","onChange","square","expandIcon","title","content","AccordionSummary","AccordionDetails","ToolIcon","xmlns","enableBackground","viewBox","fill","height","width","transform","x","y","d","HomeIcon","EnlistIcon","ChestIcon","points","LinkIcon","FeedbackIcon","MenuIcon","ExpandMoreIcon","OverviewIcon","FilterIcon","ClearIcon","version","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ToTopIcon","HelpIcon","TagIcon","ClockIcon","TypeIcon","cx","cy","r","CategoryIcon","RaceIcon","BodysizeIcon","OppaiIcon","RankIcon","ElseIcon","StarIcon","AlertIcon","CalcIcon","ItemIcon","BuffIcon","LanguageIcon","TableViewIcon","MasonryViewIcon","NewBadge","React","useContext","pill","variant","home","updateLog","new","FixBadge","fix","ChangeBadge","change","StyledLanguageSwitcher","DropdownButton","onPrimary","shadow","dropdownHover","onSecondary","LanguageSwitcher","onSelect","key","event","menuAlign","Dropdown","Item","eventKey","StyledMainNavBar","Navbar","primary","MenuBtn","Brand","Text","div","ThemeSwitcherLabel","label","Slider","span","slider","switcher","iconOffest","iconUrl","ThemeSwitcherSwither","input","MainNavbar","path","exec","location","documentTitle","slice","name","href","onClick","toggleSidebar","Nav","handleLanguage","type","checked","toggleTheme","onKeyDown","StyledDrawer","Drawer","SiderbarList","ListGroup","SidebarHeader","StyledLink","Link","SiderbarItem","Sidebar","open","onClose","to","icon","enlist","potential","map","item","idx","SidebarAccordions","navbar","links","ListItemAccordion","AccordionItem","link","linkHover","isExpanded","setExpanded","as","target","description","StyledBtn","ToTopBtn","ContainerClassName","TransitionClassName","EasingType","lightTheme","background","error","onBackground","onError","border","secondaryBorder","process","darkTheme","BodyContainer","DescriptionContainer","li","DescriptionHeader","DescriptionBody","SiteDescription","about","Body","rel","refItem","text","header","MsgAccordion","LogMsg","msg","Badge","MsgBox","SiteUpdateLog","LicenseList","ul","LicenseItemTitle","LicenseItemContent","SiteLicense","license","titleLink","licenseLink","HomeContainer","Header","DescriptionAccordion","StyledTabs","Tabs","TabPanel","PageWithTabs","parseInt","tab","setTab","useEffect","document","toTab","tabs","Tab","hidden","StyledContainerHeader","ContainerHeader","end","StyledFilterPanel","widthConfig","default","FilterPanel","ModalContainer","ModalContentWrapper","ModalHeader","ModalBody","HelpModal","HelpModalContent","CloseBtn","handleModalClose","Modal","modalOpen","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","aria-labelledby","aria-describedby","Fade","in","SortableTh","th","direction","undefined","StyledTable","Table","$border","SortableTable","result","sortFunc","defaultSortKey","striped","items","config","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","requestSort","sortedResult","useSortableData","borderless","hover","size","cloneElement","getSortDirection","length","ResultTableContainer","TableWrapper","StyledSortableTable","IconWrapper","ResultTable","filter","resultTitle","handleModalOpen","modalContent","StyledToggleButton","ToggleButton","MyToggleButton","StyledToggleButtonGroup","ToggleButtonGroup","Object","entries","$layoutConfig","entry","MyToggleButtonGroup","layoutConfig","ShowcaseContainer","$hidden","SwitchableShowcase","layoutSwitcher","localLayoutConfig","localConfig","layout","setLayout","handleLayoutChange","toLayout","StyledMasonry","Masonry","MyMasonry","breakpointCols","columnClassName","CardTable","TextWrapper","$img","CardHeader","imgId","split","join","TagWrapper","CardBody","attrIcons","category","race","body","oppai","rank","else","charTagData","id","available","tag","i","tags","tagWarnMsg","CharAccordion","LayoutBtnContainer","IconButton","$active","LayoutSwitcher","CharMasnory","1360","1200","992","600","char","StyledTh","CharCardHeader","$textWrapConfig","TableContent","gradeToRarity","grade","TableHeader","tagAttributes","cardTextWrapConfig","TableBody","j","nowrap","colSpan","CharTableWrapper","CharTable","sort","a","b","aKey","bKey","CharShowcase","ClearIconWrapper","Select","Form","Control","CharFilterPanel","btnLayoutConfig","990","768","624","410","0","tagSelectTitle","filterBy","filterBtnValue","tagData","timeSelectTitle","inline","Group","custom","defaultValue","handleEnlistHour","Array","keys","CharCardWrapper","StyledCharCard","StarIconWrapper","TagTooltip","texts","distinctTagCombs","comb","Tooltip","TransitionComponent","Zoom","arrow","tableHead","attr","appliedTags","StyledSnackbar","Snackbar","MySnackbar","message","autoHideDuration","anchorOrigin","vertical","horizontal","action","FilterContainer","CharFilter","characters","enlistHour","isSnackbarOpen","state","setState","useCallback","val","combinations","curVal","filterableChars","filteredChars","from","forEach","survivors","JSON","parse","stringify","includes","appliedTagsNum","c","isExist","existChar","every","t","splice","push","elements","num","remaining","next","f","setModalOpen","prevState","snackbarMsg","modal","StyledCardHeader","ItemImg","img","StyledHeader","ItemCardHeader","src","alt","EnergyIcon","CardBodyContnet","drop","overview","notAvailableMsg","chapter","stage","rarity","energy","ItemAccordion","ItemCard","BtnWrapper","Button","byItem","byStage","ItemMasonry","itemDropData","$sortable","ItemWrapper","ItemsContainer","StyledBadge","sortable","itemTd","materials","trainItems","expPotions","ItemTableWrapper","ItemTable","toStageKey","stageDropData","ItemShowcase","ItemFilterPanel","itemPanelTitle","ItemTh","ItemFilter","stages","filteredStages","itemIdx","thisStage","flag","that","newDrop","ContainerBody","CharImgWrapper","Gutter","SelectPanel","character","characterPanelTitle","charPotentialData","characterSelectTitle","Row","Col","handleSelect","currentSelectTitle","targetSelectTitle","MaterialContainer","MaterialWrapper","MaterialImg","HelpIconWrapper","OtherImg","ResultPanel","resultLayoutConfig","MaterialBox","money","resultDemandTitle","resultBuffTitle","buff","ATK","HP","resultPanelWidthConfig","TableGutter","CharPotential","currStage","currSub","targetStage","targetSub","isValid","PASSIVE","newState","selected","indexOf","toString","start","pattern","itemMap","parsedItem","itemId","Math","round","routes","component","panel","exact","Main","main","App","matchMedia","matches","getDefaultTheme","sidebarOpen","pageConfig","setPageConfig","toOpen","closest","toTheme","route","render","ReactDOM","basename","querySelector"],"mappings":"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","file":"static/js/main.2006e320.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\nimport pageString_tr from '../stringdata/pageString_tr.json';\r\nimport pageString_en from '../stringdata/pageString_en.json';\r\nimport characterString_tr from '../stringdata/characterString_tr.json';\r\nimport characterString_en from '../stringdata/characterString_en.json';\r\nimport itemString_tr from '../stringdata/itemString_tr.json';\r\nimport itemString_en from '../stringdata/itemString_en.json';\r\n\r\nconst stringDataList = {\r\n    \"zh-TW\": {\r\n        pageString: pageString_tr,\r\n        charString: characterString_tr,\r\n        itemString: itemString_tr,\r\n    }\r\n    , \"en\": {\r\n        pageString: pageString_en,\r\n        charString: characterString_en,\r\n        itemString: itemString_en,\r\n    }\r\n}\r\n\r\nexport const LanguageContext = createContext({\r\n    userLanguage: 'zh-TW',\r\n    ...stringDataList['zh-TW'],\r\n})\r\n\r\nexport default function LanguageProvider({ children }) {\r\n    const getDefaultLanguage = () => {\r\n        const localSetting = localStorage.getItem('language')\r\n        if (localSetting) {\r\n            return localSetting\r\n        }\r\n        const lang = navigator.language || navigator.userLanguage\r\n        if (/en*/.test(lang)) {\r\n            return 'en'\r\n        }\r\n        return 'zh-TW'\r\n    }\r\n\r\n    const [userLanguage, setUserLanguage] = useState(getDefaultLanguage())\r\n\r\n    const provider = {\r\n        userLanguage,\r\n        ...stringDataList[userLanguage],\r\n        setUserLanguage: (toLanguage) => {\r\n            setUserLanguage(toLanguage);\r\n            window.localStorage.setItem('language', toLanguage);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <LanguageContext.Provider value={provider}>\r\n            {children}\r\n        </LanguageContext.Provider>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport { Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\r\n\r\nconst StyledAccordion = styled(Accordion)`\r\n    && {\r\n        box-shadow: none;\r\n        background-color: ${props => props.theme.colors.surface};\r\n        color: ${props => props.theme.colors.onSurface};\r\n        transition: all 0.3s ease;\r\n        &.Mui-expanded {\r\n            margin: 0;\r\n        }\r\n        > .MuiAccordionSummary-root {\r\n            transition: border-bottom 0.3s ease;\r\n            min-height: 0;\r\n        }\r\n        .MuiAccordionSummary-expandIcon {\r\n            padding: 0;\r\n            svg {\r\n                fill: ${props => props.theme.colors.secondary};\r\n                margin: 0;\r\n                width: 1.6rem;\r\n                height: 1.6rem;\r\n            }\r\n        }\r\n    }\r\n`\r\nexport default function MyAccordion({\r\n    className,\r\n    expanded,\r\n    onChange,\r\n    square,\r\n    expandIcon,\r\n    title,\r\n    content\r\n}) {\r\n    return (\r\n        <StyledAccordion\r\n            className={className}\r\n            expanded={expanded}\r\n            onChange={onChange}\r\n            square={square}\r\n        >\r\n            <AccordionSummary\r\n                expandIcon={expandIcon}\r\n            >\r\n                {title}\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                {content}\r\n            </AccordionDetails>\r\n        </StyledAccordion>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Badge } from \"react-bootstrap\"\r\nimport { LanguageContext } from './LanguageProvider';\r\n\r\nexport const ToolIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\"><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g><g><rect height=\"8.48\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -6.8717 17.6255)\" width=\"3\" x=\"16.34\" y=\"12.87\" /><path d=\"M17.5,10c1.93,0,3.5-1.57,3.5-3.5c0-0.58-0.16-1.12-0.41-1.6l-2.7,2.7L16.4,6.11l2.7-2.7C18.62,3.16,18.08,3,17.5,3 C15.57,3,14,4.57,14,6.5c0,0.41,0.08,0.8,0.21,1.16l-1.85,1.85l-1.78-1.78l0.71-0.71L9.88,5.61L12,3.49 c-1.17-1.17-3.07-1.17-4.24,0L4.22,7.03l1.41,1.41H2.81L2.1,9.15l3.54,3.54l0.71-0.71V9.15l1.41,1.41l0.71-0.71l1.78,1.78 l-7.41,7.41l2.12,2.12L16.34,9.79C16.7,9.92,17.09,10,17.5,10z\" /></g></g></svg>\r\nexport const HomeIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\"><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g><path d=\"M19,9.3V4h-3v2.6L12,3L2,12h3v8h5v-6h4v6h5v-8h3L19,9.3z M10,10c0-1.1,0.9-2,2-2s2,0.9,2,2H10z\" /></g></svg>\r\nexport const EnlistIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M8 10H5V7H3v3H0v2h3v3h2v-3h3v-2zm10 1c1.66 0 2.99-1.34 2.99-3S19.66 5 18 5c-.32 0-.63.05-.91.14.57.81.9 1.79.9 2.86s-.34 2.04-.9 2.86c.28.09.59.14.91.14zm-5 0c1.66 0 2.99-1.34 2.99-3S14.66 5 13 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm6.62 2.16c.83.73 1.38 1.66 1.38 2.84v2h3v-2c0-1.54-2.37-2.49-4.38-2.84zM13 13c-2 0-6 1-6 3v2h12v-2c0-2-4-3-6-3z\" /></svg>\r\nexport const ChestIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" viewBox=\"2 2 22 24\"><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g><g><polygon points=\"18,16 16,16 16,15 8,15 8,16 6,16 6,15 2,15 2,20 22,20 22,15 18,15\" /><path d=\"M20,8h-3H4c-1.1,0-2,0.9-2,2v4h4v-2h2v2h8v-2h2v2h4v-4C22,8.9,21.1,8,20, 8z M15,8\" /></g></g></svg>\r\nexport const LinkIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" > <path d=\"M0 0h24v24H0z\" fill=\"none\" /> <path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\" /></svg >\r\nexport const FeedbackIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 12h-2v-2h2v2zm0-4h-2V6h2v4z\" /></svg>\r\nexport const MenuIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">  <path d=\"M0 0h24v24H0z\" fill=\"none\" /> <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" /></svg>\r\nexport const ExpandMoreIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"> <path d=\"M0 0h24v24H0z\" fill=\"none\" /> <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" /> </svg >\r\nexport const OverviewIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\" /></svg>\r\nexport const FilterIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\"><g><path d=\"M0,0h24 M24,24H0\" fill=\"none\" /><path d=\"M4.25,5.61C6.27,8.2,10,13,10,13v6c0,0.55,0.45,1,1,1h2c0.55,0,1-0.45,1-1v-6c0,0,3.72-4.8,5.74-7.39 C20.25,4.95,19.78,4,18.95,4H5.04C4.21,4,3.74,4.95,4.25,5.61z\" /><path d=\"M0,0h24v24H0V0z\" fill=\"none\" /></g></svg>\r\nexport const ClearIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" version=\"1.1\"><g stroke=\"currentColor\" strokeWidth=\"1.8\" strokeLinecap=\"butt\" fill=\"none\" strokeLinejoin=\"round\"><polyline points=\"15 4 15 18 5 18 5 4\" /><polyline points=\"18 4 2 4\" /><polyline points=\"8.2 15 8.2 7\" /><polyline points=\"11.8 15 11.8 7\" /><polyline points=\"8 1 12 1\" /></g></svg>\r\nexport const ToTopIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /> <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" /></svg>\r\nexport const HelpIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\" /></svg>\r\nexport const TagIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\"><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\" /></g><g><path d=\"M21.41,11.41l-8.83-8.83C12.21,2.21,11.7,2,11.17,2H4C2.9,2,2,2.9,2,4v7.17c0,0.53,0.21,1.04,0.59,1.41l8.83,8.83 c0.78,0.78,2.05,0.78,2.83,0l7.17-7.17C22.2,13.46,22.2,12.2,21.41,11.41z M6.5,8C5.67,8,5,7.33,5,6.5S5.67,5,6.5,5S8,5.67,8,6.5 S7.33,8,6.5,8z\" /></g></svg>\r\nexport const ClockIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" /><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\" /></svg>\r\nexport const TypeIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 2l-5.5 9h11z\" /><circle cx=\"17.5\" cy=\"17.5\" r=\"4.5\" /><path d=\"M3 13.5h8v8H3z\" /></svg>\r\nexport const CategoryIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke=\"none\" fill=\"currentColor\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M20.71 5.63l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-3.12 3.12-1.93-1.91-1.41 1.41 1.42 1.42L3 16.25V21h4.75l8.92-8.92 1.42 1.42 1.41-1.41-1.92-1.92 3.12-3.12c.4-.4.4-1.03.01-1.42zM6.92 19L5 17.08l8.06-8.06 1.92 1.92L6.92 19z\" transform=\"rotate(120,12,12) translate(6 6)scale(0.8 0.8)\" /><path d=\"M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z\" transform=\"rotate(90,12,12) translate(4 -2)scale(0.7 0.7)\" /></g></svg>\r\nexport const RaceIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" /></svg>\r\nexport const BodysizeIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke=\"none\" fill=\"currentColor\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H3V8h2v4h2V8h2v4h2V8h2v4h2V8h2v4h2V8h2v8z\" transform=\"rotate(270,12,12)\" /></g></svg>\r\nexport const OppaiIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><g stroke=\"currentColor\" fill=\"none\" strokeWidth=\"2\"><path d=\"M3 6 A 5 5 0 1 0 10 13 A 5 5 0 1 0 17 6\" /><circle cx=\"6\" cy=\"10\" r=\".8\" /><circle cx=\"14\" cy=\"10\" r=\".8\" /></g></svg>\r\nexport const RankIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke=\"none\" fill=\"currentColor\"><path d=\"M17,10.43V2H7v8.43c0,0.35,0.18,0.68,0.49,0.86 l4.18,2.51l-0.99,2.34l-3.41,0.29l2.59,2.24L9.07,22L12,20.23L14.93,22 l-0.78-3.33l2.59-2.24l-3.41-0.29 l-0.99-2.34l4.18-2.51C16.82,11.11,17,10.79,17,10.43zM13,12.23l-1,0.6l-1-0.6V3h2V12.23z\" /></g></svg>\r\nexport const ElseIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g stroke=\"none\" fill=\"currentColor\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" /></g></svg>\r\nexport const StarIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm4.24 16L12 15.45 7.77 18l1.12-4.81-3.73-3.23 4.92-.42L12 5l1.92 4.53 4.92.42-3.73 3.23L16.23 18z\" /></svg>\r\nexport const AlertIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\"><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g><g><g><path d=\"M11.53,5l7.53,13.01H4L11.53,5 M2.27,17.01c-0.77,1.33,0.19,3,1.73,3h15.06c1.54,0,2.5-1.67,1.73-3 L13.26,4c-0.77-1.33-2.69-1.33-3.46,0L2.27,17.01z\" /><path d=\"M10.53,10.01V13c0,0.55,0.45,1,1,1l0,0c0.55,0,1-0.45,1-1v-2.99c0-0.55-0.45-1-1-1l0,0 C10.98,9.01,10.53,9.46,10.53,10.01z\" /><circle cx=\"11.53\" cy=\"16.01\" r=\"1\" /></g></g></g></svg>\r\nexport const CalcIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M18 4H6v2l6.5 6L6 18v2h12v-3h-7l5-5-5-5h7z\" /></svg>\r\nexport const ItemIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"4 4 20 20\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M18.25 7.6l-5.5-3.18c-.46-.27-1.04-.27-1.5 0L5.75 7.6c-.46.27-.75.76-.75 1.3v6.35c0 .54.29 1.03.75 1.3l5.5 3.18c.46.27 1.04.27 1.5 0l5.5-3.18c.46-.27.75-.76.75-1.3V8.9c0-.54-.29-1.03-.75-1.3zM7 14.96v-4.62l4 2.32v4.61l-4-2.31zm5-4.03L8 8.61l4-2.31 4 2.31-4 2.32zm1 6.34v-4.61l4-2.32v4.62l-4 2.31z\" /></svg>\r\nexport const BuffIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" /></svg>\r\nexport const LanguageIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z\" /></svg>\r\nexport const TableViewIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\"><g><rect fill=\"none\" height=\"24\" width=\"24\" /><path d=\"M19,7H9C7.9,7,7,7.9,7,9v10c0,1.1,0.9,2,2,2h10c1.1,0,2-0.9,2-2V9C21,7.9,20.1,7,19,7z M19,9v2H9V9H19z M13,15v-2h2v2H13z M15,17v2h-2v-2H15z M11,15H9v-2h2V15z M17,13h2v2h-2V13z M9,17h2v2H9V17z M17,19v-2h2v2H17z M6,17H5c-1.1,0-2-0.9-2-2V5 c0-1.1,0.9-2,2-2h10c1.1,0,2,0.9,2,2v1h-2V5H5v10h1V17z\" /></g></svg>\r\nexport const MasonryViewIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z\" /></svg>\r\n\r\nexport const NewBadge = () => {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n    return (\r\n        < Badge pill variant=\"success\" > { pageString.home.updateLog.new}</Badge>\r\n    )\r\n}\r\nexport const FixBadge = () => {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n    return (\r\n        < Badge pill variant=\"danger\" > { pageString.home.updateLog.fix}</Badge>\r\n    )\r\n}\r\nexport const ChangeBadge = () => {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n    return (\r\n        < Badge pill variant=\"primary\" > { pageString.home.updateLog.change}</Badge>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Drawer } from '@material-ui/core';\r\nimport { Dropdown, DropdownButton, ListGroup, Nav, Navbar } from 'react-bootstrap';\r\nimport MyAccordion from './MyAccordion';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport {\r\n    ChestIcon,\r\n    EnlistIcon,\r\n    ExpandMoreIcon,\r\n    FeedbackIcon,\r\n    HomeIcon,\r\n    LinkIcon,\r\n    MenuIcon,\r\n    ToolIcon,\r\n    LanguageIcon,\r\n} from './icon';\r\n\r\nconst StyledLanguageSwitcher = styled(DropdownButton)`\r\n    padding: 0;\r\n    margin-right: 1.25rem;\r\n    &&&& button {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: none;\r\n        color: inherit;\r\n        background-color: inherit;\r\n        &:focus,\r\n        &:active {\r\n            background-color: inherit;\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    svg {\r\n        width: 1.4rem;\r\n        height: 1.4rem;\r\n        fill: ${props => props.theme.colors.onPrimary};\r\n    }\r\n    &&&& .dropdown-menu {\r\n        top: 120%;\r\n        border: none;\r\n        background-color: ${props => props.theme.colors.surface};\r\n        box-shadow: 0 0 .15em ${props => props.theme.colors.shadow};\r\n        a {\r\n            padding: .5rem .5rem;\r\n            color: ${props => props.theme.colors.onSurface};\r\n            :hover, :focus {\r\n                background-color: ${props => props.theme.colors.dropdownHover};\r\n            }\r\n        }\r\n        a.active {\r\n            color: ${props => props.theme.colors.onSecondary};\r\n            background-color: ${props => props.theme.colors.secondary};\r\n        }\r\n    }\r\n`\r\nfunction LanguageSwitcher() {\r\n    const { setUserLanguage } = React.useContext(LanguageContext)\r\n\r\n    const handleUserLanguage = (key, event) => setUserLanguage(key)\r\n\r\n    return (\r\n        <StyledLanguageSwitcher\r\n            title={LanguageIcon}\r\n            onSelect={handleUserLanguage}\r\n            menuAlign='right'\r\n        >\r\n            <Dropdown.Item eventKey='zh-TW'>繁體中文</Dropdown.Item>\r\n            <Dropdown.Item eventKey='en'>English</Dropdown.Item>\r\n        </StyledLanguageSwitcher>\r\n    )\r\n}\r\n\r\nconst StyledMainNavBar = styled(Navbar)`\r\n    background-color: ${props => props.theme.colors.primary};\r\n    color: ${props => props.theme.colors.onPrimary};\r\n    transition: all 355ms ease;\r\n    padding: .6rem 1.25rem;\r\n    align-item: end;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 2;\r\n    a:nth-of-type(1) {\r\n        padding: 0;\r\n    }\r\n`\r\nconst MenuBtn = styled(Navbar.Brand)`\r\n    cursor: pointer;\r\n    svg {\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n        fill: ${props => props.theme.colors.onPrimary};\r\n        margin: .4rem;\r\n        margin-top: .2rem;\r\n    }\r\n`\r\nconst Text = styled.div`\r\n    font-size: x-large;\r\n    @media screen and (max-width: 490px) {\r\n        font-size: 1.2rem;\r\n    }\r\n    font-weight: bold;\r\n    color: inherit;\r\n`\r\nconst ThemeSwitcherLabel = styled.label`\r\n    position: relative;\r\n    display: inline-block;\r\n    margin-bottom: 0;\r\n    width: 3.2rem;\r\n    height: 1.6rem;\r\n`\r\nconst Slider = styled.span`\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0; bottom: 0; left: 0; right: 0;\r\n    background-color: ${props => props.theme.colors.slider};\r\n    background-position: ${props => props.theme.switcher.iconOffest};\r\n    background-repeat: no-repeat;\r\n    background-size: 1rem 1rem;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius: 2rem;\r\n    background-image: url(${props => props.theme.switcher.iconUrl});\r\n    &:before {\r\n        position: absolute;\r\n        content: \"\";\r\n        height: 1.2rem;\r\n        width: 1.2rem;\r\n        left: .2rem;\r\n        bottom: .2rem;\r\n        border-radius: 50%;\r\n        background-color: #D7CCC8;\r\n        -webkit-transition: .4s;\r\n        transition: .4s;\r\n    }\r\n`\r\nconst ThemeSwitcherSwither = styled.input`\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n    &:checked + ${Slider} {\r\n        &:before {\r\n            -webkit-transform: translateX(1.6rem);\r\n            -ms-transform: translateX(1.6rem);\r\n            transform: translateX(1.6rem);\r\n        }\r\n    }\r\n`\r\nexport function MainNavbar(props) {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    const path = /\\/(?:.(?!\\/))+$/.exec(window.location)\r\n    const title = path === null || path[0] === '/tkfmtools'\r\n        ? pageString.home.documentTitle\r\n        : pageString[path[0].slice(1)].name\r\n\r\n    return (\r\n        <StyledMainNavBar>\r\n            <MenuBtn href='' onClick={props.toggleSidebar(true)}>\r\n                <div>{MenuIcon}</div>\r\n            </MenuBtn>\r\n            <Text>{title}</Text>\r\n            <Nav className='ml-auto'>\r\n                <LanguageSwitcher\r\n                    handleLanguage={props.handleLanguage}\r\n                />\r\n                <ThemeSwitcherLabel>\r\n                    <ThemeSwitcherSwither\r\n                        type='checkbox'\r\n                        checked={props.checked}\r\n                        onChange={props.toggleTheme}\r\n                        onKeyDown={props.toggleTheme}\r\n                    />\r\n                    <Slider />\r\n                </ThemeSwitcherLabel>\r\n            </Nav>\r\n        </StyledMainNavBar>\r\n    )\r\n}\r\n\r\nconst StyledDrawer = styled(Drawer)`\r\n    .MuiDrawer-paper {\r\n        background-color: ${props => props.theme.colors.surface};\r\n        width: 20rem;\r\n    }\r\n`\r\nconst SiderbarList = styled(ListGroup)`\r\n    border-radius: 0;\r\n`\r\nconst SidebarHeader = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 4rem;\r\n    padding: .8rem;\r\n    border-radius: 0;\r\n    font-size: x-large;\r\n    @media screen and (max-width: 490px) {\r\n        font-size: large;\r\n    }\r\n    font-weight: bold;\r\n    background-color: ${props => props.theme.colors.primary};\r\n    color: ${props => props.theme.colors.onPrimary};\r\n    svg {\r\n        fill: ${props => props.theme.colors.onPrimary};\r\n        margin: .4rem;\r\n        margin-right: 1.25rem;\r\n        margin-bottom: .6rem;\r\n        width: 1.6rem;\r\n        height 1.6rem;\r\n        vertical-align: bottom;\r\n    }\r\n`\r\nconst StyledLink = styled(Link)`\r\n    &:hover {\r\n        text-decoration: none;\r\n    }\r\n`\r\nconst SiderbarItem = styled(ListGroup.Item)`\r\n    font-size: large;\r\n    border: 0;\r\n    padding: 1rem 1.25rem;\r\n    background-color: inherit;\r\n    color: ${props => props.theme.colors.onSurface};\r\n    cursor: pointer;\r\n    svg {\r\n        fill: ${props => props.theme.colors.secondary};\r\n        margin-right: 1.25rem;\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n    }\r\n    &:hover {\r\n        border-left: .5rem solid ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\nexport function Sidebar(props) {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n    return (\r\n        <StyledDrawer\r\n            open={props.open}\r\n            onClose={props.toggleSidebar(false)}\r\n            onClick={props.toggleSidebar(false)}\r\n            onKeyDown={props.toggleSidebar(false)}\r\n        >\r\n            <SiderbarList\r\n\r\n            >\r\n                <SidebarHeader>\r\n                    {ToolIcon}\r\n                    {pageString.home.documentTitle}\r\n                </SidebarHeader>\r\n                {[\r\n                    {\r\n                        to: '/',\r\n                        icon: HomeIcon,\r\n                        title: pageString.home.name,\r\n                    },\r\n                    {\r\n                        to: '/enlist',\r\n                        icon: EnlistIcon,\r\n                        title: pageString.enlist.name,\r\n                    },\r\n                    {\r\n                        to: '/potential',\r\n                        icon: ChestIcon,\r\n                        title: pageString.potential.name,\r\n                    },\r\n                ].map(item => (\r\n                    <StyledLink key={item['title']} to={item['to']}>\r\n                        <SiderbarItem>\r\n                            {item['icon']}\r\n                            {item['title']}\r\n                        </SiderbarItem>\r\n                    </StyledLink>\r\n                ))}\r\n            </SiderbarList>\r\n            <SiderbarList>\r\n                {[\r\n                    LinkIcon,\r\n                    FeedbackIcon\r\n                ].map((item, idx) => (\r\n                    <SidebarAccordions\r\n                        icon={item}\r\n                        key={idx}\r\n                        title={pageString.navbar[idx].title}\r\n                        links={pageString.navbar[idx].links}\r\n                    />\r\n                ))}\r\n            </SiderbarList>\r\n        </StyledDrawer>\r\n    )\r\n}\r\n\r\nconst ListItemAccordion = styled(MyAccordion)`\r\n    && {\r\n        cursor: default;\r\n        && {\r\n            margin: -1rem -1.25rem;\r\n        }\r\n        .MuiAccordionSummary-root {\r\n            padding: 1rem 1.25rem;\r\n            padding-right: 1.75rem;\r\n        }\r\n        .MuiAccordionSummary-content {\r\n            margin: 0;\r\n        }\r\n        .MuiAccordionDetails-root {\r\n            font-size: medium;\r\n            padding: 0 4rem;\r\n            cursor: default;\r\n            a {\r\n                padding-bottom: .5rem;\r\n            }\r\n        }\r\n    }\r\n`\r\nconst AccordionItem = styled(ListGroup.Item)`\r\n    color: ${props => props.theme.colors.link};\r\n    &:hover {\r\n        color: ${props => props.theme.colors.linkHover};\r\n    }\r\n`\r\nfunction SidebarAccordions(props) {\r\n    const [isExpanded, setExpanded] = React.useState(false)\r\n\r\n    return (\r\n        <SiderbarItem>\r\n            <ListItemAccordion\r\n                expanded={isExpanded}\r\n                onChange={() => setExpanded(!isExpanded)}\r\n                square={true}\r\n                expandIcon={ExpandMoreIcon}\r\n                title={\r\n                    <>\r\n                        {props.icon}\r\n                        {props.title}\r\n                    </>\r\n                }\r\n                content={\r\n                    <ListGroup>\r\n                        {props.links.map((item, idx) => (\r\n                            <AccordionItem\r\n                                as='a'\r\n                                href={item.link}\r\n                                target='_blank'\r\n                                key={idx}\r\n                            >\r\n                                {item.description}\r\n                            </AccordionItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                }\r\n            />\r\n        </SiderbarItem>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ScrollUpButton from 'react-scroll-up-button';\r\nimport { ToTopIcon } from './icon';\r\n\r\nconst StyledBtn = styled.div`\r\n    .Container {\r\n        position: fixed;\r\n        right: -100px;\r\n        bottom: 1.5rem;\r\n        transition: right 0.5s;\r\n        cursor: pointer;\r\n        background-color: ${props => props.theme.colors.secondary};\r\n        padding: .2rem;\r\n        border-radius: 2rem;\r\n    }\r\n    .Transition{\r\n        right: 1.1rem;\r\n    }\r\n    svg {\r\n        width: 2rem;\r\n        height: 2rem;\r\n        fill: ${props => props.theme.colors.onSecondary};\r\n    }\r\n`\r\nexport default function ToTopBtn() {\r\n    return (\r\n        <StyledBtn>\r\n            <ScrollUpButton\r\n                ContainerClassName=\"Container\"\r\n                TransitionClassName=\"Transition\"\r\n                EasingType='easeOutCirc'\r\n            >\r\n                {ToTopIcon}\r\n            </ScrollUpButton>\r\n        </StyledBtn>\r\n    )\r\n}\r\n","export const lightTheme = {\r\n    colors: {\r\n        background: '#FAFAFA',\r\n        surface: '#fff',\r\n        primary: '#e92390',\r\n        secondary: '#b20063',\r\n        error: '#B00020',\r\n        onBackground: '#000',\r\n        onSurface: '#000',\r\n        onPrimary: '#fff',\r\n        onSecondary: '#fff',\r\n        onError: '#fff',\r\n        slider: '#fff',\r\n        border: '#b20063',\r\n        secondaryBorder: '#b20063',\r\n        shadow: 'gray',\r\n        link: '#007bff',\r\n        linkHover: '#0056b3',\r\n        dropdownHover: 'lightgray'\r\n    },\r\n    switcher: {\r\n        iconOffest: '1.8rem',\r\n        iconUrl: `${process.env.PUBLIC_URL}/img/sun.svg`\r\n    }\r\n}\r\n\r\nexport const darkTheme = {\r\n    colors: {\r\n        background: '#424242',\r\n        surface: '#424242',\r\n        primary: '#212121',\r\n        secondary: '#F48FB1',\r\n        error: '#F48FB1',\r\n        onBackground: '#fff',\r\n        onSurface: '#fff',\r\n        onPrimary: '#fff',\r\n        onSecondary: '#000',\r\n        onError: '#fff',\r\n        slider: '#01579B',\r\n        border: '#F48FB1',\r\n        secondaryBorder: '#424242',\r\n        shadow: 'lightgray',\r\n        link: '#b3e5fc',\r\n        linkHover: '#e1f5fe',\r\n        dropdownHover: 'gray'\r\n    },\r\n    switcher: {\r\n        iconOffest: '6px',\r\n        iconUrl: `${process.env.PUBLIC_URL}/img/moon.svg`\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MyAccordion from './MyAccordion';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport { ChangeBadge, FixBadge, NewBadge } from './icon';\r\n\r\nconst BodyContainer = styled.div`\r\n    width: 100%;\r\n    font-size: .9rem;\r\n    a {\r\n        color: ${props => props.theme.colors.link};\r\n        &:hover {\r\n            color: ${props => props.theme.colors.linkHover};\r\n        }\r\n    }\r\n    ul {\r\n        list-style: none;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    > div {\r\n        margin-top: 1rem;\r\n    }\r\n    > div:first-child {\r\n        margin-top: 0;\r\n    }\r\n`\r\nconst DescriptionContainer = styled.li`\r\n    margin: 1rem 0;\r\n    &:first-child {\r\n        margin-top : 0;\r\n    }\r\n    &:last-child {\r\n        margin-bottom : 0;\r\n    }\r\n`\r\nconst DescriptionHeader = styled.div`\r\n    font-size: large;\r\n    margin-bottom: .5rem;\r\n`\r\nconst DescriptionBody = styled.div`\r\n    margin: 0;\r\n    p {\r\n        margin: .3rem .5rem;\r\n    }\r\n`\r\nexport const SiteDescription = () => {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    return (\r\n        <BodyContainer>\r\n            <ul>\r\n                {pageString.home.about.content.map((item, idx) => {\r\n                    let Body\r\n                    if (item.name === 'feedback') {\r\n                        Body = () => (\r\n                            <p>\r\n                                {item.content[0]}\r\n                                <a\r\n                                    href='https://peing.net/ja/b5295760aebf4c'\r\n                                    target='_blank'\r\n                                    rel='noreferrer'\r\n                                >\r\n                                    {item.content[1]}\r\n                                </a>\r\n                                {item.content[2]}\r\n                            </p>\r\n                        )\r\n                    } else if (item.name === 'reference') {\r\n                        Body = () => (\r\n                            item.content.map((refItem, idx) => {\r\n                                if (idx === 3) {\r\n                                    return <p key={idx}>{refItem}</p>\r\n                                }\r\n                                return (\r\n                                    <p key={idx}>\r\n                                        <a\r\n                                            href={refItem.link}\r\n                                            target='_blank'\r\n                                            rel='noreferrer'\r\n                                        >\r\n                                            {refItem.title}\r\n                                        </a>\r\n                                    </p>\r\n                                )\r\n                            })\r\n                        )\r\n                    } else {\r\n                        Body = () => item.content\r\n                            .map((text, idx) => <p key={idx}>{text}</p>)\r\n                    }\r\n\r\n                    return (\r\n                        <DescriptionContainer key={idx}>\r\n                            <DescriptionHeader>{item.header}</DescriptionHeader>\r\n                            <DescriptionBody>\r\n                                <Body />\r\n                            </DescriptionBody>\r\n                        </DescriptionContainer>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </BodyContainer>\r\n    )\r\n}\r\n\r\nconst MsgAccordion = styled(MyAccordion)`\r\n    && {\r\n        border-bottom: 1px solid lightgray;\r\n        > .MuiAccordionSummary-root {\r\n            padding: 0 .5rem;\r\n            border-bottom: 0px solid lightgray;\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid lightgray;\r\n        }\r\n        .MuiAccordionSummary-content {\r\n            display: inline;\r\n            margin: .5rem 0;\r\n            > span {\r\n                padding: .25rem .4rem;\r\n            }\r\n        }\r\n        && .MuiAccordionDetails-root {\r\n            font-size: small;\r\n            padding: .4rem .5rem;\r\n            margin: 0;\r\n        }\r\n    }\r\n`\r\nfunction LogMsg(props) {\r\n    const [isExpanded, setExpanded] = React.useState(false)\r\n    const { type, title, description } = props.msg\r\n    const Badge = type === 'New' ? NewBadge\r\n        : type === 'Fix' ? FixBadge\r\n            : ChangeBadge\r\n\r\n    return (\r\n        <MsgAccordion\r\n            expanded={isExpanded}\r\n            onChange={() => setExpanded(!isExpanded)}\r\n            square={true}\r\n            title={\r\n                <>\r\n                    <Badge />\r\n                    {` ${title}`}\r\n                </>\r\n            }\r\n            content={description}\r\n        />\r\n    )\r\n}\r\n\r\nconst MsgBox = styled.div`\r\n    > div:first-child {\r\n        border-bottom: 1px solid lightgray;\r\n    }\r\n    > div > div {\r\n        border-top: none;\r\n    }\r\n`\r\nexport function SiteUpdateLog() {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    return (\r\n        <BodyContainer>\r\n            {pageString.home.updateLog.content.map((version, idx) => (\r\n                <MsgBox key={idx}>\r\n                    <div>{version.version}</div>\r\n                    {version.content.map((msg, idx) => (\r\n                        <LogMsg key={idx} msg={msg} />\r\n                    ))}\r\n                </MsgBox>\r\n            ))}\r\n        </BodyContainer>\r\n    )\r\n}\r\n\r\nconst LicenseList = styled.ul`\r\n    margin-bottom: -.5rem;\r\n`\r\nconst LicenseItemTitle = styled.div`\r\n    font-weight: bold;\r\n`\r\nconst LicenseItemContent = styled.div`\r\n    padding-left: .5rem;\r\n    padding-bottom: .5rem;\r\n`\r\nexport const SiteLicense = () => {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    return (\r\n        <BodyContainer>\r\n            <LicenseList>\r\n                <li key={'text'}>\r\n                    <LicenseItemTitle>\r\n                        <span>{pageString.home.license.content.title}</span>\r\n                    </LicenseItemTitle>\r\n                    <LicenseItemContent>\r\n                        <span>{pageString.home.license.content.content}</span>\r\n                    </LicenseItemContent>\r\n                </li>\r\n                {[\r\n                    {\r\n                        titleLink: 'https://github.com/google/material-design-icons',\r\n                        title: 'Material icons - Google Design',\r\n                        licenseLink: 'https://github.com/google/material-design-icons/blob/master/LICENSE',\r\n                        license: 'Apache License 2.0',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/facebook/react',\r\n                        title: 'react',\r\n                        licenseLink: 'https://github.com/facebook/react/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/react-bootstrap/react-bootstrap',\r\n                        title: 'react-bootstrap',\r\n                        licenseLink: 'https://github.com/react-bootstrap/react-bootstrap/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/paulcollett/react-masonry-css',\r\n                        title: 'react-masonry-css',\r\n                        licenseLink: 'https://github.com/paulcollett/react-masonry-css/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/dirtyredz/react-scroll-up-button',\r\n                        title: 'react-scroll-up-button',\r\n                        licenseLink: 'https://github.com/dirtyredz/react-scroll-up-button/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/mui-org/material-ui',\r\n                        title: 'material-ui',\r\n                        licenseLink: 'https://github.com/mui-org/material-ui/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/styled-components/styled-components',\r\n                        title: 'styled-components',\r\n                        licenseLink: 'https://github.com/styled-components/styled-components/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                ].map((item, idx) => (\r\n                    <li key={idx}>\r\n                        <LicenseItemTitle>\r\n                            <a\r\n                                href={item.titleLink}\r\n                                target='_blank'\r\n                                rel='noreferrer'\r\n                            >\r\n                                {item.title}\r\n                            </a>\r\n                        </LicenseItemTitle>\r\n                        <LicenseItemContent>\r\n                            <a\r\n                                href={item.licenseLink}\r\n                                target='_blank'\r\n                                rel='noreferrer'\r\n                            >\r\n                                {item.license}\r\n                            </a>\r\n                        </LicenseItemContent>\r\n                    </li>\r\n                ))}\r\n            </LicenseList>\r\n        </BodyContainer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { LanguageContext } from '../components/LanguageProvider';\r\nimport MyAccordion from '../components/MyAccordion';\r\nimport { SiteDescription, SiteUpdateLog, SiteLicense } from '../components/SiteAccordionBody'\r\nimport { ExpandMoreIcon } from '../components/icon';\r\n\r\nconst HomeContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    &&& > div {\r\n        margin-bottom: 2rem;\r\n    }\r\n`\r\nconst Header = styled.div`\r\n    width: 60%;\r\n    @media screen and (max-width: 992px) {\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 624px) {\r\n        width: 90%;\r\n    }\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    font-size: x-large;\r\n    font-weight: bold;\r\n    color: ${props => props.theme.colors.onSurface};\r\n`\r\nconst DescriptionAccordion = styled(MyAccordion)`\r\n    && {\r\n        width: 60%;\r\n        @media screen and (max-width: 992px) {\r\n            width: 80%;\r\n        }\r\n        @media screen and (max-width: 624px) {\r\n            width: 90%;\r\n        }\r\n        border: 1px solid ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n        & {\r\n            box-shadow: 0 0 .15em lightgray;\r\n        }\r\n        > .MuiAccordionSummary-root {\r\n            font-size: large;\r\n            padding: .75rem 1.25rem;\r\n            border-bottom-right-radius: 0;\r\n            border-bottom-left-radius: 0;\r\n            border-bottom: 0px solid ${props => props.theme.colors.border};\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid ${props => props.theme.colors.border};\r\n        }\r\n        .MuiAccordionDetails-root {\r\n            margin: 1rem;\r\n            padding: 0;\r\n        }\r\n    }\r\n`\r\nexport default function Home() {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    const [expanded, setExpanded] = React.useState(0)\r\n\r\n    const handleExpand = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        document.title = pageString.home.documentTitle\r\n    })\r\n\r\n    return (\r\n        <HomeContainer>\r\n            <Header>\r\n                {`${pageString.home.documentTitle} ${pageString.home.updateLog.content[0].version}`}\r\n            </Header>\r\n            {[\r\n                {\r\n                    header: pageString.home.about.header,\r\n                    body: <SiteDescription />,\r\n                },\r\n                {\r\n                    header: pageString.home.updateLog.header,\r\n                    body: <SiteUpdateLog />,\r\n                },\r\n                {\r\n                    header: pageString.home.license.header,\r\n                    body: <SiteLicense />,\r\n                },\r\n            ].map((item, idx) => (\r\n                <DescriptionAccordion\r\n                    expanded={expanded === idx}\r\n                    onChange={handleExpand(idx)}\r\n                    square={false}\r\n                    expandIcon={ExpandMoreIcon}\r\n                    title={item.header}\r\n                    content={item.body}\r\n                    key={idx}\r\n                />\r\n            ))}\r\n        </HomeContainer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { LanguageContext } from './LanguageProvider';\r\n\r\nconst StyledTabs = styled(Tabs)`\r\n    && {\r\n        transition: all 0.3s ease;\r\n        border-bottom: 1px solid ${props => props.theme.colors.border};\r\n        .MuiTabs-indicator {\r\n            background-color:  ${props => props.theme.colors.secondary};\r\n            height: 100%;\r\n            border-radius: .25rem;\r\n            border-bottom-right-radius: 0;\r\n            border-bottom-left-radius: 0;\r\n        }\r\n        .MuiTab-root {\r\n            min-width: 0;\r\n            min-height: 0;\r\n            padding: 0 1rem;\r\n            padding-top: .6rem;\r\n            z-index: 1;\r\n            > span {\r\n                display: ${props => {\r\n                    if (props.lang === 'en') return 'flex'\r\n                    else return 'inline'\r\n                }};\r\n                font-size: ${props => {\r\n                    if (props.lang === 'en') return '1rem'\r\n                    else return 'medium'\r\n                }};\r\n                color: ${props => props.theme.colors.onSurface}\r\n            }\r\n        }\r\n        .MuiTab-root.MuiTab-labelIcon {\r\n            min-height: 0;\r\n        }\r\n        && svg {\r\n            width: 1.4rem;\r\n            height: 1.4rem;\r\n            margin: 0rem .2rem;\r\n            margin-left: 0;\r\n        }\r\n        svg {\r\n            fill: ${props => props.theme.colors.onSurface};\r\n        }\r\n        .Mui-selected > span {\r\n            color: ${props => props.theme.colors.onSecondary};\r\n            svg {\r\n                fill: ${props => props.theme.colors.onSecondary};\r\n            }\r\n        }\r\n    }\r\n`\r\nconst TabPanel = styled.div`\r\n    position: relative;\r\n    margin-top: 1rem;\r\n`\r\nexport default function PageWithTabs(props) {\r\n    const { userLanguage } = React.useContext(LanguageContext)\r\n\r\n    const location = /\\/(?:.(?!\\/))+$/.exec(window.location)[0]\r\n\r\n    const getDefaultTab = () => {\r\n        const localSetting = localStorage.getItem(location + '-select-tab')\r\n        return localSetting ? parseInt(localSetting) : 0\r\n    }\r\n    const [tab, setTab] = React.useState(getDefaultTab)\r\n\r\n    const handleTabChange = (event, toTab) => {\r\n        setTab(toTab)\r\n        localStorage.setItem(location + '-select-tab', toTab)\r\n    }\r\n    React.useEffect(() => {\r\n        document.title = props.title\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <StyledTabs\r\n                value={tab}\r\n                onChange={handleTabChange}\r\n                lang={userLanguage}\r\n            >\r\n                {props.tabs.map(item => (\r\n                    <Tab label={item.label} icon={item.icon} key={item.label} />\r\n                ))}\r\n            </StyledTabs>\r\n            {props.tabs.map((item, idx) => (\r\n                <TabPanel hidden={tab !== idx} key={idx}>\r\n                    {item.content}\r\n                </TabPanel>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Backdrop, Fade, Modal } from '@material-ui/core';\r\nimport { Table } from 'react-bootstrap';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport { HelpIcon } from './icon';\r\n\r\nconst StyledContainerHeader = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: large;\r\n    font-weight: normal;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n    padding-bottom: .4rem;\r\n    border-bottom: solid 1px ${props => props.theme.colors.border};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    > div {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`\r\nexport const ContainerHeader = ({\r\n    title,\r\n    end\r\n}) => (\r\n    <StyledContainerHeader>\r\n        {title}\r\n        {end}\r\n    </StyledContainerHeader>\r\n)\r\n\r\nconst StyledFilterPanel = styled.div`\r\n    height: 100%;\r\n    width: ${props => props.widthConfig.default};\r\n    padding: 1rem;\r\n    border-radius: .25rem;\r\n    background-color: ${props => props.theme.colors.surface};\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    box-shadow: 0 0 .15em lightgray;\r\n    @media screen and (max-width: 1360px) {\r\n        width: ${props => props.widthConfig[1360]};\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        width: ${props => props.widthConfig[992]};\r\n    }\r\n`\r\nexport const FilterPanel = ({\r\n    className,\r\n    children,\r\n    widthConfig\r\n}) => (\r\n    <StyledFilterPanel\r\n        className={className}\r\n        widthConfig={widthConfig}\r\n    >\r\n        {children}\r\n    </StyledFilterPanel>\r\n)\r\n\r\nconst ModalContainer = styled.div`\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    position: absolute;\r\n    width: 70%;\r\n    left: 15%;\r\n    top: 10%;\r\n    @media screen and (max-width: 992px) {\r\n        width: 80%;\r\n        left: 10%;\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        width: 90%;\r\n        left: 5%;\r\n        top: 5%;\r\n    }\r\n    padding: 1rem;\r\n    border-radius: .25rem;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    > div > div:first-child > span:last-child {\r\n        font-size: x-large;\r\n        cursor: pointer;\r\n    }\r\n`\r\nconst ModalContentWrapper = styled.div`\r\n    overflow: auto;\r\n    max-height: calc(80vh - 2rem);\r\n    scrollbar-width: thin;\r\n    padding-right: .5rem;\r\n    margin-right: -.5rem;\r\n    &::-webkit-scrollbar {\r\n        width: .4rem;\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n`\r\nconst ModalHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: large;\r\n    border-bottom: 1px solid ${props => props.theme.colors.border};\r\n`\r\nconst ModalBody = styled.div`\r\n    margin: 1rem 0;\r\n`\r\nexport function HelpModal(props) {\r\n    const HelpModalContent = () => (\r\n        props.content.map((item, idx) => {\r\n            const CloseBtn = () => idx === 0\r\n                ? <span onClick={props.handleModalClose}>&times;</span>\r\n                : <></>\r\n            return (\r\n                <>\r\n                    <ModalHeader key={'header' + idx}>\r\n                        <span>{item.title}</span>\r\n                        <CloseBtn />\r\n                    </ModalHeader>\r\n                    <ModalBody key={'body' + idx}>\r\n                        {item.content.map((text, idx) => <p key={idx}>{text}</p>)}\r\n                    </ModalBody>\r\n                </>\r\n            )\r\n        })\r\n    )\r\n\r\n    return (\r\n        <Modal\r\n            open={props.modalOpen}\r\n            onClose={props.handleModalClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n            aria-labelledby=\"help-modal-title\"\r\n            aria-describedby=\"help-modal-description\"\r\n        >\r\n            <Fade in={props.modalOpen}>\r\n                <ModalContainer>\r\n                    <ModalContentWrapper>\r\n                        <HelpModalContent />\r\n                    </ModalContentWrapper>\r\n                </ModalContainer>\r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport const SortableTh = styled.th`\r\n    position: sticky;\r\n    top: 0;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    &:after {\r\n        content: '${props => (\r\n        props.direction\r\n            ? props.direction === 'asc'\r\n                ? ' \\\\25B2'\r\n                : ' \\\\25BC'\r\n            : undefined\r\n    )}';\r\n    }\r\n`\r\nconst StyledTable = styled(Table)`\r\n    width: 100%;\r\n    margin-bottom: 0;\r\n    &, &&& tr {\r\n        color: ${props => props.theme.colors.onSurface};\r\n    }\r\n    th {\r\n        padding: .75rem .25rem;\r\n    }\r\n    th:first-child {\r\n        padding-left: .75rem;\r\n    }\r\n    td {\r\n        vertical-align: middle;\r\n    }\r\n    tr {\r\n        border-bottom: ${props => (\r\n            props.$border\r\n            ? '1px solid ' + props.theme.colors.secondary\r\n            : 'none'\r\n        )};\r\n    }\r\n`\r\nexport const SortableTable = ({\r\n    className,\r\n    children,\r\n    result,\r\n    sortFunc,\r\n    defaultSortKey,\r\n    striped,\r\n    border\r\n}) => {\r\n    const useSortableData = (\r\n        items, config = {\r\n            key: defaultSortKey,\r\n            direction: 'desc'\r\n        }\r\n    ) => {\r\n        const [sortConfig, setSortConfig] = useState(config)\r\n\r\n        const sortedItems = React.useMemo(() => {\r\n            let sortableItems = [...items]\r\n            sortFunc(sortableItems, sortConfig)\r\n            return sortableItems\r\n        }, [items, sortConfig])\r\n\r\n        const requestSort = (key) => {\r\n            let direction = 'desc';\r\n            if (\r\n                sortConfig.key === key &&\r\n                sortConfig.direction === 'desc'\r\n            ) {\r\n                direction = 'asc';\r\n            }\r\n            setSortConfig({ key, direction })\r\n        }\r\n\r\n        return { sortedResult: sortedItems, requestSort, sortConfig }\r\n    }\r\n\r\n    const { sortedResult, requestSort, sortConfig } = useSortableData(result)\r\n\r\n    const getSortDirection = (key) => {\r\n        if (sortedResult.length === 0) {\r\n            return\r\n        }\r\n        return sortConfig.key === key ? sortConfig.direction : undefined\r\n    }\r\n\r\n    return (\r\n        <StyledTable\r\n            className={className}\r\n            striped={striped}\r\n            borderless\r\n            hover\r\n            $border={border}\r\n            size=\"sm\"\r\n        >\r\n            {React.cloneElement(children, {\r\n                requestSort: requestSort,\r\n                getSortDirection: getSortDirection,\r\n                sortedResult: sortedResult,\r\n            })}\r\n        </StyledTable>\r\n    )\r\n}\r\n\r\nconst ResultTableContainer = styled.div`\r\n    vertical-align: top;\r\n    position: absolute;\r\n    width: ${props => props.widthConfig.default};\r\n    margin-left: calc(100% - ${props => props.widthConfig.default});\r\n    padding: 1rem;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-radius: .25rem;\r\n    background-color: ${props => props.theme.colors.surface};\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    box-shadow: 0 0 .15em lightgray;\r\n    @media screen and (max-width: 1360px) {\r\n        width: ${props => props.widthConfig[1360]};\r\n        margin-left: calc(100% - ${props => props.widthConfig[1360]});\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        width: ${props => props.widthConfig[992]};\r\n        margin-left: calc(100% - ${props => props.widthConfig[992]});\r\n        position: relative;\r\n        margin-top: 1rem;\r\n    }\r\n`\r\nexport const TableWrapper = styled.div`\r\n    height: calc(100% - 1.4rem - 1.5rem);\r\n    maring-top: -.5rem;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    scrollbar-width: thin;\r\n    &::-webkit-scrollbar {\r\n        width: .4rem;\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n`\r\nconst StyledSortableTable = styled(SortableTable)`\r\n    font-size: normal;\r\n    img {\r\n        width: 1.8rem; height: 1.8rem;\r\n    }\r\n    td {\r\n        padding-left: .75rem;\r\n    }\r\n`\r\nconst IconWrapper = styled.div`\r\n    svg {\r\n        fill: ${props => props.theme.colors.secondary};\r\n        width: 1.4rem;\r\n        height: 1.4rem;\r\n        margin-left: .4rem;\r\n        cursor: pointer;\r\n        vertical-align: top;\r\n    }\r\n`\r\nexport function ResultTable(props) {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    return (\r\n        <ResultTableContainer widthConfig={props.widthConfig}>\r\n            <ContainerHeader\r\n                title={\r\n                    <div>\r\n                        {pageString.potential.filter.resultTitle}\r\n                        <IconWrapper onClick={props.handleModalOpen}>\r\n                            {HelpIcon}\r\n                        </IconWrapper>\r\n                    </div>\r\n                }\r\n            />\r\n            <TableWrapper>\r\n                <StyledSortableTable\r\n                    result={props.result}\r\n                    sortFunc={props.sortFunc}\r\n                    defaultSortKey={props.defaultSortKey}\r\n                    striped={props.striped}\r\n                >\r\n                    {props.children}\r\n                </StyledSortableTable>\r\n            </TableWrapper>\r\n            <HelpModal\r\n                modalOpen={props.modalOpen}\r\n                handleModalClose={props.handleModalClose}\r\n                content={props.modalContent}\r\n            >\r\n            </HelpModal>\r\n        </ResultTableContainer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\n\r\nconst StyledToggleButton = styled(ToggleButton)`\r\n    &&&& {\r\n        padding: .15rem .15rem;\r\n        border-radius: .25rem;\r\n        border: 1px solid ${props => props.theme.colors.secondaryBorder};\r\n        background-color: ${props => props.theme.colors.surface};\r\n        color: ${props => props.theme.colors.onSurface};\r\n        white-space: nowrap;\r\n        user-select: none;\r\n        &:hover {\r\n            border: 1px solid ${props => props.theme.colors.secondary};\r\n            box-shadow: inset 0 0 .5rem ${props => props.theme.colors.secondary}\r\n                , 0 0 .1rem ${props => props.theme.colors.secondary};\r\n        }\r\n        &.active {\r\n            background-color: ${props => props.theme.colors.secondary};\r\n            color: ${props => props.theme.colors.onSecondary};\r\n        }\r\n        &.focus {\r\n            box-shadow: none;\r\n        }\r\n    }\r\n`\r\nexport const MyToggleButton = ({\r\n    className,\r\n    children,\r\n    type,\r\n    checked,\r\n    onChange,\r\n    value\r\n}) => {\r\n    return (\r\n        <StyledToggleButton\r\n            className={className}\r\n            type={type}\r\n            value={value}\r\n            checked={checked}\r\n            onChange={onChange}\r\n        >\r\n            {children}\r\n        </StyledToggleButton>\r\n    )\r\n}\r\n\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)`\r\n    display: grid;\r\n    gap: .5rem;\r\n    ${props => Object.entries(props.$layoutConfig).map(entry => (\r\n        `@media screen and (min-width: ${entry[0]}px) {\r\n            grid-template-columns: repeat(${entry[1]}, 1fr);\r\n        }\r\n        `\r\n    ))}\r\n`\r\nexport default function MyToggleButtonGroup(props) {\r\n    return (\r\n        <StyledToggleButtonGroup\r\n            type={props.type}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            $layoutConfig={props.layoutConfig}\r\n        >\r\n            {props.children}\r\n        </StyledToggleButtonGroup>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ShowcaseContainer = styled.div`\r\n    display: ${props => props.$hidden ? 'none' : 'block'}\r\n`\r\nexport default function SwitchableShowcase({\r\n    layoutSwitcher,\r\n    localLayoutConfig,\r\n    items\r\n}) {\r\n    const getDefaultLayout = () => {\r\n        const localConfig = localStorage.getItem(localLayoutConfig)\r\n        return (\r\n            localConfig\r\n                ? localConfig\r\n                : items[0].layout\r\n        )\r\n    }\r\n\r\n    const [layout, setLayout] = React.useState(getDefaultLayout)\r\n\r\n    const handleLayoutChange = (toLayout) => () => {\r\n        setLayout(toLayout)\r\n        localStorage.setItem(localLayoutConfig, toLayout)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {React.cloneElement(layoutSwitcher, {\r\n                layout: layout,\r\n                handleLayoutChange: handleLayoutChange,\r\n            })}\r\n            {items.map((item, idx) => (\r\n                <ShowcaseContainer\r\n                    $hidden={layout !== item.layout}\r\n                    key={idx}\r\n                >\r\n                    {item.content}\r\n                </ShowcaseContainer>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport Masonry from 'react-masonry-css';\r\n\r\nconst StyledMasonry = styled(Masonry)`\r\n    display: flex;\r\n    width: auto;\r\n    margin-left: -1rem;\r\n    > div {\r\n        padding-left: 1rem;\r\n    }\r\n`\r\nexport default function MyMasonry(props) {\r\n    return (\r\n        <StyledMasonry\r\n            breakpointCols={props.breakpointCols}\r\n            columnClassName=''\r\n        >\r\n            {props.children}\r\n        </StyledMasonry>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst StyledTable = styled(Table)`\r\n    font-size: .9rem;\r\n    color: ${props => props.theme.colors.onSurface};\r\n    margin: 0;\r\n    > tbody > tr > td {\r\n        padding-left: .75rem;\r\n    }\r\n`\r\nexport default function CardTable({\r\n    className,\r\n    children,\r\n    striped\r\n}) {\r\n    return (\r\n        <StyledTable\r\n            className={className}\r\n            striped={striped}\r\n            borderless\r\n            size=\"sm\"\r\n        >\r\n            {children}\r\n        </StyledTable>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IconButton } from '@material-ui/core';\r\nimport SwitchableShowcase from './SwitchableShowcase';\r\nimport MyMasonry from './MyMasonry';\r\nimport MyAccordion from './MyAccordion';\r\nimport CardTable from './CardTable';\r\nimport { SortableTable, SortableTh, TableWrapper } from './FilterComponents';\r\nimport charTagData from '../gamedata/characterTags.json';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport {\r\n    TypeIcon,\r\n    CategoryIcon,\r\n    RaceIcon,\r\n    BodysizeIcon,\r\n    OppaiIcon,\r\n    RankIcon,\r\n    ElseIcon,\r\n    MasonryViewIcon,\r\n    TableViewIcon\r\n} from './icon';\r\n\r\nconst TextWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    width: 100%;\r\n    min-width: 10rem;\r\n    height: 3.6rem;\r\n    background-image: url(${props => props.$img});\r\n    background-repeat: no-repeat;\r\n    background-size: 6rem 6rem;\r\n    background-position: 0 -1.6rem;\r\n    > div {\r\n        margin-left: 0;\r\n        margin-right: 1rem;\r\n        transition: all 355ms ease;\r\n        text-shadow: 0 0 1px ${props => props.theme.colors.surface},\r\n        -2px 0 1px  ${props => props.theme.colors.surface},\r\n        2px 0 1px  ${props => props.theme.colors.surface},\r\n        0 -2px 1px ${props => props.theme.colors.surface},\r\n        0 2px 1px  ${props => props.theme.colors.surface},\r\n        2px 2px 1px ${props => props.theme.colors.surface},\r\n        2px -2px 1px ${props => props.theme.colors.surface},\r\n        -2px 2px 1px ${props => props.theme.colors.surface},\r\n        -2px -2px 1px ${props => props.theme.colors.surface};\r\n    }\r\n`\r\nconst CardHeader = ({\r\n    className,\r\n    imgId\r\n}) => {\r\n    const { charString } = React.useContext(LanguageContext)\r\n\r\n    return (\r\n        <TextWrapper\r\n            className={className}\r\n            $img={`${process.env.PUBLIC_URL}/img/char_small_${imgId}.png`}\r\n        >\r\n            <div>\r\n                {charString.name[imgId - 1].split(' ').slice(0, -1).join(' ')}\r\n            </div>\r\n            <div>\r\n                {charString.name[imgId - 1].split(' ').slice(-1)[0]}\r\n            </div>\r\n        </TextWrapper>\r\n    )\r\n}\r\n\r\nconst TagWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst IconWrapper = styled.div`\r\n    margin-bottom: .1rem;\r\n    margin-left: .25rem;\r\n    margin-right: .4rem;\r\n    > svg {\r\n        width: 1.2rem;\r\n        fill: ${props => props.theme.colors.secondary};\r\n        color:  ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\nconst CardBody = (props) => {\r\n    const { charString } = React.useContext(LanguageContext)\r\n\r\n    const attrIcons = {\r\n        type: TypeIcon,\r\n        category: CategoryIcon,\r\n        race: RaceIcon,\r\n        body: BodysizeIcon,\r\n        oppai: OppaiIcon,\r\n        rank: RankIcon,\r\n        else: ElseIcon\r\n    }\r\n\r\n    if (!charTagData[props.id].available) {\r\n        return (\r\n            <CardTable striped={true}>\r\n                <tbody><tr><td>\r\n                    {charString.tagWarnMsg}\r\n                </td></tr></tbody>\r\n            </CardTable>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <CardTable striped={true}>\r\n            <tbody>\r\n                {Object.entries(charTagData[props.id]).map((entry, idx) => {\r\n                    if (\r\n                        entry[0] === 'name' ||\r\n                        entry[0] === 'grade' ||\r\n                        entry[0] === 'available'\r\n                    ) {\r\n                        return true\r\n                    }\r\n                    if (entry[0] === 'else') {\r\n                        return (\r\n                            entry[1].map((tag, i) => (\r\n                                <tr key={idx + i + 1}>\r\n                                    <td>\r\n                                        <TagWrapper>\r\n                                            <IconWrapper>\r\n                                                {attrIcons[entry[0]]}\r\n                                            </IconWrapper>\r\n                                            {charString.tags[tag]}\r\n                                        </TagWrapper>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        )\r\n                    }\r\n\r\n                    if (entry[1].length !== 0) {\r\n                        return (\r\n                            <tr key={idx}>\r\n                                <td>\r\n                                    <TagWrapper>\r\n                                        <IconWrapper>\r\n                                            {attrIcons[entry[0]]}\r\n                                        </IconWrapper>\r\n                                        {charString.tags[entry[1]]}\r\n                                    </TagWrapper>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    } else {\r\n                        return true\r\n                    }\r\n                })}\r\n            </tbody>\r\n        </CardTable>\r\n    )\r\n}\r\n\r\nconst StyledAccordion = styled(MyAccordion)`\r\n    && {\r\n        && {\r\n            margin-bottom: 1rem;\r\n        }\r\n        border: 1px solid ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n        box-shadow: 0 0 .15em lightgray;\r\n        > .MuiAccordionSummary-root {\r\n            padding: 0;\r\n            border-bottom-right-radius: 0;\r\n            border-bottom-left-radius: 0;\r\n            border-bottom: 0px solid ${props => props.theme.colors.border};\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid ${props => props.theme.colors.border};\r\n        }\r\n        .MuiAccordionSummary-content {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            padding: 0;\r\n            margin: 0;\r\n        }\r\n        .MuiAccordionDetails-root {\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n    }\r\n`\r\nconst CharAccordion = (props) => {\r\n    const [isExpanded, setExpanded] = React.useState(false)\r\n\r\n    return (\r\n        <StyledAccordion\r\n            expanded={isExpanded}\r\n            onChange={() => setExpanded(!isExpanded)}\r\n            square={false}\r\n            title={props.header}\r\n            content={props.body}\r\n        />\r\n    )\r\n}\r\n\r\nconst LayoutBtnContainer = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: -4rem;\r\n    @media screen and (max-width: 410px) {\r\n        font-size: 0;\r\n    }\r\n`\r\nconst StyledBtn = styled(IconButton)`\r\n    padding: .75rem .5rem;\r\n    svg {\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n        fill: ${props => (\r\n            props.$active\r\n                ? props.theme.colors.secondary\r\n                : props.theme.colors.onSurface\r\n        )};\r\n    }\r\n    &:hover svg {\r\n        fill: ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\nconst LayoutSwitcher = (props) => {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    return (\r\n        <LayoutBtnContainer>\r\n            {pageString.enlist.layout}\r\n            <StyledBtn\r\n                $active={props.layout === 'Masonry'}\r\n                onClick={props.handleLayoutChange('Masonry')}\r\n            >\r\n                {MasonryViewIcon}\r\n            </StyledBtn>\r\n            <StyledBtn\r\n                $active={props.layout === 'Table'}\r\n                onClick={props.handleLayoutChange('Table')}\r\n            >\r\n                {TableViewIcon}\r\n            </StyledBtn>\r\n        </LayoutBtnContainer>\r\n    )\r\n}\r\n\r\nconst CharMasnory = () => {\r\n    const { charString } = React.useContext(LanguageContext)\r\n\r\n    const breakpointColumnsConfig = {\r\n        default: 6,\r\n        1360: 5,\r\n        1200: 4,\r\n        992: 3,\r\n        600: 2\r\n    }\r\n\r\n    return (\r\n        <MyMasonry\r\n            breakpointCols={breakpointColumnsConfig}\r\n        >\r\n            {charString.name.slice(0, charString.name.length - 1)\r\n                .map((char, idx) => (\r\n                    <CharAccordion\r\n                        header={<CardHeader imgId={idx + 1} />}\r\n                        body={<CardBody id={idx} />}\r\n                        key={idx}\r\n                    />\r\n                ))}\r\n        </MyMasonry>\r\n    )\r\n}\r\n\r\nconst StyledTh = styled(SortableTh)`\r\n    background-color:  ${props => props.theme.colors.secondary};\r\n    color:  ${props => props.theme.colors.onSecondary};\r\n    white-space: nowrap;\r\n`\r\nexport const CharCardHeader = styled(CardHeader)`\r\n    @media screen and (min-width: ${props => (\r\n        props.$textWrapConfig\r\n    )}px) {\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        > div {\r\n            margin-left: 7rem\r\n        }\r\n        > div:last-child {\r\n            margin-left: -.6rem;\r\n        }\r\n    }\r\n`\r\nconst TableContent = (props) => {\r\n    const { userLanguage, charString } = React.useContext(LanguageContext)\r\n\r\n    const gradeToRarity = (grade) => (\r\n        grade === 0 ? 'N'\r\n            : grade === 1 ? 'R'\r\n                : grade === 2 ? 'SR'\r\n                    : 'SSR'\r\n    )\r\n\r\n    const TableHeader = () => (\r\n        <thead>\r\n            <tr>\r\n                {Object.entries(charString.tagAttributes)\r\n                    .map((entry, idx) => (\r\n                        <StyledTh\r\n                            onClick={() => props.requestSort(entry[0])}\r\n                            direction={props.getSortDirection(entry[0])}\r\n                            key={idx}\r\n                        >\r\n                            {entry[1]}\r\n                        </StyledTh>\r\n                    ))}\r\n            </tr>\r\n        </thead>\r\n    )\r\n\r\n    const cardTextWrapConfig = {\r\n        'zh-TW': 900,\r\n        'en': 1300,\r\n    }\r\n\r\n    const TableBody = () => (\r\n        <tbody>\r\n            {props.sortedResult.map(char => {\r\n                if (!char.available) {\r\n                    return (\r\n                        <tr key={char.name}>\r\n                            <td>\r\n                                <CharCardHeader\r\n                                    imgId={char.name + 1}\r\n                                    $textWrapConfig={\r\n                                        cardTextWrapConfig[userLanguage]\r\n                                    }\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                                {gradeToRarity(char.grade)}\r\n                            </td>\r\n                            <td>\r\n                                {charString.tags[char.type]}\r\n                            </td>\r\n                            <td>\r\n                                {charString.tags[char.category]}\r\n                            </td>\r\n                            <td colSpan='5'>\r\n                                {charString.tagWarnMsg}\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }\r\n\r\n                return (\r\n                    <tr key={char.name}>\r\n                        {Object.entries(char).map((entry, j) => {\r\n                            if (entry[0] === 'available') {\r\n                                return true\r\n                            }\r\n                            if (entry[0] === 'name') {\r\n                                return (\r\n                                    <td key={j}>\r\n                                        <CharCardHeader\r\n                                            imgId={char.name + 1}\r\n                                            $textWrapConfig={\r\n                                                cardTextWrapConfig[userLanguage]\r\n                                            }\r\n                                        />\r\n                                    </td>\r\n                                )\r\n                            }\r\n                            if (entry[0] === 'grade') {\r\n                                return (\r\n                                    <td key={j}>\r\n                                        {gradeToRarity(entry[1])}\r\n                                    </td>\r\n                                )\r\n                            }\r\n                            if (entry[0] === 'else') {\r\n                                return (\r\n                                    <td key={j} nowrap='nowrap'>\r\n                                        {entry[1].map(tag => (\r\n                                            charString.tags[tag]\r\n                                        )).join(', ')}\r\n                                    </td>\r\n                                )\r\n                            }\r\n\r\n                            let tag\r\n                            if (entry[1].length === 0) {\r\n                                tag = '-'\r\n                            } else {\r\n                                tag = charString.tags[entry[1]]\r\n                            }\r\n                            return <td key={j} nowrap='nowrap'>{tag}</td>\r\n                        })}\r\n                    </tr>\r\n                )\r\n            })}\r\n        </tbody>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <TableHeader />\r\n            <TableBody />\r\n        </>\r\n    )\r\n}\r\n\r\nconst CharTableWrapper = styled(TableWrapper)`\r\n    overflow-x: auto;\r\n    height: calc(100vh - 12rem);\r\n`\r\nconst CharTable = () => {\r\n    const { charString } = React.useContext(LanguageContext)\r\n\r\n    const sortFunc = (sortableItems, sortConfig) => {\r\n        sortableItems.sort((a, b) => {\r\n            let aKey\r\n            let bKey\r\n            if (sortConfig.key === 'else') {\r\n                aKey = a[sortConfig.key].join('')\r\n                bKey = b[sortConfig.key].join('')\r\n            } else if (sortConfig.key === 'name') {\r\n                aKey = charString.name[a[sortConfig.key]]\r\n                bKey = charString.name[b[sortConfig.key]]\r\n            } else {\r\n                aKey = a[sortConfig.key]\r\n                bKey = b[sortConfig.key]\r\n            }\r\n            if (aKey < bKey) {\r\n                return sortConfig.direction === 'asc' ? -1 : 1\r\n            }\r\n            if (aKey > bKey) {\r\n                return sortConfig.direction === 'asc' ? 1 : -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n\r\n    return (\r\n        <CharTableWrapper>\r\n            <SortableTable\r\n                sortFunc={sortFunc}\r\n                defaultSortKey={'grade'}\r\n                result={charTagData}\r\n                striped={false}\r\n                border={true}\r\n            >\r\n                <TableContent />\r\n            </SortableTable>\r\n        </CharTableWrapper>\r\n    )\r\n}\r\n\r\nexport default function CharShowcase() {\r\n    return (\r\n        <SwitchableShowcase\r\n            localLayoutConfig='enlist-character-layout'\r\n            layoutSwitcher={<LayoutSwitcher />}\r\n            items={[\r\n                { layout: 'Masonry', content: <CharMasnory /> },\r\n                { layout: 'Table', content: <CharTable /> },\r\n            ]}\r\n        />\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Snackbar, Tooltip, Zoom } from '@material-ui/core';\r\nimport { Form } from 'react-bootstrap';\r\nimport { ContainerHeader, FilterPanel, ResultTable, SortableTh } from './FilterComponents';\r\nimport MyToggleButtonGroup, { MyToggleButton } from './MyToggleButtonGroup';\r\nimport { CharCardHeader } from './CharShowcase';\r\nimport './tooltip.css';\r\nimport tagData from '../gamedata/tags.json';\r\nimport charTagData from '../gamedata/characterTags.json';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport {\r\n    ClearIcon,\r\n    TagIcon,\r\n    ClockIcon,\r\n    TypeIcon,\r\n    CategoryIcon,\r\n    RaceIcon,\r\n    BodysizeIcon,\r\n    OppaiIcon,\r\n    RankIcon,\r\n    ElseIcon,\r\n    StarIcon,\r\n    AlertIcon\r\n} from './icon';\r\n\r\nconst StyledFilterPanel = styled(FilterPanel)`\r\n    > div:nth-child(3) {\r\n        margin-top: 1rem;\r\n    }\r\n`\r\nconst IconWrapper = styled.div`\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        margin-right: .4rem;\r\n        margin-bottom: .2rem;\r\n        fill: ${props => props.theme.colors.onSurface};\r\n        color: ${props => props.theme.colors.onSurface};\r\n    }\r\n`\r\nconst ClearIconWrapper = styled(IconWrapper)`\r\n    cursor: pointer;\r\n    svg {\r\n        margin: 0;\r\n    }\r\n`\r\nconst StyledToggleButton = styled(MyToggleButton)`\r\n    svg {\r\n        width: 1.6rem;\r\n        height: 1.4rem;\r\n        vertical-align: middle;\r\n        fill: ${props => props.theme.colors.secondary};\r\n        color: ${props => props.theme.colors.secondary};\r\n    }\r\n    &.active > svg {\r\n        fill: ${props => props.theme.colors.onSecondary};\r\n        color: ${props => props.theme.colors.onSecondary};\r\n    }\r\n`\r\nconst Select = styled(Form.Control)`\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    border-radius: .25rem;\r\n    padding: .1rem;\r\n    border: 1px solid ${props => props.theme.colors.secondary};\r\n    &:focus {\r\n        box-shadow: 0 0 .4rem ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\nconst CharFilterPanel = (props) => {\r\n    const {\r\n        userLanguage,\r\n        pageString,\r\n        charString\r\n    } = React.useContext(LanguageContext)\r\n\r\n    const attrIcons = {\r\n        type: TypeIcon,\r\n        category: CategoryIcon,\r\n        race: RaceIcon,\r\n        body: BodysizeIcon,\r\n        oppai: OppaiIcon,\r\n        rank: RankIcon,\r\n        else: ElseIcon\r\n    }\r\n\r\n    const widthConfig = {\r\n        default: '40%',\r\n        1360: '52%',\r\n        992: '100%',\r\n    }\r\n\r\n    const btnLayoutConfig = userLanguage === 'en'\r\n        ? {\r\n            990: 3,\r\n            768: 4,\r\n            624: 3,\r\n            410: 2,\r\n            0: 2\r\n        }\r\n        : {\r\n            768: 5,\r\n            624: 4,\r\n            410: 3,\r\n            0: 2\r\n        }\r\n\r\n    return (\r\n        <StyledFilterPanel widthConfig={widthConfig}>\r\n            <ContainerHeader\r\n                title={\r\n                    <div>\r\n                        <IconWrapper>\r\n                            {TagIcon}\r\n                        </IconWrapper>\r\n                        {pageString.enlist.tagSelectTitle}\r\n                    </div>\r\n                }\r\n                end={\r\n                    <ClearIconWrapper\r\n                        onClick={() => props.filterBy([])}\r\n                    >\r\n                        {ClearIcon}\r\n                    </ClearIconWrapper>\r\n                }\r\n            />\r\n            <MyToggleButtonGroup\r\n                type='checkbox'\r\n                value={props.filterBtnValue}\r\n                onChange={props.filterBy}\r\n                layoutConfig={btnLayoutConfig}\r\n            >\r\n                {tagData.map((item, idx) => (\r\n                    <StyledToggleButton\r\n                        value={idx}\r\n                        key={idx}\r\n                    >\r\n                        {attrIcons[item.icon]}\r\n                        {charString.tags[item.id]}\r\n                    </StyledToggleButton>\r\n                ))}\r\n            </MyToggleButtonGroup>\r\n            <ContainerHeader\r\n                title={\r\n                    <div>\r\n                        <IconWrapper>\r\n                            {ClockIcon}\r\n                        </IconWrapper>\r\n                        {pageString.enlist.timeSelectTitle}\r\n                    </div>\r\n                }\r\n            />\r\n            <Form inline>\r\n                <Form.Group>\r\n                    <Select\r\n                        as=\"select\"\r\n                        custom\r\n                        size=\"sm\"\r\n                        defaultValue='9'\r\n                        onChange={props.handleEnlistHour}\r\n                    >\r\n                        {[...Array(10).keys()].slice(1)\r\n                            .map(i => <option key={i}>{i}</option>)}\r\n                    </Select>\r\n                    {'：'}\r\n                    <Select\r\n                        as=\"select\"\r\n                        custom\r\n                        size=\"sm\"\r\n                        defaultValue='00'\r\n                    >\r\n                        {['00', '10', '20', '30', '40', '50']\r\n                            .map(i => <option key={i}>{i}</option>)}\r\n                    </Select>\r\n                </Form.Group>\r\n            </Form>\r\n        </StyledFilterPanel>\r\n    )\r\n}\r\n\r\nconst CharCardWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    margin-left: -.75rem;\r\n`\r\nconst StyledCharCard = styled(CharCardHeader)`\r\n`\r\nconst StarIconWrapper = styled(IconWrapper)`\r\n    display: flex;\r\n    ${props => props.$hidden ? 'visibility: hidden;' : undefined}\r\n    align-items: center;\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        margin: 0;\r\n        margin-left: -.6rem;\r\n    }\r\n`\r\nfunction TableContent(props) {\r\n    const {\r\n        userLanguage,\r\n        pageString,\r\n        charString\r\n    } = React.useContext(LanguageContext)\r\n\r\n    const TagTooltip = (props) => {\r\n        const texts = props.char.distinctTagCombs\r\n            .map(comb => comb.map(i => charString.tags[i]).join(', '))\r\n            .join('\\n')\r\n\r\n        return (\r\n            <StarIconWrapper\r\n                $hidden={props.char.distinctTagCombs.length === 0}\r\n            >\r\n                <Tooltip title={texts} TransitionComponent={Zoom} arrow>\r\n                    {StarIcon}\r\n                </Tooltip>\r\n            </StarIconWrapper>\r\n        )\r\n    }\r\n\r\n    const gradeToRarity = (grade) => (\r\n        grade === 0 ? 'N'\r\n            : grade === 1 ? 'R'\r\n                : grade === 2 ? 'SR'\r\n                    : 'SSR'\r\n    )\r\n\r\n    const cardTextWrapConfig = {\r\n        'zh-TW': 1360,\r\n        'en': 1360,\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <thead>\r\n                <tr>\r\n                    {pageString.enlist.tableHead\r\n                        .map((item, idx) => (\r\n                            <SortableTh\r\n                                key={idx}\r\n                                onClick={() => props.requestSort(item.attr)}\r\n                                direction={props.getSortDirection(item.attr)}\r\n                            >\r\n                                {item.title}\r\n                            </SortableTh>\r\n                        ))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.sortedResult.map((item, idx) => (\r\n                    <tr key={idx}>\r\n                        <td>\r\n                            <CharCardWrapper>\r\n                                <StyledCharCard\r\n                                    imgId={item.name + 1}\r\n                                    $textWrapConfig={\r\n                                        cardTextWrapConfig[userLanguage]\r\n                                    }\r\n                                />\r\n                                <TagTooltip char={item} />\r\n                            </CharCardWrapper>\r\n                        </td>\r\n                        <td>{gradeToRarity(item.grade)}</td>\r\n                        <td>{charString.tags[item.type]}</td>\r\n                        <td>\r\n                            {\r\n                                item.appliedTags\r\n                                    .map(i => charString.tags[i]).join(', ')\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </>\r\n    )\r\n}\r\n\r\nconst StyledSnackbar = styled(Snackbar)`\r\n    > div {\r\n        display: flex;\r\n        flex-direction: row-reverse;\r\n        justify-content: center;\r\n        background-color: #ff9800;\r\n        font-size: medium;\r\n    }\r\n    .MuiSnackbarContent-action {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    svg {\r\n        width: 1.4rem;\r\n        height: 1.4rem;\r\n        margin-right: .4rem;\r\n        fill: #fff;\r\n    }\r\n`\r\nconst MySnackbar = ({\r\n    open,\r\n    onClose,\r\n    message\r\n}) => (\r\n    <StyledSnackbar\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={onClose}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        message={message}\r\n        action={AlertIcon}\r\n    />\r\n)\r\n\r\nconst FilterContainer = styled.div`\r\n    display: flex;\r\n    @media screen and (max-width: 992px) {\r\n        display: block;\r\n    }\r\n`\r\nexport default function CharFilter() {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    const [state, setState] = useState({\r\n        filterBtnValue: [],\r\n        characters: [],\r\n        enlistHour: '9',\r\n        isSnackbarOpen: false,\r\n    })\r\n\r\n    // filter characters by query tags\r\n    const filterBy = useCallback((val) => {\r\n        if (val.length > 5) {\r\n            setState((state) => ({\r\n                ...state,\r\n                isSnackbarOpen: true\r\n            }))\r\n            return;\r\n        }\r\n        if (val.length === 0) {\r\n            setState((state) => ({\r\n                ...state,\r\n                filterBtnValue: val,\r\n                characters: []\r\n            }))\r\n            return;\r\n        }\r\n\r\n        function* combinations(elements, num) {\r\n            for (let i = 0; i < elements.length; i++) {\r\n                if (num === 1)\r\n                    yield [elements[i]]\r\n                else {\r\n                    const remaining = combinations(\r\n                        elements.slice(i + 1, elements.length),\r\n                        num - 1\r\n                    )\r\n                    for (let next of remaining)\r\n                        yield [elements[i], ...next]\r\n                }\r\n            }\r\n        }\r\n\r\n        const curVal = val.sort()\r\n        const filterableChars = charTagData.filter(char => char.available)\r\n        let filteredChars = []\r\n        for (let i = curVal.length; i > 0; i--) {\r\n            // generate combinations\r\n            const tagCombs = Array.from(combinations(curVal, i))\r\n            // screen out ineligible characters\r\n            tagCombs.forEach(tags => {\r\n                // filter by rank and time\r\n                let survivors = JSON.parse(JSON.stringify(filterableChars))\r\n                if (!tags.includes(20)) {\r\n                    survivors = survivors.filter(char => char.grade < 3)\r\n                    if (state.enlistHour < 4 && !tags.includes(19)) {\r\n                        survivors = survivors.filter(char => char.grade < 2)\r\n                    }\r\n                }\r\n                // filter by tags\r\n                let appliedTagsNum = 0\r\n                tagData.forEach((tag) => {\r\n                    if (appliedTagsNum === tags.length || survivors.length === 0) {\r\n                        return false\r\n                    }\r\n                    if (tags.includes(tag.id)) {\r\n                        appliedTagsNum++\r\n                        if (tag.id < 21) {\r\n                            survivors = survivors.filter(c => c[tag.icon] === tag.id)\r\n                        } else {\r\n                            survivors = survivors.filter(c => c[tag.icon].includes(tag.id))\r\n                        }\r\n                    }\r\n                })\r\n                // whether any three (or fewer) tags can lead to only one characters\r\n                if (survivors.length === 1 && appliedTagsNum <= 3) {\r\n                    let isExist = false\r\n                    filteredChars.forEach(existChar => {\r\n                        if (existChar.name === survivors[0].name) {\r\n                            isExist = true\r\n                            for (\r\n                                let j = existChar.distinctTagCombs.length - 1;\r\n                                j >= 0;\r\n                                j--\r\n                            ) {\r\n                                if (\r\n                                    tags.every(t => existChar.distinctTagCombs[j].includes(t))\r\n                                ) {\r\n                                    existChar.distinctTagCombs.splice(j, 1)\r\n                                }\r\n                            }\r\n                            existChar.distinctTagCombs.push(tags)\r\n                            return false\r\n                        }\r\n                    })\r\n                    if (!isExist) {\r\n                        filteredChars.push({\r\n                            name: survivors[0].name,\r\n                            grade: survivors[0].grade,\r\n                            type: survivors[0].type,\r\n                            category: survivors[0].category,\r\n                            appliedTags: tags,\r\n                            distinctTagCombs: [tags]\r\n                        })\r\n                    }\r\n                } else {\r\n                    survivors.forEach(char => {\r\n                        let isExist = false\r\n                        filteredChars.forEach(existChar => {\r\n                            if (existChar.name === char.name) {\r\n                                isExist = true\r\n                                return false\r\n                            }\r\n                        })\r\n                        if (!isExist) {\r\n                            filteredChars.push({\r\n                                name: char.name,\r\n                                grade: char.grade,\r\n                                type: char.type,\r\n                                category: char.category,\r\n                                appliedTags: tags,\r\n                                distinctTagCombs: []\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        setState((state) => ({\r\n            ...state,\r\n            filterBtnValue: val,\r\n            characters: filteredChars\r\n        }))\r\n    }, [state.enlistHour])\r\n\r\n    const handleEnlistHour = (event) => {\r\n        setState((state) => ({\r\n            ...state,\r\n            enlistHour: event.target.value\r\n        }));\r\n    }\r\n    useEffect(\r\n        () => filterBy(state.filterBtnValue),\r\n        [filterBy, state.filterBtnValue, state.enlistHour]\r\n    )\r\n\r\n    const sortFunc = (sortableItems, sortConfig) => {\r\n        sortableItems.sort((a, b) => {\r\n            let aKey\r\n            let bKey\r\n            if (sortConfig.key === 'appliedTags') {\r\n                aKey = a[sortConfig.key].join('')\r\n                bKey = b[sortConfig.key].join('')\r\n            } else {\r\n                aKey = a[sortConfig.key]\r\n                bKey = b[sortConfig.key]\r\n            }\r\n            if (aKey < bKey) {\r\n                return sortConfig.direction === 'asc' ? -1 : 1\r\n            }\r\n            if (aKey > bKey) {\r\n                return sortConfig.direction === 'asc' ? 1 : -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const handleSnackbarClose = () => {\r\n        setState((prevState) => ({\r\n            filterBtnValue: prevState.filterBtnValue,\r\n            characters: prevState.characters,\r\n            enlistHour: prevState.enlistHour,\r\n            isSnackbarOpen: false,\r\n        }))\r\n    }\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    const tableWidthConfig = {\r\n        default: 'calc(60% - 1rem)',\r\n        1360: 'calc(48% - 1rem)',\r\n        992: '100%',\r\n    }\r\n\r\n    return (\r\n        <FilterContainer>\r\n            <CharFilterPanel\r\n                filterBy={filterBy}\r\n                handleEnlistHour={handleEnlistHour}\r\n                filterBtnValue={state.filterBtnValue}\r\n            />\r\n            <MySnackbar\r\n                open={state.isSnackbarOpen}\r\n                onClose={handleSnackbarClose}\r\n                message={pageString.enlist.snackbarMsg}\r\n            />\r\n            <ResultTable\r\n                result={state.characters}\r\n                sortFunc={sortFunc}\r\n                defaultSortKey={'grade'}\r\n                modalOpen={modalOpen}\r\n                handleModalOpen={() => setModalOpen(true)}\r\n                handleModalClose={() => setModalOpen(false)}\r\n                modalContent={pageString.enlist.modal}\r\n                widthConfig={tableWidthConfig}\r\n                striped={true}\r\n            >\r\n                <TableContent />\r\n            </ResultTable>\r\n        </FilterContainer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Badge } from \"react-bootstrap\"\r\nimport SwitchableShowcase from './SwitchableShowcase';\r\nimport MyMasonry from './MyMasonry';\r\nimport MyAccordion from './MyAccordion';\r\nimport CardTable from './CardTable';\r\nimport { SortableTable, SortableTh, TableWrapper } from './FilterComponents';\r\nimport itemDropData from '../gamedata/itemDrop.json';\r\nimport stageDropData from '../gamedata/stageDrop.json';\r\nimport { LanguageContext } from './LanguageProvider';\r\n\r\nconst StyledCardHeader = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nconst ItemImg = styled.img`\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n  margin-right: .4rem;\r\n  user-select: none;\r\n`\r\nconst StyledHeader = styled.div`\r\n  white-space: nowrap;\r\n  font-size: medium;\r\n  font-weight: normal;\r\n`\r\nconst ItemCardHeader = ({\r\n    className,\r\n    id\r\n}) => {\r\n    const { itemString } = React.useContext(LanguageContext)\r\n\r\n    return (\r\n        <StyledCardHeader\r\n            className={className}\r\n        >\r\n            <ItemImg\r\n                src={`${process.env.PUBLIC_URL}/img/item_${id}.png`}\r\n                alt=''\r\n            />\r\n            <StyledHeader>\r\n                {itemString.name[id]}\r\n            </StyledHeader>\r\n        </StyledCardHeader>\r\n    )\r\n}\r\n\r\nconst EnergyIcon = styled.img`\r\n  width: 1.2rem;\r\n  height: 1.2rem;\r\n`\r\nconst CardBodyContnet = (props) => {\r\n    const { pageString, itemString } = React.useContext(LanguageContext)\r\n\r\n    if (props.drop.length === 0) {\r\n        return (\r\n            <tbody><tr><td>\r\n                {pageString.potential.overview.notAvailableMsg}\r\n            </td></tr></tbody>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <tbody>\r\n            {props.drop.map((drop, idx) => (\r\n                <tr key={idx}>\r\n                    <td>\r\n                        {`${drop.chapter}-${drop.stage}`}\r\n                    </td>\r\n                    <td>{itemString.rarity[drop.rarity]}</td>\r\n                    <td>\r\n                        <EnergyIcon\r\n                            src={`${process.env.PUBLIC_URL}/img/energy.png`}\r\n                            alt={pageString.potential.filter.tableHead[2]}\r\n                        />\r\n                        {drop.energy}\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nconst ItemAccordion = styled(MyAccordion)`\r\n    && {\r\n        && {\r\n            margin-bottom: 1rem;\r\n        }\r\n        border: 1px solid ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n        box-shadow: 0 0 .15em lightgray;\r\n        > .MuiAccordionSummary-root {\r\n            padding: .75rem 1.25rem;\r\n            border-bottom-right-radius: 0;\r\n            border-bottom-left-radius: 0;\r\n            border-bottom: 0px solid ${props => props.theme.colors.border};\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid ${props => props.theme.colors.border};\r\n        }\r\n        .MuiAccordionSummary-content {\r\n            display: flex;\r\n            justify-content: center;\r\n            margin: 0;\r\n        }\r\n        .MuiAccordionDetails-root {\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n    }\r\n`\r\nconst ItemCard = (props) => {\r\n    const [isExpanded, setExpanded] = React.useState(false)\r\n\r\n    return (\r\n        <ItemAccordion\r\n            expanded={isExpanded}\r\n            onChange={() => setExpanded(!isExpanded)}\r\n            square={false}\r\n            title={props.header}\r\n            content={props.body}\r\n        />\r\n    )\r\n}\r\n\r\nconst LayoutBtnContainer = styled.div`\r\n    margin-bottom : 1rem;\r\n    > span:last-child button {\r\n        margin: 0;\r\n    }\r\n`\r\nconst BtnWrapper = styled.span`\r\n    > button {\r\n        padding: .4rem .6rem;\r\n        margin-right: .6rem;\r\n        background-color: ${props => (\r\n            props.$active\r\n                ? props.theme.colors.secondary\r\n                : 'lightgray'\r\n        )};\r\n        color: ${props => props.theme.colors.onSecondary};\r\n    }\r\n    > button:hover {\r\n        background-color: ${props => props.theme.colors.secondary};\r\n        color: ${props => props.theme.colors.onSecondary};\r\n    }\r\n`\r\nconst LayoutSwitcher = (props) => {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n    return (\r\n        <LayoutBtnContainer>\r\n            <BtnWrapper\r\n                $active={props.layout === 'Masonry'}\r\n            >\r\n                <Button\r\n                    onClick={props.handleLayoutChange('Masonry')}\r\n                >\r\n                    {pageString.potential.overview.layout.byItem}\r\n                </Button>\r\n            </BtnWrapper>\r\n            <BtnWrapper\r\n                $active={props.layout === 'Table'}\r\n            >\r\n                <Button\r\n                    onClick={props.handleLayoutChange('Table')}\r\n                >\r\n                    {pageString.potential.overview.layout.byStage}\r\n                </Button>\r\n            </BtnWrapper>\r\n        </LayoutBtnContainer>\r\n    )\r\n}\r\n\r\nconst ItemMasonry = () => {\r\n    const breakpointColumnsConfig = {\r\n        default: 6,\r\n        1360: 5,\r\n        1200: 4,\r\n        992: 3,\r\n        768: 2\r\n    };\r\n\r\n    return (\r\n        <MyMasonry\r\n            breakpointCols={breakpointColumnsConfig}\r\n        >\r\n            {itemDropData.map((item, idx) => (\r\n                <ItemCard\r\n                    key={idx}\r\n                    header={\r\n                        <ItemCardHeader\r\n                            id={item.id}\r\n                        />\r\n                    }\r\n                    body={\r\n                        <CardTable striped={true}>\r\n                            <CardBodyContnet\r\n                                drop={item.drop}\r\n                            />\r\n                        </CardTable>\r\n                    }\r\n                />\r\n            ))}\r\n        </MyMasonry>\r\n    )\r\n}\r\n\r\nconst StyledTh = styled(SortableTh)`\r\n    background-color:  ${props => props.theme.colors.secondary};\r\n    color:  ${props => props.theme.colors.onSecondary};\r\n    white-space: nowrap;\r\n    ${props => props.$sortable ? true : 'cursor: default;'}\r\n`\r\nconst ItemWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-wrap: nowrap;\r\n    margin-right: .8rem;\r\n    div {\r\n        font-size: 1rem;\r\n    }\r\n    img {\r\n        width: 2rem;\r\n        height: 2rem;\r\n    }\r\n`\r\nconst ItemsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    > div:last-child {\r\n        margin: 0;\r\n    }\r\n`\r\nconst StyledBadge = styled(Badge)`\r\n    background-color: lightgray;\r\n    color: black;\r\n    margin-left: .4rem;\r\n`\r\nconst TableContent = (props) => {\r\n    const { pageString, itemString } = React.useContext(LanguageContext)\r\n\r\n    const TableHeader = () => (\r\n        <thead>\r\n            <tr>\r\n                {Object.entries(pageString.potential.overview.tableHead)\r\n                    .map((entry, idx) => {\r\n                        const sortable = entry[0] === 'stage' || entry[0] === 'energy'\r\n                        let requestSort\r\n                        let getSortDirection\r\n                        if (sortable) {\r\n                            requestSort = () => props.requestSort(entry[0])\r\n                            getSortDirection = props.getSortDirection(entry[0])\r\n                        }\r\n\r\n                        return (\r\n                            <StyledTh\r\n                                onClick={requestSort}\r\n                                direction={getSortDirection}\r\n                                key={idx}\r\n                                $sortable={sortable}\r\n                            >\r\n                                {entry[1]}\r\n                            </StyledTh>\r\n                        )\r\n                    })}\r\n            </tr>\r\n        </thead>\r\n    )\r\n\r\n    const TableBody = () => (\r\n        <tbody>\r\n            {props.sortedResult.map((stage, idx) => {\r\n                const itemTd = (items) => (\r\n                    <td>\r\n                        <ItemsContainer>\r\n                            {items.length === 0\r\n                                ? undefined\r\n                                : items.map((item, i) => (\r\n                                    <ItemWrapper key={i}>\r\n                                        <ItemCardHeader id={item.id} />\r\n                                        <StyledBadge pill>\r\n                                            {itemString.rarity[item.rarity]}\r\n                                        </StyledBadge>\r\n                                    </ItemWrapper>\r\n                                ))}\r\n                        </ItemsContainer>\r\n                    </td>\r\n                )\r\n\r\n                return (\r\n                    <tr key={idx}>\r\n                        <td>\r\n                            {`${stage.chapter}-${stage.stage}`}\r\n                        </td>\r\n                        {itemTd(stage.materials)}\r\n                        {itemTd(stage.trainItems)}\r\n                        {itemTd(stage.expPotions)}\r\n                        <td>{stage.energy}</td>\r\n                    </tr>\r\n                )\r\n            })}\r\n        </tbody>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <TableHeader />\r\n            <TableBody />\r\n        </>\r\n    )\r\n}\r\n\r\nconst ItemTableWrapper = styled(TableWrapper)`\r\n    overflow-x: auto;\r\n    height: calc(100vh - 14.5rem);\r\n`\r\nconst ItemTable = () => {\r\n    const sortFunc = (sortableItems, sortConfig) => {\r\n        const toStageKey = key => {\r\n            return (\r\n                parseInt(key.chapter) * 1000 +\r\n                parseInt(key.stage.split(' ')[0]) * 10 +\r\n                (key.stage.includes('free') ? 1 : 0) +\r\n                (key.stage.includes('-') ? parseInt(key.stage.split('-')[1]) : 0)\r\n            )\r\n        }\r\n\r\n        sortableItems.sort((a, b) => {\r\n            let aKey\r\n            let bKey\r\n            if (sortConfig.key === 'stage') {\r\n                aKey = toStageKey(a)\r\n                bKey = toStageKey(b)\r\n            } else {\r\n                aKey = a[sortConfig.key]\r\n                bKey = b[sortConfig.key]\r\n            }\r\n            if (aKey < bKey) {\r\n                return sortConfig.direction === 'asc' ? -1 : 1\r\n            }\r\n            if (aKey > bKey) {\r\n                return sortConfig.direction === 'asc' ? 1 : -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ItemTableWrapper>\r\n            <SortableTable\r\n                sortFunc={sortFunc}\r\n                defaultSortKey={'stage'}\r\n                result={stageDropData}\r\n                striped={false}\r\n                border={true}\r\n            >\r\n                <TableContent />\r\n            </SortableTable>\r\n        </ItemTableWrapper>\r\n    )\r\n}\r\n\r\nexport default function ItemShowcase() {\r\n    return (\r\n        <SwitchableShowcase\r\n            localLayoutConfig='potential-item-layout'\r\n            layoutSwitcher={<LayoutSwitcher />}\r\n            items={[\r\n                { layout: 'Masonry', content: <ItemMasonry /> },\r\n                { layout: 'Table', content: <ItemTable /> },\r\n            ]}\r\n        />\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ContainerHeader, FilterPanel, ResultTable, SortableTh } from './FilterComponents';\r\nimport MyToggleButtonGroup, {MyToggleButton} from './MyToggleButtonGroup';\r\nimport itemDropData from '../gamedata/itemDrop.json';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport { ClearIcon } from './icon';\r\n\r\nconst ClearIconWrapper = styled.div`\r\n    cursor: pointer;\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n    }\r\n`\r\nconst StyledToggleButton = styled(MyToggleButton)`\r\n    font-size: .85rem;\r\n    > img {\r\n        width: 2.26rem; height: 2.26rem;\r\n    }\r\n`\r\nconst ItemFilterPanel = (props) => {\r\n    const { userLanguage, pageString, itemString } = React.useContext(LanguageContext)\r\n\r\n    const widthConfig = {\r\n        default: '60%',\r\n        1360: '62%',\r\n        992: '100%',\r\n    }\r\n\r\n    const btnLayoutConfig = userLanguage === 'en'\r\n        ? {\r\n            1360: 4,\r\n            992: 3,\r\n            768: 4,\r\n            624: 3,\r\n            0: 2\r\n        }\r\n        : {\r\n            1360: 5,\r\n            992: 4,\r\n            768: 5,\r\n            624: 4,\r\n            410: 3,\r\n            0: 2,\r\n        }\r\n\r\n    return (\r\n        <FilterPanel widthConfig={widthConfig}>\r\n            <ContainerHeader\r\n                title={pageString.potential.filter.itemPanelTitle}\r\n                end={\r\n                    <ClearIconWrapper\r\n                        onClick={() => props.filterBy([])}\r\n                    >\r\n                        {ClearIcon}\r\n                    </ClearIconWrapper>\r\n                }\r\n            />\r\n            <MyToggleButtonGroup\r\n                type='checkbox'\r\n                value={props.filterBtnValue}\r\n                onChange={props.filterBy}\r\n                layoutConfig={btnLayoutConfig}\r\n            >\r\n                {itemDropData.map((item, idx) => {\r\n                    if (item.drop.length === 0) return true\r\n\r\n                    return (\r\n                        <StyledToggleButton\r\n                            value={idx}\r\n                            key={idx}\r\n                        >\r\n                            <img\r\n                                src={`${process.env.PUBLIC_URL}/img/item_${item.id}.png`}\r\n                                alt=''\r\n                            />\r\n                            {itemString.name[item.id]}\r\n                        </StyledToggleButton>\r\n                    )\r\n                })}\r\n            </MyToggleButtonGroup>\r\n        </FilterPanel>\r\n    )\r\n}\r\n\r\nconst TableContent = (props) => {\r\n    const { pageString, itemString } = React.useContext(LanguageContext)\r\n\r\n    const ItemTh = (props) => {\r\n        if (props.sortedResult.length === 0) {\r\n            return <SortableTh>{pageString.potential.filter.tableHead[1]}</SortableTh>\r\n        }\r\n\r\n        return (\r\n            props.sortedResult[0].drop.map((item, idx) => {\r\n                return (\r\n                    <SortableTh\r\n                        key={idx}\r\n                        onClick={() => props.requestSort(idx)}\r\n                        direction={props.getSortDirection(idx)}\r\n                    >\r\n                        <img\r\n                            src={`${process.env.PUBLIC_URL}/img/item_${item.id}.png`}\r\n                            alt={itemString.name[item.id]}\r\n                        />\r\n                    </SortableTh>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <thead>\r\n                <tr>\r\n                    <SortableTh\r\n                        onClick={() => props.requestSort('stage')}\r\n                        direction={props.getSortDirection('stage')}\r\n                    >\r\n                        {pageString.potential.filter.tableHead[0]}\r\n                    </SortableTh>\r\n                    <ItemTh {...props} />\r\n                    <SortableTh\r\n                        onClick={() => props.requestSort('energy')}\r\n                        direction={props.getSortDirection('energy')}\r\n                    >\r\n                        <img\r\n                            src={`${process.env.PUBLIC_URL}/img/energy.png`}\r\n                            className='card-table-img'\r\n                            alt={pageString.potential.filter.tableHead[2]}\r\n                        />\r\n                    </SortableTh>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.sortedResult.map((stage, idx) => {\r\n                    return (\r\n                        <tr key={idx}>\r\n                            <td>{`${stage.chapter}-${stage.stage}`}</td>\r\n                            {stage.drop.map(item => {\r\n                                return (\r\n                                    <td key={item.id}>\r\n                                        {itemString.rarity[item.rarity]}\r\n                                    </td>\r\n                                )\r\n                            })}\r\n                            <td>{stage.energy}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </>\r\n    )\r\n}\r\n\r\nconst FilterContainer = styled.div`\r\n    display: flex;\r\n    @media screen and (max-width: 992px) {\r\n        display: block;\r\n    }\r\n    > div:last-child > div:first-child {\r\n        justify-content: start;\r\n    }\r\n`\r\nexport default function ItemFilter() {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    const [state, setState] = useState({\r\n        filterBtnValue: [],\r\n        stages: [],\r\n    })\r\n\r\n    const filterBy = (val) => {\r\n        if (val.length === 0) {\r\n            setState({\r\n                filterBtnValue: val,\r\n                stages: [],\r\n            })\r\n            return;\r\n        }\r\n        const curVal = val.sort()\r\n        // deep copy\r\n        let filteredStages = JSON.parse(JSON.stringify(itemDropData[curVal[0]].drop))\r\n        filteredStages.forEach(stage => {\r\n            stage.drop = [{\r\n                id: itemDropData[curVal[0]].id,\r\n                rarity: stage.rarity\r\n            }]\r\n            delete stage.rarity\r\n        })\r\n        curVal.forEach((itemIdx, idx) => {\r\n            if (idx === 0) return true\r\n            filteredStages = filteredStages.filter(thisStage => {\r\n                let flag = false\r\n                itemDropData[itemIdx].drop.forEach(that => {\r\n                    if (\r\n                        that.chapter === thisStage.chapter\r\n                        && that.stage === thisStage.stage\r\n                    ) {\r\n                        let newDrop = {\r\n                            id: itemDropData[itemIdx].id,\r\n                            rarity: that.rarity\r\n                        }\r\n                        thisStage.drop.push(newDrop)\r\n                        flag = true\r\n                        return false\r\n                    }\r\n                })\r\n                return flag\r\n            })\r\n        })\r\n        setState({\r\n            filterBtnValue: val,\r\n            stages: filteredStages,\r\n        })\r\n    }\r\n\r\n    const sortFunc = (sortableItems, sortConfig) => {\r\n        const toStageKey = key => {\r\n            return (\r\n                parseInt(key.chapter) * 1000 +\r\n                parseInt(key.stage.split(' ')[0]) * 10 +\r\n                (key.stage.includes('free') ? 1 : 0) +\r\n                (key.stage.includes('-') ? parseInt(key.stage.split('-')[1]) : 0)\r\n            )\r\n        }\r\n\r\n        sortableItems.sort((a, b) => {\r\n            let aKey\r\n            let bKey\r\n            if (sortConfig.key === 'stage') {\r\n                aKey = toStageKey(a)\r\n                bKey = toStageKey(b)\r\n            } else if (sortConfig.key === 'energy') {\r\n                aKey = a[sortConfig.key]\r\n                bKey = b[sortConfig.key]\r\n            } else {\r\n                aKey = a.drop[sortConfig.key].rarity\r\n                bKey = b.drop[sortConfig.key].rarity\r\n            }\r\n            if (aKey < bKey) {\r\n                return sortConfig.direction === 'asc' ? -1 : 1\r\n            }\r\n            if (aKey > bKey) {\r\n                return sortConfig.direction === 'asc' ? 1 : -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    const tableWidthConfig = {\r\n        default: 'calc(40% - 1rem)',\r\n        1360: 'calc(38% - 1rem)',\r\n        992: '100%',\r\n    }\r\n\r\n    return (\r\n        <FilterContainer>\r\n            <ItemFilterPanel\r\n                filterBtnValue={state.filterBtnValue}\r\n                filterBy={filterBy}\r\n            />\r\n            <ResultTable\r\n                result={state.stages}\r\n                sortFunc={sortFunc}\r\n                defaultSortKey={0}\r\n                modalOpen={modalOpen}\r\n                handleModalOpen={() => setModalOpen(true)}\r\n                handleModalClose={() => setModalOpen(false)}\r\n                modalContent={pageString.potential.filter.modal}\r\n                widthConfig={tableWidthConfig}\r\n                striped={true}\r\n            >\r\n                <TableContent />\r\n            </ResultTable>\r\n        </FilterContainer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport { ContainerHeader, FilterPanel, HelpModal } from '../components/FilterComponents';\r\nimport charPotentialData from '../gamedata/characterPotential.json';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport { AlertIcon, BuffIcon, ItemIcon, RaceIcon, HelpIcon } from './icon';\r\n\r\nconst IconWrapper = styled.div`\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        margin-right: .4rem;\r\n        fill: ${props => props.theme.colors.onSurface};\r\n    }\r\n`\r\nconst ContainerBody = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n`\r\nconst CharImgWrapper = styled.img`\r\n    height: 15rem;\r\n    margin-right: 1rem;\r\n    border: 2px solid ${props => props.theme.colors.secondary};\r\n    border-radius: .25rem;\r\n`\r\nconst Select = styled(Form.Control)`\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    border-radius: .25rem;\r\n    padding: .1rem;\r\n    border: 1px solid ${props => props.theme.colors.secondary};\r\n    width: 100%;\r\n    &:focus {\r\n        box-shadow: 0 0 .4rem ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\nconst Gutter = styled.div`\r\n    margin-top: 3rem;\r\n`\r\nconst SelectPanel = (props) => {\r\n    const { pageString, charString } = React.useContext(LanguageContext)\r\n\r\n    const widthConfig = {\r\n        default: '25%',\r\n        992: '100%',\r\n    }\r\n\r\n    return (\r\n        <FilterPanel widthConfig={widthConfig}>\r\n            <ContainerHeader\r\n                title={\r\n                    <IconWrapper>\r\n                        {RaceIcon}\r\n                        {pageString.potential.character.characterPanelTitle}\r\n                    </IconWrapper>\r\n                }\r\n            />\r\n            <ContainerBody>\r\n                <CharImgWrapper\r\n                    src={\r\n                        `${process.env.PUBLIC_URL}/img/char_${\r\n                            charPotentialData.characters[props.character].id\r\n                        }.png`\r\n                    }\r\n                    alt=''\r\n                />\r\n                <div>\r\n                    <Form>\r\n                        {pageString.potential.character.characterSelectTitle}\r\n                        <br />\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('character')}\r\n                                >\r\n                                    {\r\n                                        Object.keys(charPotentialData.characters)\r\n                                            .map((c, idx) => <option key={idx}>\r\n                                                {charString.name[parseInt(c)]}\r\n                                            </option>)\r\n                                    }\r\n                                </Select>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Gutter />\r\n                        {pageString.potential.character.currentSelectTitle}\r\n                        <br />\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('currStage')}\r\n                                >\r\n                                    {props.stages}\r\n                                </Select>\r\n                            </Form.Group>\r\n                            –\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('currSub')}\r\n                                >\r\n                                    {[...Array(7).keys()].slice(1)\r\n                                        .map(i => <option key={i}>{i}</option>)}\r\n                                </Select>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        {pageString.potential.character.targetSelectTitle}\r\n                        <br />\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('targetStage')}\r\n                                >\r\n                                    {props.stages}\r\n                                </Select>\r\n                            </Form.Group>\r\n                            –\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('targetSub')}\r\n                                >\r\n                                    {[...Array(7).keys()].slice(1)\r\n                                        .map(i => <option key={i}>{i}</option>)}\r\n                                </Select>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </div>\r\n            </ContainerBody>\r\n        </FilterPanel>\r\n    )\r\n}\r\n\r\nconst MaterialContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 1rem;\r\n    min-height: 6rem;\r\n`\r\nconst MaterialWrapper = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 .4rem;\r\n    margin: .2rem 0;\r\n    ${props => Object.entries(props.$layoutConfig).map(entry => (\r\n    `@media screen and (min-width: ${entry[0]}px) {\r\n            width: calc(100% / ${entry[1]});\r\n        }\r\n        `\r\n    ))}\r\n`\r\nconst MaterialImg = styled.img`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    margin-right: .4rem;\r\n`\r\nconst HelpIconWrapper = styled.div`\r\n    margin-right: auto;\r\n    svg {\r\n        fill: ${props => props.theme.colors.secondary};\r\n        width: 1.4rem;\r\n        height: 1.4rem;\r\n        margin-left: .4rem;\r\n        cursor: pointer;\r\n        vertical-align: top;\r\n    }\r\n`\r\nconst OtherImg = styled.img`\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    margin-right: .4rem;\r\n`\r\nconst ResultPanel = (props) => {\r\n    const { userLanguage, pageString, itemString } = React.useContext(LanguageContext)\r\n\r\n    const [modalOpen, setModalOpen] = React.useState(false)\r\n\r\n    const resultLayoutConfig = userLanguage === 'en'\r\n        ? {\r\n            1360: 5,\r\n            1200: 4,\r\n            768: 3,\r\n            0: 2\r\n        }\r\n        : {\r\n            1360: 6,\r\n            1200: 5,\r\n            768: 4,\r\n            624: 3,\r\n            0: 2\r\n        }\r\n\r\n    const MaterialBox = () => {\r\n        if (!props.result.items) return <></>\r\n\r\n        return (\r\n            <>\r\n                {Object.entries(props.result.items).map((item, idx) => (\r\n                    <MaterialWrapper\r\n                        key={idx}\r\n                        $layoutConfig={resultLayoutConfig}\r\n                    >\r\n                        <div>\r\n                            <MaterialImg\r\n                                src={\r\n                                    `${process.env.PUBLIC_URL}/img/item_${\r\n                                        ('00' + item[0]).slice(-3)\r\n                                    }.png`\r\n                                }\r\n                                alt=''\r\n                            />\r\n                            {`${itemString.name[('00' + item[0]).slice(-3)]}`}\r\n                        </div>\r\n                        {item[1]}\r\n                    </MaterialWrapper>\r\n                ))}\r\n                <MaterialWrapper\r\n                    $layoutConfig={resultLayoutConfig}\r\n                >\r\n                    <MaterialImg\r\n                        src={`${process.env.PUBLIC_URL}/img/money.png`}\r\n                        alt='money'\r\n                    />\r\n                    {props.result.money}\r\n                </MaterialWrapper>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <FilterPanel widthConfig={props.widthConfig}>\r\n            <div>\r\n                <ContainerHeader\r\n                    title={\r\n                        <IconWrapper>\r\n                            {ItemIcon}\r\n                            {pageString.potential.character.resultDemandTitle}\r\n                            <HelpIconWrapper\r\n                                onClick={() => setModalOpen(true)}\r\n                            >\r\n                                {HelpIcon}\r\n                            </HelpIconWrapper>\r\n                        </IconWrapper>\r\n                    }\r\n                />\r\n                <MaterialContainer>\r\n                    <MaterialBox />\r\n                </MaterialContainer>\r\n            </div>\r\n            <div>\r\n                <ContainerHeader\r\n                    title={\r\n                        <IconWrapper>\r\n                            {BuffIcon}\r\n                            {pageString.potential.character.resultBuffTitle}\r\n                        </IconWrapper>\r\n                    }\r\n                />\r\n                <div>\r\n                    <MaterialWrapper\r\n                        $layoutConfig={resultLayoutConfig}\r\n                    >\r\n                        <div>\r\n                            <OtherImg\r\n                                src={`${process.env.PUBLIC_URL}/img/ATK.png`}\r\n                                alt='ATK'\r\n                            />\r\n                            {`${props.result.buff.ATK} %`}\r\n                        </div>\r\n                    </MaterialWrapper>\r\n                    <MaterialWrapper\r\n                        $layoutConfig={resultLayoutConfig}\r\n                    >\r\n                        <div>\r\n                            <OtherImg\r\n                                src={`${process.env.PUBLIC_URL}/img/HP.png`}\r\n                                alt='HP'\r\n                            />\r\n                            {`${props.result.buff.HP} %`}\r\n                        </div>\r\n                    </MaterialWrapper>\r\n                </div>\r\n            </div>\r\n            <HelpModal\r\n                modalOpen={modalOpen}\r\n                handleModalClose={() => setModalOpen(false)}\r\n                content={pageString.potential.character.modal}\r\n            />\r\n        </FilterPanel>\r\n    )\r\n}\r\n\r\nconst FilterContainer = styled.div`\r\n    display: table;\r\n    width: 100%;\r\n    > div {\r\n        display: table-cell;\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        display: block;\r\n        > div {\r\n            display: block; \r\n        }\r\n    }\r\n    > div:last-child {\r\n        @media screen and (max-width: 992px) {\r\n            width: ${props => props.resultPanelWidthConfig[992]};\r\n            margin-left: calc(100% - ${props => props.resultPanelWidthConfig[992]});\r\n            position: relative;\r\n            margin-top: 1rem;\r\n        }\r\n    }\r\n    > .MuiSnackbar-root {\r\n        > div {\r\n            background-color: #ff9800;\r\n            font-size: medium;\r\n            display: flex;\r\n            flex-direction: row-reverse;\r\n            justify-content: center;\r\n            > .MuiSnackbarContent-action {\r\n                margin: 0;\r\n                padding: 0;\r\n                svg \r\n                {\r\n                    width: 1.4rem;\r\n                    height: 1.4rem;\r\n                    fill: #fff;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\nconst TableGutter = styled.div`\r\n    width: 0;\r\n    padding: .5rem;\r\n    @media screen and (max-width: 992px) {\r\n        padding: 0;\r\n    }\r\n`\r\nconst resultPanelWidthConfig = {\r\n    default: 'calc(75% - 1rem)',\r\n    992: '100%',\r\n}\r\n\r\nexport default function CharPotential() {\r\n    const { pageString, charString } = React.useContext(LanguageContext)\r\n\r\n    const [state, setState] = React.useState({\r\n        character: '0',\r\n        currStage: \"1\",\r\n        currSub: \"1\",\r\n        targetStage: \"1\",\r\n        targetSub: \"1\",\r\n        isValid: true,\r\n        isSnackbarOpen: false,\r\n        result: {\r\n            items: undefined,\r\n            money: 0,\r\n            buff: {\r\n                ATK: 0,\r\n                HP: 0,\r\n                PASSIVE: 0\r\n            },\r\n        },\r\n    })\r\n\r\n    const handleSelect = (attr) => (event) => {\r\n        //update state\r\n        let newState = { ...state }\r\n\r\n        // parse character name to id\r\n        const selected = attr === 'character'\r\n            ? charString.name.indexOf(event.target.value).toString()\r\n            : event.target.value\r\n\r\n        newState[attr] = selected\r\n        if (selected === '40') {\r\n            newState.currStage = state.currStage > 6 ? 1 : state.currStage\r\n            newState.targetStage = state.targetStage > 6 ? 1 : state.targetStage\r\n        }\r\n        newState.isValid =\r\n            parseInt(newState.targetStage) > parseInt(newState.currStage) ||\r\n            (parseInt(newState.targetStage) === parseInt(newState.currStage) &&\r\n                parseInt(newState.targetSub) >= parseInt(newState.currSub))\r\n        newState.isSnackbarOpen = !newState.isValid\r\n        if (!newState.isValid) {\r\n            newState.result = {\r\n                items: undefined,\r\n                money: 0,\r\n                buff: {\r\n                    ATK: 0,\r\n                    HP: 0,\r\n                    PASSIVE: 0\r\n                },\r\n            }\r\n            setState(newState)\r\n            return\r\n        }\r\n        let result = {\r\n            items: {},\r\n            money: 0,\r\n            buff: {\r\n                ATK: 0,\r\n                HP: 0,\r\n                PASSIVE: 0\r\n            },\r\n        }\r\n        // calculate demand\r\n        const type = charPotentialData.characters[newState.character].type\r\n        const stages = charPotentialData.type[type]\r\n        const start = newState.currStage - 1\r\n        const end = newState.targetStage - 1\r\n        for (let i = start; i < end + 1; i++) {\r\n            let stage = stages[i]\r\n            for (\r\n                let j = i === start ? newState.currSub - 1 : 0;\r\n                j < (i === end ? newState.targetSub : 6);\r\n                j++\r\n            ) {\r\n                let id = stage.pattern[j] + stage.rank[j]\r\n                if (result.items[id]) {\r\n                    result.items[id] += stage.num[j]\r\n                } else {\r\n                    result.items[id] = stage.num[j]\r\n                }\r\n                result.money += (i + 1) * 8000\r\n                let buff = charPotentialData.itemMap[stage.pattern[j]].type\r\n                result.buff[buff] += stage.buff[j]\r\n            }\r\n        }\r\n        // parse result\r\n        let parsedItem = {}\r\n        for (const [key, value] of Object.entries(result.items)) {\r\n            let itemId = charPotentialData.itemMap[key[0]].id.map(id => (\r\n                (parseInt(key[1]) * 100 + id).toString()\r\n            ))\r\n            for (let i of itemId) {\r\n                if (parsedItem[i]) {\r\n                    parsedItem[i] += value\r\n                } else {\r\n                    parsedItem[i] = value\r\n                }\r\n            }\r\n        }\r\n        result.items = parsedItem\r\n        result.buff.ATK = Math.round(result.buff.ATK * 100) / 100\r\n        result.buff.HP = Math.round(result.buff.HP * 100) / 100\r\n        newState.result = result\r\n        setState(newState)\r\n    }\r\n\r\n    const stages = [...Array(state.character === '40' ? 7 : 13).keys()]\r\n        .slice(1).map(i => <option key={i}>{i}</option>)\r\n\r\n    const handleSnackbarClose = () => setState((state) => ({\r\n        ...state,\r\n        isSnackbarOpen: false\r\n    }))\r\n\r\n    return (\r\n        <FilterContainer\r\n            resultPanelWidthConfig={resultPanelWidthConfig}\r\n        >\r\n            <Snackbar\r\n                open={state.isSnackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                message={pageString.potential.character.snackbarMsg}\r\n                action={AlertIcon}\r\n            />\r\n            <SelectPanel\r\n                handleSelect={handleSelect}\r\n                stages={stages}\r\n                character={state.character}\r\n            />\r\n            <TableGutter />\r\n            <ResultPanel\r\n                widthConfig={resultPanelWidthConfig}\r\n                result={state.result}\r\n            />\r\n        </FilterContainer>\r\n    )\r\n}\r\n","import Home from './pages/Home';\r\nimport Enlist from './pages/Enlist';\r\nimport Potential from './pages/Potential';\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/enlist',\r\n        component: Enlist,\r\n    },\r\n    {\r\n        path: '/potential',\r\n        component: Potential,\r\n    }\r\n]\r\n","import React from 'react';\r\nimport PageWithTabs from '../components/PageWithTabs';\r\nimport CharFilter from '../components/CharFilter';\r\nimport CharShowcase from '../components/CharShowcase';\r\nimport { LanguageContext } from '../components/LanguageProvider';\r\nimport { FilterIcon, OverviewIcon } from '../components/icon';\r\n\r\nexport default function Enlist() {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    return (\r\n        <PageWithTabs\r\n            title={pageString.enlist.documentTitle}\r\n            tabs={[\r\n                { label: pageString.enlist.label[0], icon: OverviewIcon, content: <CharShowcase /> },\r\n                { label: pageString.enlist.label[1], icon: FilterIcon, content: <CharFilter /> },\r\n            ]}\r\n        />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PageWithTabs from '../components/PageWithTabs';\r\nimport ItemShowcase from '../components/ItemShowcase';\r\nimport ItemFilter from '../components/ItemFilter';\r\nimport CharPotential from '../components/CharPotential';\r\nimport { LanguageContext } from '../components/LanguageProvider';\r\nimport { CalcIcon, OverviewIcon, FilterIcon } from '../components/icon';\r\n\r\nexport default function Potential() {\r\n    const { pageString } = React.useContext(LanguageContext)\r\n\r\n    return (\r\n        <PageWithTabs\r\n            title={pageString.potential.documentTitle}\r\n            tabs={[\r\n                { label: pageString.potential.label[0], icon: OverviewIcon, content: <ItemShowcase /> },\r\n                { label: pageString.potential.label[1], icon: FilterIcon, content: <ItemFilter /> },\r\n                { label: pageString.potential.label[2], icon: CalcIcon, content: <CharPotential /> },\r\n            ]}\r\n        />\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport LanguageProvider from './components/LanguageProvider';\r\nimport { MainNavbar, Sidebar } from './components/Navbars';\r\nimport ToTopBtn from './components/ToTopBtn';\r\nimport { lightTheme, darkTheme } from './components/theme';\r\nimport { routes } from './routes'\r\n\r\nconst Body = styled.div`\r\n    min-height: 100vh;\r\n    transition: background-color 0.3s ease;\r\n    background-color: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.onSurface};\r\n`\r\nconst Main = styled.main`\r\n    padding: 1rem;\r\n`\r\nexport default function App() {\r\n    const getDefaultTheme = () => {\r\n        const localSetting = localStorage.getItem('color-theme')\r\n        if (localSetting) {\r\n            return localSetting\r\n        }\r\n        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n            return 'dark'\r\n        }\r\n        return 'light'\r\n    }\r\n\r\n    const [pageConfig, setPageConfig] = useState({\r\n        theme: getDefaultTheme(),\r\n        sidebarOpen: false\r\n    })\r\n\r\n    const toggleTheme = (event) => {\r\n        // ignore tab and shift key\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        const toTheme = pageConfig.theme === 'light' ? 'dark' : 'light'\r\n        setPageConfig((state) => ({\r\n            ...state,\r\n            theme: toTheme\r\n        }))\r\n        localStorage.setItem('color-theme', toTheme)\r\n    }\r\n\r\n    const toggleSidebar = (toOpen) => (event) => {\r\n        if (\r\n            (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) ||\r\n            event.target.closest('.MuiAccordion-root') !== null\r\n        ) {\r\n            return;\r\n        }\r\n        setPageConfig((state) => ({\r\n            ...state,\r\n            sidebarOpen: toOpen\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <LanguageProvider>\r\n            <ThemeProvider\r\n                theme={pageConfig.theme === 'light' ? lightTheme : darkTheme}\r\n            >\r\n                <Body>\r\n                    <MainNavbar\r\n                        checked={pageConfig.theme === 'dark'}\r\n                        toggleTheme={toggleTheme}\r\n                        toggleSidebar={toggleSidebar}\r\n                    />\r\n                    <Sidebar\r\n                        open={pageConfig.sidebarOpen}\r\n                        toggleSidebar={toggleSidebar}\r\n                    />\r\n                    <Main>\r\n                        {routes.map((route, idx) => {\r\n                            const { path, exact } = route;\r\n                            return (\r\n                                <Route\r\n                                    key={idx}\r\n                                    path={path}\r\n                                    exact={exact}\r\n                                    render={() => <route.component />}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Main>\r\n                    <ToTopBtn />\r\n                </Body>\r\n            </ThemeProvider>\r\n        </LanguageProvider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={'/tkfmtools' || ''}>\r\n        <Switch>\r\n            <App />\r\n        </Switch>\r\n    </BrowserRouter>,\r\n    document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}