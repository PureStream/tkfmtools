{"version":3,"sources":["webpack://tkfmtools/./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://tkfmtools/./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack://tkfmtools/./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack://tkfmtools/./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","webpack://tkfmtools/./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","webpack://tkfmtools/./src/pages/team/index.js"],"names":["createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","SwitchBase","type","root","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","name","ListItemSecondaryAction","className","muiName","position","right","top","transform","StyledMenu","styled","Menu","colors","surface","onSurface","StyledMenuItem","MenuItem","SettingDropDown","boolean","pageString","useLanguage","useTeamData","importLineupData","toggleImportLineupData","actions","useState","anchorElement","isSnackbarOpen","state","setState","MyIconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","tooltipText","team","index","settingTooltip","SettingIcon","List","component","id","anchorEl","open","Boolean","onClose","ListItem","dense","button","edge","disableRipple","settingDescription","MySnackbar","message","errorSnackbar","TeamHeader","MyHeader","StyledButton","Button","shadow","Header","newTeam","title","LocalizedLink","to","startIcon","NewIcon","newComposition","end","CharContainer","CharImg","ImageSupplier","EmptySlot","CharsBox","chars","charString","every","c","map","idx","key","alt","DataItem","$isDragging","TitleText","OperationButton","DataList","localTeams","getTeam","selectTeam","pushTeam","deleteTeam","t","characters","copyTooltip","aria-label","CopyIcon","deleteTooltip","DeleteIcon","PageWrapper","StyledDivider","Divider","dropdownHover","Head","helmet","description","path"],"mappings":"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","file":"component---src-pages-team-index-js-c7e399b711b16371dbb5.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    List, ListItem, ListItemSecondaryAction,\r\n    Menu, MenuItem\r\n} from '@material-ui/core';\r\nimport Head from 'components/Head';\r\nimport { useTeamData } from 'components/TeamDataProvider';\r\nimport MyHeader from 'components/MyHeader';\r\nimport LocalizedLink from 'components/LocalizedLink';\r\nimport ImageSupplier from 'components/ImageSupplier';\r\nimport MyIconButton from 'components/MyIconButton';\r\nimport MySnackbar from 'components/MySnackbar';\r\nimport { useLanguage } from 'components/LanguageProvider';\r\nimport { NewIcon, CopyIcon, DeleteIcon, SettingIcon } from 'components/icon';\r\n\r\nconst StyledMenu = styled(Menu)`\r\n    .MuiPaper-root {\r\n        background-color: ${props => props.theme.colors.surface};\r\n        color: ${props => props.theme.colors.onSurface};\r\n    }\r\n`\r\nconst StyledMenuItem = styled(MenuItem)`\r\n    && {\r\n        svg {\r\n            fill: ${props => props.theme.colors.secondary};\r\n        }\r\n    }\r\n`\r\nconst SettingDropDown = () => {\r\n    const { pageString } = useLanguage()\r\n\r\n    const { importLineupData, actions } = useTeamData()\r\n    const { toggleImportLineupData } = actions\r\n    const [state, setState] = useState({\r\n        anchorElement: false,\r\n        isSnackbarOpen: false\r\n    })\r\n\r\n    const handleSettingButtonClick = (event) => setState(state => ({\r\n        ...state,\r\n        anchorElement: event.currentTarget\r\n    }))\r\n\r\n    const handleMenuClose = () => setState(state => ({\r\n        ...state,\r\n        anchorElement: null\r\n    }))\r\n\r\n    const handleToggle = () => {\r\n        if (!toggleImportLineupData()) {\r\n            setState(state => ({\r\n                ...state,\r\n                isSnackbarOpen: true\r\n            }))\r\n        }\r\n    }\r\n\r\n    const handleSnackbar = (boolean) => () => setState(state => ({\r\n        ...state,\r\n        isSnackbarOpen: boolean\r\n    }))\r\n\r\n    return (<>\r\n        <MyIconButton\r\n            aria-controls='setting-menu'\r\n            aria-haspopup='true'\r\n            onClick={handleSettingButtonClick}\r\n            tooltipText={pageString.team.index.settingTooltip}\r\n        >\r\n            {SettingIcon}\r\n        </MyIconButton>\r\n        <List\r\n            component={StyledMenu}\r\n            id='setting-menu'\r\n            anchorEl={state.anchorElement}\r\n            open={Boolean(state.anchorElement)}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <ListItem\r\n                component={StyledMenuItem}\r\n                dense\r\n                button\r\n                onClick={handleToggle}\r\n            >\r\n                <Checkbox\r\n                    edge='start'\r\n                    checked={importLineupData}\r\n                    disableRipple\r\n                    inputProps={{ 'aria-labelledby': 'setting-description' }}\r\n                />\r\n                <span id='setting-description'>\r\n                    {pageString.team.index.settingDescription}\r\n                </span>\r\n            </ListItem>\r\n        </List>\r\n        <MySnackbar\r\n            open={state.isSnackbarOpen}\r\n            onClose={handleSnackbar(false)}\r\n            message={pageString.team.index.errorSnackbar}\r\n            type='error'\r\n        />\r\n    </>)\r\n}\r\n\r\nconst TeamHeader = styled(MyHeader)`\r\n    position: relative;\r\n    left: -1rem;\r\n    width: calc(100% + 2rem);\r\n    height: auto;\r\n    margin: 0;\r\n    padding: 0 0 .5rem 1rem;\r\n    border: none;\r\n    label {\r\n        margin-right: .6rem;\r\n        font-size: large;\r\n    }\r\n`\r\nconst StyledButton = styled(Button)`\r\n    && {\r\n        padding: .6rem;\r\n        color: ${props => props.theme.colors.onSurface};\r\n        border: 1px solid ${props => props.theme.colors.shadow};\r\n        font-size: medium;\r\n        svg {\r\n            margin: 0;\r\n        }\r\n        span {\r\n            line-height: normal;\r\n        }\r\n    }\r\n`\r\nconst Header = () => {\r\n    const { pageString } = useLanguage()\r\n\r\n    const { actions } = useTeamData()\r\n    const { newTeam } = actions\r\n\r\n    return (<>\r\n        <TeamHeader\r\n            title={\r\n                <LocalizedLink to='/team/build/'>\r\n                    <StyledButton startIcon={NewIcon} onClick={() => newTeam()}>\r\n                        <span>{pageString.team.index.newComposition}</span>\r\n                    </StyledButton>\r\n                </LocalizedLink>\r\n            }\r\n            end={<SettingDropDown />}\r\n        />\r\n\r\n    </>)\r\n}\r\n\r\nconst CharContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    overflow-x: hidden;\r\n`\r\nconst CharImg = styled(ImageSupplier)`\r\n    flex: 0 0 auto;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    overflow: hidden;\r\n`\r\nconst EmptySlot = styled.div`\r\n    flex: 0 0 auto;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    overflow: hidden;\r\n`\r\nconst CharsBox = ({ chars }) => {\r\n    const { charString } = useLanguage()\r\n\r\n    if (chars.every(c => c?.id === undefined)) {\r\n        return <CharContainer><EmptySlot /></CharContainer>\r\n    }\r\n\r\n    return (\r\n        <CharContainer>\r\n            {chars.map((c, idx) => (\r\n                c?.id && <CharImg\r\n                    key={idx}\r\n                    name={`char_small_${c.id}`}\r\n                    alt={charString.name[c.id]}\r\n                />\r\n            ))}\r\n        </CharContainer>\r\n    )\r\n}\r\n\r\nconst DataItem = styled(ListItem)`\r\n    && {\r\n        margin-bottom: .6rem;\r\n        padding-right: 6.8rem;\r\n    }\r\n    background: linear-gradient(\r\n        90deg,\r\n        ${props => props.$isDragging ? props.theme.colors.shadow\r\n        : props.theme.colors.shadow + '2A'},\r\n        ${props => props.$isDragging ? props.theme.colors.surface\r\n        : props.theme.colors.shadow + '0D'}\r\n    );\r\n`\r\nconst TitleText = styled.span`\r\n    width: 8rem;\r\n    color: ${props => props.theme.colors.onSurface};\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`\r\nconst OperationButton = styled(MyIconButton)`\r\n    svg {\r\n        width: 1.4rem;\r\n        height: 1.4rem;\r\n    }\r\n`\r\nconst DataList = () => {\r\n    const { pageString } = useLanguage()\r\n\r\n    const { localTeams, actions } = useTeamData()\r\n    const { getTeam, selectTeam, pushTeam, deleteTeam } = actions\r\n\r\n    return (\r\n        <List>\r\n            {localTeams?.map((t, idx) => (\r\n                <DataItem\r\n                    component={LocalizedLink}\r\n                    to='/team/build/'\r\n                    button\r\n                    key={idx}\r\n                    onClick={() => selectTeam(idx)}\r\n                >\r\n                    <TitleText>{t.name}</TitleText>\r\n                    <CharsBox chars={t.characters} />\r\n                    <ListItemSecondaryAction>\r\n                        <OperationButton\r\n                            onClick={() => pushTeam(getTeam(idx))}\r\n                            tooltipText={pageString.team.index.copyTooltip}\r\n                            edge='end'\r\n                            aria-label='copy-team'\r\n                        >\r\n                            {CopyIcon}\r\n                        </OperationButton>\r\n                        <OperationButton\r\n                            onClick={() => deleteTeam(idx)}\r\n                            tooltipText={pageString.team.index.deleteTooltip}\r\n                            edge='end'\r\n                            aria-label='delete-team'\r\n                        >\r\n                            {DeleteIcon}\r\n                        </OperationButton>\r\n                    </ListItemSecondaryAction>\r\n                </DataItem>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n\r\nconst PageWrapper = styled.div`\r\n    max-width: 1000px;\r\n    margin: auto;\r\n`\r\nconst StyledDivider = styled(Divider)`\r\n    && {\r\n        background-color: ${props => props.theme.colors.dropdownHover};\r\n    }\r\n`\r\nconst Team = () => {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <Head\r\n                title={pageString.team.index.helmet.title}\r\n                description={pageString.team.index.helmet.description}\r\n                path='/team/'\r\n            />\r\n            <Header />\r\n            <StyledDivider />\r\n            <DataList />\r\n        </PageWrapper>\r\n    )\r\n}\r\n\r\nexport default Team"],"sourceRoot":""}