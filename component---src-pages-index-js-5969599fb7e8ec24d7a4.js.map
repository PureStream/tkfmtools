{"version":3,"sources":["webpack:///./src/components/MyModal.js","webpack:///./src/components/SiteAccordionBody.js","webpack:///./src/pages/index.js","webpack:///./src/components/MyIconButton.js","webpack:///./src/components/Head.js","webpack:///./src/components/ScrollableContainer.js","webpack:///./src/components/MyHeader.js"],"names":["StyledModal","styled","div","props","theme","colors","surface","onSurface","border","ModalHeader","MyHeader","secondary","onSecondary","CloseWrapper","span","MyModal","children","className","title","open","onClose","ariaLabelledby","ariaDescribedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","disableEnforceFocus","aria-labelledby","aria-describedby","in","end","onClick","FitHeightModal","ScrollableModal","ModalBody","TextModalContent","content","map","item","idx","Fragment","key","text","TextModal","BodyContainer","link","linkHover","DescriptionContainer","li","DescriptionHeader","DescriptionBody","SiteDescription","pageString","useContext","LanguageContext","index","about","Body","name","href","target","rel","refItem","header","MsgAccordion","MyAccordion","LogMsg","msg","alwaysOpen","useState","isExpanded","setExpanded","type","description","Badge","NewBadge","FixBadge","ChangeBadge","expanded","onChange","square","MsgBox","SiteUpdateLog","updateLog","version","LicenseList","ul","LicenseItemTitle","LicenseItemContent","SiteLicense","license","titleLink","licenseLink","MsgModal","UpdateModal","modalOpen","latestMsg","helmet","HomeContainer","Header","unreadAnimation","keyframes","NoteIconWrapper","$unread","DescriptionAccordion","isDefault","unread","state","setState","useEffect","localSetting","localStorage","getItem","Head","path","setItem","NoteIcon","body","panel","event","expandIcon","ExpandMoreIcon","MyIconButton","IconButton","$active","HeaderIconButton","userLanguage","url","split","slice","join","property","lang","ScrollableContainer","StyledHeader","TitleWrapper","titleIcon","withHelp","onClickHelp","HelpIcon"],"mappings":"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","file":"component---src-pages-index-js-5969599fb7e8ec24d7a4.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Backdrop, Fade, Modal } from '@material-ui/core';\r\nimport MyHeader from './MyHeader';\r\nimport ScrollableContainer from './ScrollableContainer';\r\n\r\nconst StyledModal = styled.div`\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    position: absolute;\r\n    width: 70%;\r\n    height: 80%;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    @media screen and (max-width: 992px) {\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        width: 90%;\r\n    }\r\n    padding: 1rem;\r\n    border-radius: .25rem;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n`\r\nconst ModalHeader = styled(MyHeader)`\r\n    margin: -1rem;\r\n    margin-bottom: 1rem;\r\n    padding: .2rem .5rem;\r\n    background-color: ${props => props.theme.colors.secondary};\r\n    span {\r\n        color: ${props => props.theme.colors.onSecondary};\r\n    }\r\n`\r\nconst CloseWrapper = styled.span`\r\n    cursor: pointer;\r\n    font-size: x-large;\r\n`\r\nexport const MyModal = ({\r\n    children,\r\n    className,\r\n    title,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby\r\n}) => (\r\n    <Modal\r\n        className={className}\r\n        open={open}\r\n        onClose={onClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{ timeout: 500 }}\r\n        disableEnforceFocus\r\n        aria-labelledby={ariaLabelledby}\r\n        aria-describedby={ariaDescribedby}\r\n    >\r\n        <Fade in={open}>\r\n            <StyledModal>\r\n                <ModalHeader\r\n                    title={title}\r\n                    end={<CloseWrapper onClick={onClose}>&times;</CloseWrapper>}\r\n                />\r\n                {children}\r\n            </StyledModal>\r\n        </Fade>\r\n    </Modal>\r\n)\r\n\r\nexport const FitHeightModal = styled(MyModal)`\r\n    > div:nth-child(3) {\r\n        top: 10%;\r\n        bottom: auto;\r\n        height: min-content;\r\n        > div {\r\n            max-height: calc(80vh - 2rem);\r\n        }\r\n    }\r\n`\r\nconst ScrollableModal = ({\r\n    children,\r\n    className,\r\n    title,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby,\r\n}) => (\r\n    <FitHeightModal\r\n        className={className}\r\n        title={title}\r\n        open={open}\r\n        onClose={onClose}\r\n        ariaLabelledby={ariaLabelledby}\r\n        ariaDescribedby={ariaDescribedby}\r\n    >\r\n        <ScrollableContainer>\r\n            {children}\r\n        </ScrollableContainer>\r\n    </FitHeightModal>\r\n)\r\n\r\nconst ModalBody = styled.div`\r\n    margin: 1rem 0;\r\n`\r\nconst TextModalContent = ({\r\n    content\r\n}) => (\r\n    content.map((item, idx) => (\r\n        <React.Fragment key={idx}>\r\n            <MyHeader\r\n                title={item.title}\r\n            />\r\n            <ModalBody>\r\n                {item.content.map((text, idx) => <p key={idx}>{text}</p>)}\r\n            </ModalBody>\r\n        </React.Fragment>\r\n    ))\r\n)\r\n\r\nexport const TextModal = ({\r\n    title,\r\n    content,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby\r\n}) => (\r\n    <ScrollableModal\r\n        title={title}\r\n        open={open}\r\n        onClose={onClose}\r\n        ariaLabelledby={ariaLabelledby}\r\n        ariaDescribedby={ariaDescribedby}\r\n    >\r\n        <TextModalContent\r\n            content={content}\r\n        />\r\n    </ScrollableModal>\r\n)\r\n\r\nexport default MyModal","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport MyAccordion from './MyAccordion';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport { ChangeBadge, FixBadge, NewBadge } from './icon';\r\n\r\nconst BodyContainer = styled.div`\r\n    width: 100%;\r\n    font-size: .9rem;\r\n    a {\r\n        color: ${props => props.theme.colors.link};\r\n        &:hover {\r\n            color: ${props => props.theme.colors.linkHover};\r\n        }\r\n    }\r\n    ul {\r\n        list-style: none;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    > div {\r\n        margin-top: 1rem;\r\n    }\r\n    > div:first-child {\r\n        margin-top: 0;\r\n    }\r\n`\r\nconst DescriptionContainer = styled.li`\r\n    margin: 1rem 0;\r\n    &:first-child {\r\n        margin-top : 0;\r\n    }\r\n    &:last-child {\r\n        margin-bottom : 0;\r\n    }\r\n`\r\nconst DescriptionHeader = styled.div`\r\n    font-size: large;\r\n    margin-bottom: .5rem;\r\n`\r\nconst DescriptionBody = styled.div`\r\n    margin: 0;\r\n    p {\r\n        margin: .3rem .5rem;\r\n    }\r\n`\r\nexport const SiteDescription = () => {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <BodyContainer>\r\n            <ul>\r\n                {pageString.index.about.content.map((item, idx) => {\r\n                    let Body\r\n                    if (item.name === 'feedback') {\r\n                        Body = () => (\r\n                            <p>\r\n                                {item.content[0]}\r\n                                <a\r\n                                    href='https://peing.net/ja/b5295760aebf4c'\r\n                                    target='_blank'\r\n                                    rel='noreferrer'\r\n                                >\r\n                                    {item.content[1]}\r\n                                </a>\r\n                                {item.content[2]}\r\n                            </p>\r\n                        )\r\n                    } else if (item.name === 'reference') {\r\n                        Body = () => (\r\n                            item.content.map((refItem, idx) => {\r\n                                if (idx === 3) {\r\n                                    return <p key={idx}>{refItem}</p>\r\n                                }\r\n                                return (\r\n                                    <p key={idx}>\r\n                                        <a\r\n                                            href={refItem.link}\r\n                                            target='_blank'\r\n                                            rel='noreferrer'\r\n                                        >\r\n                                            {refItem.title}\r\n                                        </a>\r\n                                    </p>\r\n                                )\r\n                            })\r\n                        )\r\n                    } else {\r\n                        Body = () => item.content\r\n                            .map((text, idx) => <p key={idx}>{text}</p>)\r\n                    }\r\n\r\n                    return (\r\n                        <DescriptionContainer key={idx}>\r\n                            <DescriptionHeader>{item.header}</DescriptionHeader>\r\n                            <DescriptionBody>\r\n                                <Body />\r\n                            </DescriptionBody>\r\n                        </DescriptionContainer>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </BodyContainer>\r\n    )\r\n}\r\n\r\nconst MsgAccordion = styled(MyAccordion)`\r\n    && {\r\n        border-bottom: 1px solid lightgray;\r\n        > .MuiAccordionSummary-root {\r\n            padding: 0 .5rem;\r\n            border-bottom: 0px solid lightgray;\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid lightgray;\r\n        }\r\n        .MuiAccordionSummary-content {\r\n            display: flex;\r\n            align-items: center;\r\n            margin: .5rem 0;\r\n            > span {\r\n                padding: .25rem .4rem;\r\n                margin-right: .4rem;\r\n            }\r\n        }\r\n        && .MuiAccordionDetails-root {\r\n            font-size: small;\r\n            padding: .4rem .5rem;\r\n            margin: 0;\r\n        }\r\n    }\r\n`\r\nexport function LogMsg({ msg, alwaysOpen }) {\r\n    const [isExpanded, setExpanded] = useState(alwaysOpen ? true : false)\r\n    const { type, title, description } = msg\r\n    const Badge = type === 'New' ? NewBadge\r\n        : type === 'Fix' ? FixBadge\r\n            : ChangeBadge\r\n\r\n    const handleChange = () => {\r\n        if (!alwaysOpen) {\r\n            setExpanded(!isExpanded)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MsgAccordion\r\n            expanded={isExpanded}\r\n            onChange={handleChange}\r\n            square={true}\r\n            title={\r\n                <>\r\n                    <Badge />\r\n                    {title}\r\n                </>\r\n            }\r\n            content={description}\r\n        />\r\n    )\r\n}\r\n\r\nconst MsgBox = styled.div`\r\n    > div:first-child {\r\n        border-bottom: 1px solid lightgray;\r\n    }\r\n    > div > div {\r\n        border-top: none;\r\n    }\r\n`\r\nexport function SiteUpdateLog() {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <BodyContainer>\r\n            {pageString.index.updateLog.content.map((version, idx) => (\r\n                <MsgBox key={idx}>\r\n                    <div>{version.version}</div>\r\n                    {version.content.map((msg, idx) => (\r\n                        <LogMsg key={idx} msg={msg} />\r\n                    ))}\r\n                </MsgBox>\r\n            ))}\r\n        </BodyContainer>\r\n    )\r\n}\r\n\r\nconst LicenseList = styled.ul`\r\n    margin-bottom: -.5rem;\r\n`\r\nconst LicenseItemTitle = styled.div`\r\n    font-weight: bold;\r\n`\r\nconst LicenseItemContent = styled.div`\r\n    padding-left: .5rem;\r\n    padding-bottom: .5rem;\r\n`\r\nexport const SiteLicense = () => {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <BodyContainer>\r\n            <LicenseList>\r\n                <li key={'text'}>\r\n                    <LicenseItemTitle>\r\n                        <span>{pageString.index.license.content.title}</span>\r\n                    </LicenseItemTitle>\r\n                    <LicenseItemContent>\r\n                        <span>{pageString.index.license.content.content}</span>\r\n                    </LicenseItemContent>\r\n                </li>\r\n                {[\r\n                    {\r\n                        titleLink: 'https://github.com/google/material-design-icons',\r\n                        title: 'Material icons - Google Design',\r\n                        licenseLink: 'https://github.com/google/material-design-icons/blob/master/LICENSE',\r\n                        license: 'Apache License 2.0',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/facebook/react',\r\n                        title: 'react',\r\n                        licenseLink: 'https://github.com/facebook/react/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/gatsbyjs/gatsby',\r\n                        title: 'gatsby',\r\n                        licenseLink: 'https://github.com/gatsbyjs/gatsby/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/react-bootstrap/react-bootstrap',\r\n                        title: 'react-bootstrap',\r\n                        licenseLink: 'https://github.com/react-bootstrap/react-bootstrap/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/paulcollett/react-masonry-css',\r\n                        title: 'react-masonry-css',\r\n                        licenseLink: 'https://github.com/paulcollett/react-masonry-css/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/dirtyredz/react-scroll-up-button',\r\n                        title: 'react-scroll-up-button',\r\n                        licenseLink: 'https://github.com/dirtyredz/react-scroll-up-button/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/mui-org/material-ui',\r\n                        title: 'material-ui',\r\n                        licenseLink: 'https://github.com/mui-org/material-ui/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/styled-components/styled-components',\r\n                        title: 'styled-components',\r\n                        licenseLink: 'https://github.com/styled-components/styled-components/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                ].map((item, idx) => (\r\n                    <li key={idx}>\r\n                        <LicenseItemTitle>\r\n                            <a\r\n                                href={item.titleLink}\r\n                                target='_blank'\r\n                                rel='noreferrer'\r\n                            >\r\n                                {item.title}\r\n                            </a>\r\n                        </LicenseItemTitle>\r\n                        <LicenseItemContent>\r\n                            <a\r\n                                href={item.licenseLink}\r\n                                target='_blank'\r\n                                rel='noreferrer'\r\n                            >\r\n                                {item.license}\r\n                            </a>\r\n                        </LicenseItemContent>\r\n                    </li>\r\n                ))}\r\n            </LicenseList>\r\n        </BodyContainer>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport Head from 'components/Head';\r\nimport MyAccordion from 'components/MyAccordion';\r\nimport {\r\n    LogMsg,\r\n    SiteDescription,\r\n    SiteUpdateLog,\r\n    SiteLicense\r\n} from 'components/SiteAccordionBody';\r\nimport { FitHeightModal } from 'components/MyModal';\r\nimport { LanguageContext } from 'components/LanguageProvider';\r\nimport { ExpandMoreIcon, NoteIcon } from 'components/icon';\r\n\r\nconst MsgModal = styled(FitHeightModal)`\r\n    > div:nth-child(3) {\r\n        width: 40%;\r\n        top: 20%;\r\n        min-height: max-content;\r\n        min-width: max-content;\r\n    }\r\n`\r\nconst ModalBody = styled.div`\r\n    margin: 0;\r\n    &&& .MuiAccordion-root,\r\n    &&& .MuiAccordionSummary-root {\r\n        border: none;\r\n        cursor: text;\r\n    }\r\n`\r\nconst UpdateModal = ({\r\n    modalOpen,\r\n    onClose\r\n}) => {\r\n    const { pageString } = useContext(LanguageContext)\r\n    const latestMsg = pageString.index.updateLog.content[0]\r\n\r\n    return (\r\n        <MsgModal\r\n            title={`${pageString.index.helmet.title} ${latestMsg.version}`}\r\n            open={modalOpen}\r\n            onClose={onClose}\r\n            ariaLabelledby=\"update-modal-title\"\r\n            ariaDescribedby=\"update-modal-description\"\r\n        >\r\n            <ModalBody>\r\n                {latestMsg.content.map((msg, idx) => (\r\n                    <LogMsg\r\n                        msg={msg}\r\n                        alwaysOpen={true}\r\n                        key={idx}\r\n                    />\r\n                ))}\r\n            </ModalBody>\r\n        </MsgModal>\r\n    )\r\n}\r\n\r\nconst HomeContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    &&& > div {\r\n        margin-bottom: 2rem;\r\n    }\r\n`\r\nconst Header = styled.div`\r\n    width: 60%;\r\n    @media screen and (max-width: 992px) {\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 624px) {\r\n        width: 90%;\r\n    }\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    font-size: x-large;\r\n    font-weight: bold;\r\n    color: ${props => props.theme.colors.onSurface};\r\n    > span:nth-child(2) {\r\n        margin: .4rem;\r\n        font-size: large;\r\n    }\r\n`\r\nconst unreadAnimation = keyframes`\r\n    0%, 67%, 80%, 96%, 100% {\r\n        transform: scale(1,1) translate(0,0);\r\n    }\r\n    72% {\r\n        transform: scale(1.1,.9) translate(0,5%);\r\n    }\r\n    76%, 92% {\r\n        transform: scale(1.2,.8) translate(0,15%);\r\n    }\r\n    84% {\r\n        transform: scale(.9,1.2) translate(0,-100%);\r\n    }\r\n    88% {\r\n        transform: scale(.9,1.2) translate(0,-20%);\r\n    }\r\n`\r\nconst NoteIconWrapper = styled.span`\r\n    position: relative;\r\n    cursor: pointer;\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        fill: ${props => props.theme.colors.onSurface};\r\n    }\r\n    &:after {\r\n        position: absolute;\r\n        content: '';\r\n        right: -.3rem;\r\n        top: .1rem;\r\n        background-color: red;\r\n        border-radius: 100%;\r\n        animation: ${unreadAnimation} 1.5s ease-in-out infinite;\r\n        ${props => props.$unread\r\n        ? 'width: .6rem; height: .6rem;'\r\n        : null}\r\n    }\r\n`\r\nconst DescriptionAccordion = styled(MyAccordion)`\r\n    && {\r\n        width: 60%;\r\n        @media screen and (max-width: 992px) {\r\n            width: 80%;\r\n        }\r\n        @media screen and (max-width: 624px) {\r\n            width: 90%;\r\n        }\r\n        border: 1px solid ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n        & {\r\n            box-shadow: 0 0 .15em lightgray;\r\n        }\r\n        > .MuiAccordionSummary-root {\r\n            font-size: large;\r\n            padding: .75rem 1.25rem;\r\n            border-bottom-right-radius: 0;\r\n            border-bottom-left-radius: 0;\r\n            border-bottom: 0px solid ${props => props.theme.colors.border};\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid ${props => props.theme.colors.border};\r\n        }\r\n        .MuiAccordionDetails-root {\r\n            margin: 1rem;\r\n            padding: 0;\r\n        }\r\n    }\r\n`\r\nexport default () => {\r\n    const { isDefault, pageString } = useContext(LanguageContext)\r\n    const latestMsg = pageString.index.updateLog.content[0]\r\n\r\n    const [state, setState] = useState({\r\n        expanded: 0,\r\n        modalOpen: false,\r\n        unread: true\r\n    })\r\n\r\n    // get whether read latest update\r\n    useEffect(() => {\r\n        const localSetting = localStorage.getItem('last-read-version')\r\n        if (localSetting) {\r\n            setState((state) => ({\r\n                ...state,\r\n                unread: localSetting !== latestMsg.version\r\n            }))\r\n        }\r\n    }, [])\r\n\r\n    const handleExpand = (panel) => (event, isExpanded) => {\r\n        setState((state) => ({\r\n            ...state,\r\n            expanded: isExpanded ? panel : false\r\n        }))\r\n    }\r\n\r\n    const handleModalOpen = () => {\r\n        setState((state) => ({\r\n            ...state,\r\n            modalOpen: true,\r\n            unread: false,\r\n        }))\r\n        localStorage.setItem('last-read-version', latestMsg.version)\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setState((state) => ({\r\n            ...state,\r\n            modalOpen: false,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Head\r\n                title={pageString.index.helmet.title}\r\n                description={pageString.index.helmet.description}\r\n                path='/'\r\n            />\r\n            <HomeContainer>\r\n                <Header>\r\n                    <span>{pageString.index.helmet.title}</span>\r\n                    <span>{latestMsg.version}</span>\r\n                    <NoteIconWrapper\r\n                        onClick={handleModalOpen}\r\n                        $unread={state.unread}\r\n                    >\r\n                        {NoteIcon}\r\n                    </NoteIconWrapper>\r\n                </Header>\r\n                {[\r\n                    {\r\n                        header: pageString.index.about.header,\r\n                        body: <SiteDescription />,\r\n                    },\r\n                    {\r\n                        header: pageString.index.updateLog.header,\r\n                        body: <SiteUpdateLog />,\r\n                    },\r\n                    {\r\n                        header: pageString.index.license.header,\r\n                        body: <SiteLicense />,\r\n                    },\r\n                ].map((item, idx) => (\r\n                    <DescriptionAccordion\r\n                        expanded={state.expanded === idx}\r\n                        onChange={handleExpand(idx)}\r\n                        square={false}\r\n                        expandIcon={ExpandMoreIcon}\r\n                        title={item.header}\r\n                        content={item.body}\r\n                        key={idx}\r\n                    />\r\n                ))}\r\n            </HomeContainer>\r\n            <UpdateModal\r\n                modalOpen={state.modalOpen}\r\n                onClose={handleModalClose}\r\n                ariaLabelledby=\"latest-update-modal-title\"\r\n                ariaDescribedby=\"latest-update-modal-description\"\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nexport const MyIconButton = styled(IconButton)`\r\n    padding: .75rem .5rem;\r\n    svg {\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n        fill: ${props => (\r\n        props.$active\r\n            ? props.theme.colors.secondary\r\n            : props.theme.colors.onSurface\r\n    )};\r\n    }\r\n    &:hover svg {\r\n        fill: ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\n\r\nexport const HeaderIconButton = styled(MyIconButton)`\r\n    && {\r\n        padding: .4rem;\r\n        svg {\r\n            width: 1.4rem;\r\n            height: 1.4rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport default MyIconButton","import React, { useContext } from 'react';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { LanguageContext } from './LanguageProvider';\r\n\r\nexport default ({ title, description, path }) => {\r\n    const { isDefault, userLanguage } = useContext(LanguageContext)\r\n    const url = path === '/' ? '' : path.split('/').slice(0, -1).join('_')\r\n\r\n    return (\r\n        <Helmet>\r\n            <meta name=\"title\" content={title} />\r\n            <meta name=\"description\" content={description} />\r\n            <meta property=\"og:title\" content={title} />\r\n            <meta property=\"og:description\" content={description} />\r\n            <meta property=\"twitter:title\" content={title} />\r\n            <meta property=\"twitter:description\" content={description} />\r\n            <meta\r\n                property=\"og:url\"\r\n                content={`https://purindaisuki.github.io/tkfmtools${(isDefault\r\n                    ? '' : ('/' + userLanguage)) + path}`}\r\n            />\r\n            <meta\r\n                property=\"og:image\"\r\n                content={`https://purindaisuki.github.io/tkfmtools/website_preview${url\r\n                    + (isDefault ? '' : '_' + userLanguage)}.png`}\r\n            />\r\n            <meta\r\n                property=\"twitter:url\"\r\n                content={`https://purindaisuki.github.io/tkfmtools${(isDefault\r\n                    ? '' : ('/' + userLanguage)) + path}`}\r\n            />\r\n            <meta\r\n                property=\"twitter:image\"\r\n                content={`https://purindaisuki.github.io/tkfmtools/website_preview${url\r\n                    + (isDefault ? '' : '_' + userLanguage)}.png`}\r\n            />\r\n            <title lang={userLanguage}>{title}</title>\r\n        </Helmet>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ScrollableContainer = styled.div`\r\n    overflow: auto;\r\n    height: 100%;\r\n    scrollbar-width: thin;\r\n    padding-right: .5rem;\r\n    margin-right: -.5rem;\r\n    &::-webkit-scrollbar {\r\n        width: .4rem;\r\n        height: .4rem;\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n    &::-webkit-scrollbar-corner {\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n`\r\n\r\nexport default ScrollableContainer","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { HeaderIconButton } from './MyIconButton';\r\nimport { HelpIcon } from './icon';\r\n\r\nconst StyledHeader = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n    height: 2.2rem;\r\n    border-bottom: solid 1px ${props => props.theme.colors.border};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    font-size: large;\r\n    font-weight: normal;\r\n`\r\nconst TitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    > span {\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        line-height: normal;\r\n        svg {\r\n            width: 1.2rem;\r\n            height: 1.2rem;\r\n            margin-right: .4rem;\r\n            margin-bottom: .2rem;\r\n            fill: ${props => props.theme.colors.onSurface};\r\n        }\r\n    }\r\n`\r\nconst MyHeader = ({\r\n    className,\r\n    title,\r\n    titleIcon,\r\n    withHelp,\r\n    onClickHelp,\r\n    end\r\n}) => (\r\n    <StyledHeader className={className}>\r\n        <TitleWrapper>\r\n            <span>{titleIcon}{title}</span>\r\n            {withHelp && onClickHelp ?\r\n                <HeaderIconButton\r\n                    onClick={onClickHelp}\r\n                >\r\n                    {HelpIcon}\r\n                </HeaderIconButton> : null}\r\n        </TitleWrapper>\r\n        <div>\r\n            {end}\r\n        </div>\r\n    </StyledHeader>\r\n)\r\n\r\nexport default MyHeader"],"sourceRoot":""}