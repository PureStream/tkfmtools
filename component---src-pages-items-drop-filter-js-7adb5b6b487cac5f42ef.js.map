{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/ToggleButton.js","webpack:///./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack:///./node_modules/react-bootstrap/esm/ToggleButtonGroup.js","webpack:///./node_modules/react-bootstrap/esm/ElementChildren.js","webpack:///./src/components/MyToggleButtonGroup.js","webpack:///./src/components/MyModal.js","webpack:///./src/gamedata/byStageToItem.js","webpack:///./src/components/ItemFilter.js","webpack:///./src/pages/items/drop/filter.js"],"names":["noop","ToggleButton","forwardRef","_ref","ref","children","name","className","checked","type","onChange","value","disabled","inputRef","props","_useState","focused","setFocused","handleFocus","e","target","tagName","handleBlur","createElement","Button","undefined","active","as","autoComplete","onFocus","onBlur","displayName","ButtonGroup","bsPrefix","size","toggle","vertical","_ref$as","Component","rest","prefix","baseClass","defaultProps","role","ToggleButtonGroup","_useUncontrolled","controlledProps","getValues","concat","func","index","Children","map","child","isValidElement","values","_child$props","childVal","childOnChange","cloneElement","indexOf","inputVal","event","isActive","filter","n","handleToggle","StyledToggleButton","styled","theme","colors","secondaryBorder","surface","onSurface","secondary","onSecondary","MyToggleButton","StyledToggleButtonGroup","Object","entries","$layoutConfig","entry","MyToggleButtonGroup","layoutConfig","StyledModal","div","border","ModalHeader","MyHeader","CloseWrapper","span","MyModal","title","open","onClose","ariaLabelledby","ariaDescribedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","disableEnforceFocus","aria-labelledby","aria-describedby","in","end","onClick","FitHeightModal","ScrollableModal","ModalBody","TextModalContent","content","item","idx","Fragment","key","text","TextModal","itemDropData","stageDropData","forEach","stage","materials","trainItems","expPotions","items","newDrop","rarity","id","drop","push","i","toString","ItemImg","ImageSupplier","ItemFilterPanel","filterBtnValue","filterBy","clearBtnValue","useContext","LanguageContext","userLanguage","pageString","itemString","widthConfig","default","1360","992","itemPanelTitle","DeleteIcon","768","624","0","410","length","alt","ImgTh","SortableTh","TableImg","ItemTh","requestSort","getSortDirection","sortedResult","tableHead","direction","TableHead","TableBody","energy","FilterContainer","ItemFilter","useState","data","isHelpModalOpen","state","setState","val","filteredStages","drops","every","queryItem","flag","newStage","chapter","includes","handelHelpModal","boolean","head","body","sortFunc","sortableItems","sortConfig","toStageKey","splits","split","parseInt","sort","a","b","aKey","bKey","defaultSortKey","handleModalOpen","striped","helpModal","Head","helmet","description","path"],"mappings":"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","file":"component---src-pages-items-drop-filter-js-7adb5b6b487cac5f42ef.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\n\r\nconst StyledToggleButton = styled(ToggleButton)`\r\n    &&&& {\r\n        padding: .15rem .15rem;\r\n        border-radius: .25rem;\r\n        border: 1px solid ${props => props.theme.colors.secondaryBorder};\r\n        background-color: ${props => props.theme.colors.surface};\r\n        color: ${props => props.theme.colors.onSurface};\r\n        white-space: break-spaces;\r\n        user-select: none;\r\n        &:hover {\r\n            border: 1px solid ${props => props.theme.colors.secondary};\r\n            box-shadow: inset 0 0 .5rem ${props => props.theme.colors.secondary}\r\n                , 0 0 .1rem ${props => props.theme.colors.secondary};\r\n        }\r\n        &.active {\r\n            background-color: ${props => props.theme.colors.secondary};\r\n            color: ${props => props.theme.colors.onSecondary};\r\n        }\r\n        &.focus {\r\n            box-shadow: none;\r\n        }\r\n    }\r\n`\r\nexport const MyToggleButton = ({\r\n    className,\r\n    children,\r\n    type,\r\n    checked,\r\n    onChange,\r\n    value\r\n}) => {\r\n    return (\r\n        <StyledToggleButton\r\n            className={className}\r\n            type={type}\r\n            value={value}\r\n            checked={checked}\r\n            onChange={onChange}\r\n        >\r\n            {children}\r\n        </StyledToggleButton>\r\n    )\r\n}\r\n\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)`\r\n    display: grid;\r\n    gap: .5rem;\r\n    ${props => Object.entries(props.$layoutConfig).map(entry => (\r\n        `@media screen and (min-width: ${entry[0]}px) {\r\n            grid-template-columns: repeat(${entry[1]}, 1fr);\r\n        }\r\n        `\r\n    ))}\r\n`\r\nexport default function MyToggleButtonGroup({\r\n    children,\r\n    className,\r\n    type,\r\n    value,\r\n    onChange,\r\n    layoutConfig\r\n}) {\r\n    return (\r\n        <StyledToggleButtonGroup\r\n            type={type}\r\n            value={value}\r\n            onChange={onChange}\r\n            $layoutConfig={layoutConfig}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </StyledToggleButtonGroup>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Backdrop, Fade, Modal } from '@material-ui/core';\r\nimport MyHeader from './MyHeader';\r\nimport ScrollableContainer from './ScrollableContainer';\r\n\r\nconst StyledModal = styled.div`\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    position: absolute;\r\n    width: 70%;\r\n    height: 80%;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    @media screen and (max-width: 992px) {\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        width: 90%;\r\n    }\r\n    padding: 1rem;\r\n    border-radius: .25rem;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n`\r\nconst ModalHeader = styled(MyHeader)`\r\n    margin: -1rem;\r\n    margin-bottom: 1rem;\r\n    padding: .2rem .5rem;\r\n    background-color: ${props => props.theme.colors.secondary};\r\n    span {\r\n        color: ${props => props.theme.colors.onSecondary};\r\n    }\r\n`\r\nconst CloseWrapper = styled.span`\r\n    cursor: pointer;\r\n    font-size: x-large;\r\n`\r\nexport const MyModal = ({\r\n    children,\r\n    className,\r\n    title,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby\r\n}) => (\r\n    <Modal\r\n        className={className}\r\n        open={open}\r\n        onClose={onClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{ timeout: 500 }}\r\n        disableEnforceFocus\r\n        aria-labelledby={ariaLabelledby}\r\n        aria-describedby={ariaDescribedby}\r\n    >\r\n        <Fade in={open}>\r\n            <StyledModal>\r\n                <ModalHeader\r\n                    title={title}\r\n                    end={<CloseWrapper onClick={onClose}>&times;</CloseWrapper>}\r\n                />\r\n                {children}\r\n            </StyledModal>\r\n        </Fade>\r\n    </Modal>\r\n)\r\n\r\nexport const FitHeightModal = styled(MyModal)`\r\n    > div:nth-child(3) {\r\n        top: 10%;\r\n        bottom: auto;\r\n        height: min-content;\r\n        > div {\r\n            max-height: calc(80vh - 2rem);\r\n        }\r\n    }\r\n`\r\nconst ScrollableModal = ({\r\n    children,\r\n    className,\r\n    title,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby,\r\n}) => (\r\n    <FitHeightModal\r\n        className={className}\r\n        title={title}\r\n        open={open}\r\n        onClose={onClose}\r\n        ariaLabelledby={ariaLabelledby}\r\n        ariaDescribedby={ariaDescribedby}\r\n    >\r\n        <ScrollableContainer>\r\n            {children}\r\n        </ScrollableContainer>\r\n    </FitHeightModal>\r\n)\r\n\r\nconst ModalBody = styled.div`\r\n    margin: 1rem 0;\r\n`\r\nconst TextModalContent = ({\r\n    content\r\n}) => (\r\n    content.map((item, idx) => (\r\n        <React.Fragment key={idx}>\r\n            <MyHeader\r\n                title={item.title}\r\n            />\r\n            <ModalBody>\r\n                {item.content.map((text, idx) => <p key={idx}>{text}</p>)}\r\n            </ModalBody>\r\n        </React.Fragment>\r\n    ))\r\n)\r\n\r\nexport const TextModal = ({\r\n    title,\r\n    content,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby\r\n}) => (\r\n    <ScrollableModal\r\n        title={title}\r\n        open={open}\r\n        onClose={onClose}\r\n        ariaLabelledby={ariaLabelledby}\r\n        ariaDescribedby={ariaDescribedby}\r\n    >\r\n        <TextModalContent\r\n            content={content}\r\n        />\r\n    </ScrollableModal>\r\n)\r\n\r\nexport default MyModal","import stageDropData from 'gamedata/stageDrop.json';\r\n\r\nlet itemDropData = {}\r\n\r\n// from stages\r\nstageDropData.forEach(stage => {\r\n    const { materials, trainItems, expPotions, ...rest } = stage\r\n\r\n    const dropItems = [materials, trainItems, expPotions]\r\n\r\n    dropItems.forEach(items => {\r\n        items.forEach(item => {\r\n            const newDrop = { rarity: item.rarity, ...rest }\r\n\r\n            if (itemDropData[item.id]) {\r\n                itemDropData[item.id].drop.push(newDrop)\r\n            } else {\r\n                itemDropData[item.id] = {\r\n                    drop: [newDrop]\r\n                }\r\n            }\r\n        })\r\n    })\r\n})\r\n\r\n// not available from stages\r\n//legendary items\r\n\r\nfor (let i = 1; i < 11; i++) {\r\n    itemDropData[(500 + i).toString()] = { drop: [] }\r\n}\r\n\r\n// skill items\r\nfor (let i = 1; i < 3; i++) {\r\n    itemDropData[(900 + i).toString()] = { drop: [] }\r\n}\r\n\r\nexport default itemDropData","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FilterPanel, ResultTable, SortableTh } from './FilterComponents';\r\nimport MyHeader from './MyHeader';\r\nimport { HeaderIconButton } from './MyIconButton';\r\nimport MyToggleButtonGroup, { MyToggleButton } from './MyToggleButtonGroup';\r\nimport ImageSupplier from './ImageSupplier';\r\nimport { TextModal } from './MyModal';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport { DeleteIcon } from './icon';\r\nimport itemDropData from 'gamedata/byStageToItem';\r\nimport stageDropData from 'gamedata/stageDrop.json';\r\n\r\nconst StyledToggleButton = styled(MyToggleButton)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: .85rem;\r\n`\r\nconst ItemImg = styled(ImageSupplier)`\r\n    width: 2.26rem; \r\n    height: 2.26rem;\r\n`\r\nconst ItemFilterPanel = ({\r\n    filterBtnValue,\r\n    filterBy,\r\n    clearBtnValue\r\n}) => {\r\n    const { userLanguage, pageString, itemString } = useContext(LanguageContext)\r\n\r\n    const widthConfig = {\r\n        default: '60%',\r\n        1360: '62%',\r\n        992: '100%',\r\n    }\r\n\r\n    const btnLayoutConfig = {\r\n        'en': {\r\n            1360: 4,\r\n            992: 3,\r\n            768: 4,\r\n            624: 3,\r\n            0: 2\r\n        },\r\n        'zh-TW': {\r\n            1360: 5,\r\n            992: 4,\r\n            768: 5,\r\n            624: 4,\r\n            410: 3,\r\n            0: 2,\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FilterPanel widthConfig={widthConfig}>\r\n            <MyHeader\r\n                title={pageString.items.drop.filter.itemPanelTitle}\r\n                end={\r\n                    <HeaderIconButton\r\n                        onClick={clearBtnValue}\r\n                    >\r\n                        {DeleteIcon}\r\n                    </HeaderIconButton>\r\n                }\r\n            />\r\n            <MyToggleButtonGroup\r\n                type='checkbox'\r\n                value={filterBtnValue}\r\n                onChange={filterBy}\r\n                layoutConfig={btnLayoutConfig[userLanguage]}\r\n            >\r\n                {Object.entries(itemDropData).map((entry, idx) => {\r\n                    if (entry[1].drop.length === 0) return true\r\n\r\n                    return (\r\n                        <StyledToggleButton\r\n                            value={entry[0]}\r\n                            key={idx}\r\n                        >\r\n                            <ItemImg\r\n                                name={`item_${entry[0]}.png`}\r\n                                alt=''\r\n                            />\r\n                            {itemString.name[entry[0]]}\r\n                        </StyledToggleButton>\r\n                    )\r\n                })}\r\n            </MyToggleButtonGroup>\r\n        </FilterPanel>\r\n    )\r\n}\r\n\r\nconst ImgTh = styled(SortableTh)`\r\n    &:after {\r\n        position: absolute;\r\n        top: calc(50% - .75rem);\r\n        margin-left: 2rem;\r\n    }\r\n`\r\nconst TableImg = styled(ImageSupplier)`\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n`\r\nconst ItemTh = ({\r\n    requestSort,\r\n    getSortDirection,\r\n    sortedResult\r\n}) => {\r\n    const { pageString, itemString } = useContext(LanguageContext)\r\n\r\n    if (sortedResult.length === 0) {\r\n        return (\r\n            <SortableTh>\r\n                {pageString.items.drop.filter.tableHead[1]}\r\n            </SortableTh>\r\n        )\r\n    }\r\n\r\n    return (\r\n        Object.entries(sortedResult[0]).map((entry, idx) => {\r\n            if (entry[0] === 'stage' || entry[0] === 'energy') {\r\n                return\r\n            }\r\n\r\n            return (\r\n                <ImgTh\r\n                    key={idx}\r\n                    onClick={() => requestSort(entry[0])}\r\n                    direction={getSortDirection(entry[0])}\r\n                >\r\n                    <TableImg\r\n                        name={`item_${entry[0]}.png`}\r\n                        alt={itemString.name[entry[0]]}\r\n                    />\r\n                </ImgTh>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nconst TableHead = ({\r\n    requestSort,\r\n    getSortDirection,\r\n    sortedResult\r\n}) => {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <SortableTh\r\n                    onClick={() => requestSort('stage')}\r\n                    direction={getSortDirection('stage')}\r\n                >\r\n                    {pageString.items.drop.filter.tableHead[0]}\r\n                </SortableTh>\r\n                <ItemTh\r\n                    requestSort={requestSort}\r\n                    getSortDirection={getSortDirection}\r\n                    sortedResult={sortedResult}\r\n                />\r\n                <ImgTh\r\n                    onClick={() => requestSort('energy')}\r\n                    direction={getSortDirection('energy')}\r\n                >\r\n                    <TableImg\r\n                        name='energy.png'\r\n                        alt={pageString.items.drop.filter.tableHead[2]}\r\n                    />\r\n                </ImgTh>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = ({ sortedResult }) => {\r\n    const { itemString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <tbody>\r\n            {sortedResult.map((stage, idx) => {\r\n                return (\r\n                    <tr key={idx}>\r\n                        <td>{stage.stage}</td>\r\n                        {Object.entries(stage).map((entry, idx) => {\r\n                            if (\r\n                                entry[0] === 'stage' ||\r\n                                entry[0] === 'energy'\r\n                            ) {\r\n                                return\r\n                            }\r\n\r\n                            return (\r\n                                <td key={idx}>\r\n                                    {itemString.rarity[entry[1]]}\r\n                                </td>\r\n                            )\r\n                        })}\r\n                        <td>{stage.energy}</td>\r\n                    </tr>\r\n                )\r\n            })}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nconst FilterContainer = styled.div`\r\n    display: flex;\r\n    @media screen and (max-width: 992px) {\r\n        display: block;\r\n    }\r\n    > div:last-child > div:first-child {\r\n        justify-content: start;\r\n    }\r\n`\r\nexport default function ItemFilter() {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    const [state, setState] = useState({\r\n        filterBtnValue: [],\r\n        data: [],\r\n        isHelpModalOpen: false,\r\n    })\r\n\r\n    const filterBy = (val) => {\r\n        if (val.length === 0) {\r\n            setState((state) => ({\r\n                ...state,\r\n                filterBtnValue: val,\r\n                data: [],\r\n            }))\r\n            return;\r\n        }\r\n\r\n        const stageDrop = stageDropData.map(stage => {\r\n            const { materials, trainItems, expPotions, ...rest } = stage\r\n            return { ...rest, drops: materials.concat(trainItems, expPotions) }\r\n        })\r\n\r\n        let filteredStages = stageDrop.filter(stage => (\r\n            val.every(queryItem => {\r\n                let flag = false\r\n                stage.drops.forEach(drop => {\r\n                    if (drop.id === queryItem) {\r\n                        flag = true\r\n                        return false\r\n                    }\r\n                })\r\n                return flag\r\n            })\r\n        ))\r\n\r\n        filteredStages = filteredStages.map(stage => {\r\n            const parsedStage = stage.chapter + '-' + stage.stage\r\n            const newStage = { stage: parsedStage, energy: stage.energy }\r\n            stage.drops.forEach(item => {\r\n                if (val.includes(item.id)) {\r\n                    newStage[item.id] = item.rarity\r\n                }\r\n            })\r\n            return newStage\r\n        })\r\n\r\n        setState((state) => ({\r\n            ...state,\r\n            filterBtnValue: val,\r\n            data: filteredStages,\r\n        }))\r\n    }\r\n\r\n    const sortFunc = (sortableItems, sortConfig) => {\r\n        const toStageKey = (stage) => {\r\n            const splits = stage.split('-')\r\n\r\n            return (\r\n                parseInt(splits[0]) * 1000 +\r\n                parseInt(splits[1].split(' ')[0]) * 10 +\r\n                (splits[1].includes('free') ? 1 : 0) +\r\n                (splits.length > 2 ? parseInt(splits[2]) : 0)\r\n            )\r\n        }\r\n\r\n        sortableItems.sort((a, b) => {\r\n            let aKey\r\n            let bKey\r\n            if (sortConfig.key === 'stage') {\r\n                aKey = toStageKey(a.stage)\r\n                bKey = toStageKey(b.stage)\r\n            } else {\r\n                aKey = a[sortConfig.key]\r\n                bKey = b[sortConfig.key]\r\n            }\r\n            if (aKey < bKey) {\r\n                return sortConfig.direction === 'asc' ? -1 : 1\r\n            }\r\n            if (aKey > bKey) {\r\n                return sortConfig.direction === 'asc' ? 1 : -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const handelHelpModal = (boolean) => () => {\r\n        setState((state) => ({\r\n            ...state,\r\n            isHelpModalOpen: boolean,\r\n        }))\r\n    }\r\n\r\n    const tableWidthConfig = {\r\n        default: 'calc(40% - 1rem)',\r\n        1360: 'calc(38% - 1rem)',\r\n        992: '100%',\r\n    }\r\n\r\n    return (\r\n        <FilterContainer>\r\n            <ItemFilterPanel\r\n                filterBtnValue={state.filterBtnValue}\r\n                filterBy={filterBy}\r\n                clearBtnValue={() => filterBy([])}\r\n            />\r\n            <ResultTable\r\n                data={state.data}\r\n                head={<TableHead />}\r\n                body={<TableBody />}\r\n                sortFunc={sortFunc}\r\n                defaultSortKey={state.filterBtnValue[0]}\r\n                handleModalOpen={handelHelpModal(true)}\r\n                widthConfig={tableWidthConfig}\r\n                striped\r\n            />\r\n            <TextModal\r\n                title={pageString.items.drop.filter.helpModal.title}\r\n                open={state.isHelpModalOpen}\r\n                onClose={handelHelpModal(false)}\r\n                content={pageString.items.drop.filter.helpModal.content}\r\n                ariaLabelledby=\"help-modal-title\"\r\n                ariaDescribedby=\"help-modal-description\"\r\n            />\r\n        </FilterContainer>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Head from \"components/Head\";\r\nimport ItemFilter from 'components/ItemFilter';\r\nimport { LanguageContext } from 'components/LanguageProvider';\r\n\r\nexport default () => {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <>\r\n            <Head\r\n                title={pageString.items.drop.filter.helmet.title}\r\n                description={pageString.items.drop.filter.helmet.description}\r\n                path='/items/drop/filter/'\r\n            />\r\n            <ItemFilter />\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}