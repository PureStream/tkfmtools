{"version":3,"sources":["webpack:///./src/components/CharPotential.js","webpack:///./src/pages/characters/potential.js"],"names":["IconWrapper","styled","div","props","theme","colors","onSurface","ContainerBody","CharImgWrapper","ImageSupplier","secondary","Select","Form","Control","surface","Gutter","SelectPanel","useContext","LanguageContext","pageString","charString","widthConfig","default","992","title","RaceIcon","characters","potential","characterPanelTitle","name","character","isBackground","alt","characterSelectTitle","Row","Group","as","Col","custom","size","onChange","handleSelect","charData","map","char","idx","rarity","value","id","key","currentSelectTitle","stages","Array","keys","slice","i","targetSelectTitle","MaterialContainer","MaterialWrapper","span","Object","entries","$layoutConfig","entry","MaterialImg","HelpIconWrapper","OtherImg","ResultPanel","result","userLanguage","itemString","useState","modalOpen","setModalOpen","resultLayoutConfig","1360","1200","768","0","624","MaterialBox","items","item","money","PictureSquare","children","ItemIcon","resultDemandTitle","onClick","HelpIcon","BuffIcon","resultBuffTitle","buff","ATK","HP","PASSIVE","handleModalClose","content","modal","FilterContainer","resultPanelWidthConfig","TableGutter","CharPotential","currStage","currSub","targetStage","targetSub","isValid","isSnackbarOpen","undefined","state","setState","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","message","snackbarMsg","action","AlertIcon","attr","event","newState","selected","target","parseInt","type","forEach","potentialType","potentialData","start","end","stage","j","pattern","rank","num","itemMap","parsedItem","toString","Math","round","Head","helmet","description"],"mappings":"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","file":"component---src-pages-characters-potential-js-7840e4978348d7533f6b.js","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport { ContainerHeader, FilterPanel, HelpModal } from '../components/FilterComponents';\r\nimport ImageSupplier from './ImageSupplier';\r\nimport charData from '../gamedata/character.json';\r\nimport potentialData from '../gamedata/potential.json';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport { AlertIcon, BuffIcon, ItemIcon, RaceIcon, HelpIcon } from './icon';\r\n\r\nconst IconWrapper = styled.div`\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        margin-right: .4rem;\r\n        fill: ${props => props.theme.colors.onSurface};\r\n    }\r\n`\r\nconst ContainerBody = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n`\r\nconst CharImgWrapper = styled(ImageSupplier)`\r\n    width: 5rem;\r\n    height: 15rem;\r\n    margin-right: 1rem;\r\n    border: 2px solid ${props => props.theme.colors.secondary};\r\n    border-radius: .25rem;\r\n`\r\nconst Select = styled(Form.Control)`\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    border-radius: .25rem;\r\n    padding: .1rem;\r\n    border: 1px solid ${props => props.theme.colors.secondary};\r\n    width: 100%;\r\n    &:focus {\r\n        box-shadow: 0 0 .4rem ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\nconst Gutter = styled.div`\r\n    margin-top: 3rem;\r\n`\r\nconst SelectPanel = (props) => {\r\n    const { pageString, charString } = useContext(LanguageContext)\r\n\r\n    const widthConfig = {\r\n        default: '25%',\r\n        992: '100%',\r\n    }\r\n\r\n    return (\r\n        <FilterPanel widthConfig={widthConfig}>\r\n            <ContainerHeader\r\n                title={\r\n                    <IconWrapper>\r\n                        {RaceIcon}\r\n                        {pageString.characters.potential.characterPanelTitle}\r\n                    </IconWrapper>\r\n                }\r\n            />\r\n            <ContainerBody>\r\n                <CharImgWrapper\r\n                    name={`char_${props.character}.png`}\r\n                    isBackground={false}\r\n                    alt=''\r\n                />\r\n                <div>\r\n                    <Form>\r\n                        {pageString.characters.potential.characterSelectTitle}\r\n                        <br />\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('character')}\r\n                                >\r\n                                    {\r\n                                        charData.map((char, idx) => {\r\n                                            if (char.rarity < 2) return false\r\n\r\n                                            return (\r\n                                                <option value={char.id} key={idx}>\r\n                                                    {charString.name[char.id]}\r\n                                                </option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <option value={'nr'} key={'nr'}>\r\n                                        {charString.name['nr']}\r\n                                    </option>\r\n                                </Select>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Gutter />\r\n                        {pageString.characters.potential.currentSelectTitle}\r\n                        <br />\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('currStage')}\r\n                                >\r\n                                    {props.stages}\r\n                                </Select>\r\n                            </Form.Group>\r\n                            –\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('currSub')}\r\n                                >\r\n                                    {[...Array(7).keys()].slice(1)\r\n                                        .map(i => <option value={i} key={i}>{i}</option>)}\r\n                                </Select>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        {pageString.characters.potential.targetSelectTitle}\r\n                        <br />\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('targetStage')}\r\n                                >\r\n                                    {props.stages}\r\n                                </Select>\r\n                            </Form.Group>\r\n                            –\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('targetSub')}\r\n                                >\r\n                                    {[...Array(7).keys()].slice(1)\r\n                                        .map(i => <option value={i} key={i}>{i}</option>)}\r\n                                </Select>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </div>\r\n            </ContainerBody>\r\n        </FilterPanel>\r\n    )\r\n}\r\n\r\nconst MaterialContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 1rem;\r\n    min-height: 6rem;\r\n`\r\nconst MaterialWrapper = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 .4rem;\r\n    margin: .2rem 0;\r\n    ${props => Object.entries(props.$layoutConfig).map(entry => (\r\n    `@media screen and (min-width: ${entry[0]}px) {\r\n            width: calc(100% / ${entry[1]});\r\n        }\r\n        `\r\n))}\r\n    > div {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`\r\nconst MaterialImg = styled(ImageSupplier)`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    margin-right: .4rem;\r\n`\r\nconst HelpIconWrapper = styled.div`\r\n    margin-right: auto;\r\n    svg {\r\n        fill: ${props => props.theme.colors.secondary};\r\n        width: 1.4rem;\r\n        height: 1.4rem;\r\n        margin-left: .4rem;\r\n        cursor: pointer;\r\n        vertical-align: top;\r\n    }\r\n`\r\nconst OtherImg = styled(ImageSupplier)`\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    margin-right: .4rem;\r\n`\r\nconst ResultPanel = ({\r\n    widthConfig,\r\n    result\r\n}) => {\r\n    const { userLanguage, pageString, itemString } = useContext(LanguageContext)\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    const resultLayoutConfig = userLanguage === 'en'\r\n        ? {\r\n            1360: 5,\r\n            1200: 4,\r\n            768: 3,\r\n            0: 2\r\n        }\r\n        : {\r\n            1360: 6,\r\n            1200: 5,\r\n            768: 4,\r\n            624: 3,\r\n            0: 2\r\n        }\r\n\r\n    const MaterialBox = () => {\r\n        if (!result.items) return <></>\r\n\r\n        return (\r\n            <>\r\n                {Object.entries(result.items).map((item, idx) => (\r\n                    <MaterialWrapper\r\n                        key={idx}\r\n                        $layoutConfig={resultLayoutConfig}\r\n                    >\r\n                        <div>\r\n                            <MaterialImg\r\n                                name={`item_${item[0]}.png`}\r\n                                isBackground={false}\r\n                                alt=''\r\n                            />\r\n                            {`${itemString.name[item[0]]}`}\r\n                        </div>\r\n                        {item[1]}\r\n                    </MaterialWrapper>\r\n                ))}\r\n                <MaterialWrapper\r\n                    $layoutConfig={resultLayoutConfig}\r\n                >\r\n                    <MaterialImg\r\n                        name='money.png'\r\n                        isBackground={false}\r\n                        alt='money'\r\n                    />\r\n                    {result.money}\r\n                </MaterialWrapper>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const PictureSquare = ({\r\n        children,\r\n        name,\r\n        alt\r\n    }) => (\r\n        <MaterialWrapper\r\n            $layoutConfig={resultLayoutConfig}\r\n        >\r\n            <div>\r\n                <OtherImg\r\n                    name={name}\r\n                    isBackground={false}\r\n                    alt={alt}\r\n                />\r\n                {children}\r\n            </div>\r\n        </MaterialWrapper>\r\n    )\r\n\r\n    return (\r\n        <FilterPanel widthConfig={widthConfig}>\r\n            <div>\r\n                <ContainerHeader\r\n                    title={\r\n                        <IconWrapper>\r\n                            {ItemIcon}\r\n                            {pageString.characters.potential.resultDemandTitle}\r\n                            <HelpIconWrapper\r\n                                onClick={() => setModalOpen(true)}\r\n                            >\r\n                                {HelpIcon}\r\n                            </HelpIconWrapper>\r\n                        </IconWrapper>\r\n                    }\r\n                />\r\n                <MaterialContainer>\r\n                    <MaterialBox />\r\n                </MaterialContainer>\r\n            </div>\r\n            <div>\r\n                <ContainerHeader\r\n                    title={\r\n                        <IconWrapper>\r\n                            {BuffIcon}\r\n                            {pageString.characters.potential.resultBuffTitle}\r\n                        </IconWrapper>\r\n                    }\r\n                />\r\n                <div>\r\n                    <PictureSquare\r\n                        name='ui_small_atk.png'\r\n                        alt='ATK'\r\n                    >\r\n                        {`${result.buff.ATK} %`}\r\n                    </PictureSquare>\r\n                    <PictureSquare\r\n                        name='ui_small_hp.png'\r\n                        alt='HP'\r\n                    >\r\n                        {`${result.buff.HP} %`}\r\n                    </PictureSquare>\r\n                    <PictureSquare\r\n                        name='ui_small_potentialPassive.png'\r\n                        alt='Passive'\r\n                    >\r\n                        {`${result.buff.PASSIVE === 0 ? '-'\r\n                            : result.buff.PASSIVE === 1 ? '1'\r\n                                : result.buff.PASSIVE === 2 ? '2'\r\n                                    : '1 & 2'\r\n                            }`}\r\n                    </PictureSquare>\r\n                </div>\r\n            </div>\r\n            <HelpModal\r\n                modalOpen={modalOpen}\r\n                handleModalClose={() => setModalOpen(false)}\r\n                content={pageString.characters.potential.modal}\r\n            />\r\n        </FilterPanel>\r\n    )\r\n}\r\n\r\nconst FilterContainer = styled.div`\r\n    display: table;\r\n    width: 100%;\r\n    > div {\r\n        display: table-cell;\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        display: block;\r\n        > div {\r\n            display: block; \r\n        }\r\n    }\r\n    > div:last-child {\r\n        @media screen and (max-width: 992px) {\r\n            width: ${props => props.resultPanelWidthConfig[992]};\r\n            margin-left: calc(100% - ${props => props.resultPanelWidthConfig[992]});\r\n            position: relative;\r\n            margin-top: 1rem;\r\n        }\r\n    }\r\n    > .MuiSnackbar-root {\r\n        > div {\r\n            background-color: #ff9800;\r\n            font-size: medium;\r\n            display: flex;\r\n            flex-direction: row-reverse;\r\n            justify-content: center;\r\n            > .MuiSnackbarContent-action {\r\n                margin: 0;\r\n                padding: 0;\r\n                svg \r\n                {\r\n                    width: 1.4rem;\r\n                    height: 1.4rem;\r\n                    fill: #fff;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\nconst TableGutter = styled.div`\r\n    width: 0;\r\n    padding: .5rem;\r\n    @media screen and (max-width: 992px) {\r\n        padding: 0;\r\n    }\r\n`\r\nconst resultPanelWidthConfig = {\r\n    default: 'calc(75% - 1rem)',\r\n    992: '100%',\r\n}\r\n\r\nexport default function CharPotential() {\r\n    const { pageString, charString } = useContext(LanguageContext)\r\n\r\n    const [state, setState] = useState({\r\n        character: '101',\r\n        currStage: '1',\r\n        currSub: '1',\r\n        targetStage: '1',\r\n        targetSub: '1',\r\n        isValid: true,\r\n        isSnackbarOpen: false,\r\n        result: {\r\n            items: undefined,\r\n            money: 0,\r\n            buff: {\r\n                ATK: 0,\r\n                HP: 0,\r\n                PASSIVE: 0\r\n            },\r\n        },\r\n    })\r\n\r\n    const handleSelect = (attr) => (event) => {\r\n        //update state\r\n        let newState = { ...state }\r\n\r\n        const selected = event.target.value\r\n\r\n        newState[attr] = selected\r\n        if (selected === 'nr') {\r\n            newState.currStage = parseInt(state.currStage) > 6 ? 1 : state.currStage\r\n            newState.targetStage = parseInt(state.targetStage) > 6 ? 1 : state.targetStage\r\n        }\r\n        newState.isValid =\r\n            parseInt(newState.targetStage) > parseInt(newState.currStage) ||\r\n            (parseInt(newState.targetStage) === parseInt(newState.currStage) &&\r\n                parseInt(newState.targetSub) >= parseInt(newState.currSub))\r\n        newState.isSnackbarOpen = !newState.isValid\r\n        if (!newState.isValid) {\r\n            newState.result = {\r\n                items: undefined,\r\n                money: 0,\r\n                buff: {\r\n                    ATK: 0,\r\n                    HP: 0,\r\n                    PASSIVE: 0\r\n                },\r\n            }\r\n            setState(newState)\r\n            return\r\n        }\r\n        let result = {\r\n            items: {},\r\n            money: 0,\r\n            buff: {\r\n                ATK: 0,\r\n                HP: 0,\r\n                PASSIVE: 0\r\n            },\r\n        }\r\n        // calculate demand\r\n        let type\r\n        if (newState.character === 'nr') {\r\n            type = 3\r\n        } else {\r\n            charData.forEach(char => {\r\n                if (char.id === newState.character) {\r\n                    type = char.potentialType\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n\r\n        const stages = potentialData.type[type]\r\n        const start = newState.currStage - 1\r\n        const end = newState.targetStage - 1\r\n        for (let i = start; i < end + 1; i++) {\r\n            let stage = stages[i]\r\n            for (\r\n                let j = i === start ? newState.currSub - 1 : 0;\r\n                j < (i === end ? newState.targetSub : 6);\r\n                j++\r\n            ) {\r\n                let id = stage.pattern[j] + stage.rank[j]\r\n                if (result.items[id]) {\r\n                    result.items[id] += stage.num[j]\r\n                } else {\r\n                    result.items[id] = stage.num[j]\r\n                }\r\n                result.money += (i + 1) * 8000\r\n                let buff = potentialData.itemMap[stage.pattern[j]].type\r\n                result.buff[buff] += stage.buff[j]\r\n            }\r\n        }\r\n        // parse result\r\n        let parsedItem = {}\r\n        for (const [key, value] of Object.entries(result.items)) {\r\n            let itemId = potentialData.itemMap[key[0]].id.map(id => (\r\n                key[1] === '9' ? '902'\r\n                    : key[1] === '8' ? '901'\r\n                        : (parseInt(key[1]) * 100 + id).toString()\r\n            ))\r\n            for (let i of itemId) {\r\n                if (parsedItem[i]) {\r\n                    parsedItem[i] += value\r\n                } else {\r\n                    parsedItem[i] = value\r\n                }\r\n            }\r\n        }\r\n        result.items = parsedItem\r\n        result.buff.ATK = Math.round(result.buff.ATK * 100) / 100\r\n        result.buff.HP = Math.round(result.buff.HP * 100) / 100\r\n        newState.result = result\r\n        setState(newState)\r\n    }\r\n\r\n    const stages = [...Array(state.character === 'nr' ? 7 : 13).keys()]\r\n        .slice(1).map(i => <option value={i} key={i}>{i}</option>)\r\n\r\n    const handleSnackbarClose = () => setState((state) => ({\r\n        ...state,\r\n        isSnackbarOpen: false\r\n    }))\r\n\r\n    return (\r\n        <FilterContainer\r\n            resultPanelWidthConfig={resultPanelWidthConfig}\r\n        >\r\n            <Snackbar\r\n                open={state.isSnackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                message={pageString.characters.potential.snackbarMsg}\r\n                action={AlertIcon}\r\n            />\r\n            <SelectPanel\r\n                handleSelect={handleSelect}\r\n                stages={stages}\r\n                character={state.character}\r\n            />\r\n            <TableGutter />\r\n            <ResultPanel\r\n                widthConfig={resultPanelWidthConfig}\r\n                result={state.result}\r\n            />\r\n        </FilterContainer>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Head from '../../components/Head';\r\nimport CharPotential from '../../components/CharPotential';\r\nimport { LanguageContext } from '../../components/LanguageProvider';\r\n\r\nexport default () => {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <>\r\n            <Head\r\n                title={pageString.characters.potential.helmet.title}\r\n                description={pageString.characters.potential.helmet.description}\r\n            />\r\n            <CharPotential />\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}