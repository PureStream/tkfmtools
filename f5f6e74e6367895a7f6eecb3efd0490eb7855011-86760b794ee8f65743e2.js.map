{"version":3,"sources":["webpack://tkfmtools/./src/components/Head.js","webpack://tkfmtools/./src/components/Header.js","webpack://tkfmtools/./src/components/Modal.js","webpack://tkfmtools/./src/containers/Scrollable.js"],"names":["title","description","path","useLanguage","isDefault","userLanguage","url","split","slice","join","name","content","property","lang","StyledHeader","styled","props","$border","theme","colors","border","onSurface","TitleWrapper","className","titleIcon","withHelp","onClickHelp","end","id","onClick","tooltipText","HelpIcon","ModalContentWrapper","surface","ModalHeader","Header","secondary","onSecondary","CloseWrapper","Modal","children","open","onClose","keepMounted","ariaLabelledby","ariaDescribedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","disableEnforceFocus","aria-labelledby","aria-describedby","in","StyledScrollableModal","ScrollableModal","ModalBody","TextModalContent","map","item","ind","key","text","TextModal","Array","length","keys","i","Scrollable"],"mappings":"iJAKA,aAAe,GAAmC,IAAhCA,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAAW,GACTC,SAA5BC,EADqC,EACrCA,UAAWC,EAD0B,EAC1BA,aACbC,EAAe,MAATJ,EAAe,GAAKA,EAAKK,MAAM,KAAKC,MAAM,GAAI,GAAGC,KAAK,KAElE,OACI,gBAAC,IAAD,KACI,wBAAMC,KAAK,QAAQC,QAASX,IAC5B,wBAAMU,KAAK,cAAcC,QAASV,IAClC,wBAAMW,SAAS,WAAWD,QAASX,IACnC,wBAAMY,SAAS,iBAAiBD,QAASV,IACzC,wBAAMW,SAAS,gBAAgBD,QAASX,IACxC,wBAAMY,SAAS,sBAAsBD,QAASV,IAC9C,wBACIW,SAAS,SACTD,QAAO,4CAA8CP,EAC/C,GAAM,IAAMC,GAAiBH,IAEvC,wBACIU,SAAS,WACTD,QAAO,2DAA6DL,GAC7DF,EAAY,GAAK,IAAMC,GADvB,SAGX,wBACIO,SAAS,cACTD,QAAO,4CAA8CP,EAC/C,GAAM,IAAMC,GAAiBH,IAEvC,wBACIU,SAAS,gBACTD,QAAO,2DAA6DL,GAC7DF,EAAY,GAAK,IAAMC,GADvB,SAGX,yBAAOQ,KAAMR,GAAeL,M,mFC/BlCc,EAAeC,oBAAH,4DAAGA,CAAH,sJAMZ,SAAAC,GAAK,OAAIA,EAAMC,QAAN,4BAA4CD,EAAME,MAAMC,OAAOC,OAA/D,IAA2E,MAC7E,SAAAJ,GAAK,OAAIA,EAAME,MAAMC,OAAOE,aAInCC,EAAeP,oBAAH,4DAAGA,CAAH,+MAaE,SAAAC,GAAK,OAAIA,EAAME,MAAMC,OAAOE,aA6BhD,IAzBe,SAAC,GAAD,IACXE,EADW,EACXA,UACAvB,EAFW,EAEXA,MACAwB,EAHW,EAGXA,UACAC,EAJW,EAIXA,SACAC,EALW,EAKXA,YACAC,EANW,EAMXA,IACAC,EAPW,EAOXA,GACAR,EARW,EAQXA,OARW,OAUX,gBAACN,EAAD,CAAcS,UAAWA,EAAWN,QAASG,GACzC,gBAACE,EAAD,KACI,wBAAMM,GAAIA,GAAKJ,EAAWxB,GACzByB,GAAYC,GACT,gBAAC,KAAD,CACIG,QAASH,EACTI,YAAY,QAEXC,OAGZJ,GAAO,2BAAMA,M,wLC/ChBK,EAAsBjB,oBAAH,iEAAGA,CAAH,kRACD,SAAAC,GAAK,OAAIA,EAAME,MAAMC,OAAOc,WACvC,SAAAjB,GAAK,OAAIA,EAAME,MAAMC,OAAOE,aAiBjB,SAAAL,GAAK,OAAIA,EAAME,MAAMC,OAAOC,UAE9Cc,GAAcnB,QAAOoB,KAAV,oEAAGpB,CAAH,+FAIO,SAAAC,GAAK,OAAIA,EAAME,MAAMC,OAAOiB,aAEnC,SAAApB,GAAK,OAAIA,EAAME,MAAMC,OAAOkB,eAGvCC,EAAevB,qBAAH,0DAAGA,CAAH,uCAILwB,EAAQ,SAAC,GAAD,IACjBC,EADiB,EACjBA,SACAjB,EAFiB,EAEjBA,UACAvB,EAHiB,EAGjBA,MACAyC,EAJiB,EAIjBA,KACAC,EALiB,EAKjBA,QACAC,EANiB,EAMjBA,YACAC,EAPiB,EAOjBA,eACAC,EARiB,EAQjBA,gBARiB,OAUjB,gBAAC,IAAD,CACItB,UAAWA,EACXkB,KAAMA,EACNC,QAASA,EACTI,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CAAEC,QAAS,KAC1BC,qBAAmB,EACnBR,YAAaA,EACbS,kBAAiBR,EACjBS,mBAAkBR,GAElB,gBAAC,IAAD,CAAMS,GAAIb,GACN,gBAACT,EAAD,KACI,gBAACE,EAAD,CACIlC,MAAOA,EACP4B,GAAIgB,EACJjB,IAAK,gBAACW,EAAD,CAAcT,QAASa,GAAvB,OAERF,MAMXe,GAAwBxC,QAAOwB,GAAV,8EAAGxB,CAAH,6DAKdyC,EAAkB,SAAC,GAAD,IAC3BhB,EAD2B,EAC3BA,SACAjB,EAF2B,EAE3BA,UACAvB,EAH2B,EAG3BA,MACAyC,EAJ2B,EAI3BA,KACAC,EAL2B,EAK3BA,QACAC,EAN2B,EAM3BA,YACAC,EAP2B,EAO3BA,eACAC,EAR2B,EAQ3BA,gBAR2B,OAU3B,gBAACU,EAAD,CACIhC,UAAWA,EACXvB,MAAOA,EACPyC,KAAMA,EACNC,QAASA,EACTC,YAAaA,EACbC,eAAgBA,EAChBC,gBAAiBA,GAEjB,gBAAC,IAAD,KACKL,KAKPiB,EAAY1C,oBAAH,uDAAGA,CAAH,oBAGT2C,EAAmB,SAAC,GAAD,IACrB/C,EADqB,EACrBA,QACAkC,EAFqB,EAErBA,gBAFqB,OAIrBlC,EAAQgD,KAAI,SAACC,EAAMC,GAAP,OACR,gBAAC,WAAD,CAAgBC,IAAKD,GACjB,gBAAC,IAAD,CACI7D,MAAO4D,EAAK5D,MACZoB,QAAM,IAEV,gBAACqC,EAAD,KACKG,EAAKjD,QAAQgD,KAAI,SAACI,EAAMF,GAAP,OACd,qBAAGC,IAAKD,EAAKjC,GAAIiB,EAAkB,IAAMgB,GAAME,YAOtDC,EAAY,SAAC,GAAD,IACrBhE,EADqB,EACrBA,MACAW,EAFqB,EAErBA,QACA8B,EAHqB,EAGrBA,KACAC,EAJqB,EAIrBA,QACAE,EALqB,EAKrBA,eACAC,EANqB,EAMrBA,gBANqB,OAQrB,gBAACW,EAAD,CACIxD,MAAOA,EACPyC,KAAMA,EACNC,QAASA,EACTE,eAAgBA,EAChBC,iBAAiB,OAAIoB,MAAMtD,EAAQuD,QAAQC,QAAQR,KAAI,SAAAS,GAAC,OAAIvB,EAAkB,IAAMuB,KAAG3D,KAAK,MAE5F,gBAACiD,EAAD,CACI/C,QAASA,EACTkC,gBAAiBA,MAK7B,Q,uCCrJMwB,E,SAAatD,kBAAH,sDAAGA,CAAH,kTASM,SAAAC,GAAK,OAAIA,EAAME,MAAMC,OAAOc,WAG5B,SAAAjB,GAAK,OAAIA,EAAME,MAAMC,OAAOC,UAI5B,SAAAJ,GAAK,OAAIA,EAAME,MAAMC,OAAOc,WAG5B,SAAAjB,GAAK,OAAIA,EAAME,MAAMC,OAAOc,WAIlD,O","file":"f5f6e74e6367895a7f6eecb3efd0490eb7855011-86760b794ee8f65743e2.js","sourcesContent":["import React from 'react';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { useLanguage } from 'containers/LanguageProvider';\r\n\r\nexport default ({ title, description, path }) => {\r\n    const { isDefault, userLanguage } = useLanguage()\r\n    const url = path === '/' ? '' : path.split('/').slice(0, -1).join('_')\r\n\r\n    return (\r\n        <Helmet>\r\n            <meta name=\"title\" content={title} />\r\n            <meta name=\"description\" content={description} />\r\n            <meta property=\"og:title\" content={title} />\r\n            <meta property=\"og:description\" content={description} />\r\n            <meta property=\"twitter:title\" content={title} />\r\n            <meta property=\"twitter:description\" content={description} />\r\n            <meta\r\n                property=\"og:url\"\r\n                content={`https://purindaisuki.github.io/tkfmtools${(isDefault\r\n                    ? '' : ('/' + userLanguage)) + path}`}\r\n            />\r\n            <meta\r\n                property=\"og:image\"\r\n                content={`https://purindaisuki.github.io/tkfmtools/website_preview${url\r\n                    + (isDefault ? '' : '_' + userLanguage)}.png`}\r\n            />\r\n            <meta\r\n                property=\"twitter:url\"\r\n                content={`https://purindaisuki.github.io/tkfmtools${(isDefault\r\n                    ? '' : ('/' + userLanguage)) + path}`}\r\n            />\r\n            <meta\r\n                property=\"twitter:image\"\r\n                content={`https://purindaisuki.github.io/tkfmtools/website_preview${url\r\n                    + (isDefault ? '' : '_' + userLanguage)}.png`}\r\n            />\r\n            <title lang={userLanguage}>{title}</title>\r\n        </Helmet>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { HeaderIconButton } from 'components/IconButton';\r\nimport { HelpIcon } from 'components/icon';\r\n\r\nconst StyledHeader = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n    height: 2.2rem;\r\n    ${props => props.$border ? `border-bottom: solid 1px ${props.theme.colors.border};` : ''}\r\n    color: ${props => props.theme.colors.onSurface};\r\n    font-size: large;\r\n    font-weight: normal;\r\n`\r\nconst TitleWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    > span {\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        line-height: normal;\r\n        svg {\r\n            width: 1.2rem;\r\n            height: 1.2rem;\r\n            margin-right: .4rem;\r\n            margin-bottom: .2rem;\r\n            fill: ${props => props.theme.colors.onSurface};\r\n        }\r\n    }\r\n`\r\nconst Header = ({\r\n    className,\r\n    title,\r\n    titleIcon,\r\n    withHelp,\r\n    onClickHelp,\r\n    end,\r\n    id,\r\n    border\r\n}) => (\r\n    <StyledHeader className={className} $border={border}>\r\n        <TitleWrapper>\r\n            <span id={id}>{titleIcon}{title}</span>\r\n            {withHelp && onClickHelp &&\r\n                <HeaderIconButton\r\n                    onClick={onClickHelp}\r\n                    tooltipText='Help'\r\n                >\r\n                    {HelpIcon}\r\n                </HeaderIconButton>}\r\n        </TitleWrapper>\r\n        {end && <div>{end}</div>}\r\n    </StyledHeader>\r\n)\r\n\r\nexport default Header","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Backdrop, Fade, Modal as MuiModal } from '@material-ui/core';\r\n\r\nimport Scrollable from 'containers/Scrollable';\r\n\r\nimport Header from 'components/Header';\r\n\r\nconst ModalContentWrapper = styled.div`\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    position: absolute;\r\n    width: 70%;\r\n    height: auto;\r\n    left: 0;\r\n    right: 0;\r\n    top: 10%;\r\n    bottom: auto;\r\n    margin: auto;\r\n    @media screen and (max-width: 1000px) {\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        width: 90%;\r\n    }\r\n    padding: 1rem;\r\n    border-radius: .25rem;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n`\r\nconst ModalHeader = styled(Header)`\r\n    margin: -1rem;\r\n    margin-bottom: 1rem;\r\n    padding: .2rem .5rem;\r\n    background-color: ${props => props.theme.colors.secondary};\r\n    span {\r\n        color: ${props => props.theme.colors.onSecondary};\r\n    }\r\n`\r\nconst CloseWrapper = styled.span`\r\n    cursor: pointer;\r\n    font-size: x-large;\r\n`\r\nexport const Modal = ({\r\n    children,\r\n    className,\r\n    title,\r\n    open,\r\n    onClose,\r\n    keepMounted,\r\n    ariaLabelledby,\r\n    ariaDescribedby\r\n}) => (\r\n    <MuiModal\r\n        className={className}\r\n        open={open}\r\n        onClose={onClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{ timeout: 500 }}\r\n        disableEnforceFocus\r\n        keepMounted={keepMounted}\r\n        aria-labelledby={ariaLabelledby}\r\n        aria-describedby={ariaDescribedby}\r\n    >\r\n        <Fade in={open}>\r\n            <ModalContentWrapper>\r\n                <ModalHeader\r\n                    title={title}\r\n                    id={ariaLabelledby}\r\n                    end={<CloseWrapper onClick={onClose}>&times;</CloseWrapper>}\r\n                />\r\n                {children}\r\n            </ModalContentWrapper>\r\n        </Fade>\r\n    </MuiModal>\r\n)\r\n\r\nconst StyledScrollableModal = styled(Modal)`\r\n    > div:nth-child(3) > div {\r\n        max-height: calc(80vh - 2rem);\r\n    }\r\n`\r\nexport const ScrollableModal = ({\r\n    children,\r\n    className,\r\n    title,\r\n    open,\r\n    onClose,\r\n    keepMounted,\r\n    ariaLabelledby,\r\n    ariaDescribedby,\r\n}) => (\r\n    <StyledScrollableModal\r\n        className={className}\r\n        title={title}\r\n        open={open}\r\n        onClose={onClose}\r\n        keepMounted={keepMounted}\r\n        ariaLabelledby={ariaLabelledby}\r\n        ariaDescribedby={ariaDescribedby}\r\n    >\r\n        <Scrollable>\r\n            {children}\r\n        </Scrollable>\r\n    </StyledScrollableModal>\r\n)\r\n\r\nconst ModalBody = styled.div`\r\n    margin: 1rem 0;\r\n`\r\nconst TextModalContent = ({\r\n    content,\r\n    ariaDescribedby\r\n}) => (\r\n    content.map((item, ind) => (\r\n        <React.Fragment key={ind}>\r\n            <Header\r\n                title={item.title}\r\n                border\r\n            />\r\n            <ModalBody>\r\n                {item.content.map((text, ind) => (\r\n                    <p key={ind} id={ariaDescribedby + '_' + ind}>{text}</p>\r\n                ))}\r\n            </ModalBody>\r\n        </React.Fragment>\r\n    ))\r\n)\r\n\r\nexport const TextModal = ({\r\n    title,\r\n    content,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby\r\n}) => (\r\n    <ScrollableModal\r\n        title={title}\r\n        open={open}\r\n        onClose={onClose}\r\n        ariaLabelledby={ariaLabelledby}\r\n        ariaDescribedby={[...Array(content.length).keys()].map(i => ariaDescribedby + '_' + i).join(' ')}\r\n    >\r\n        <TextModalContent\r\n            content={content}\r\n            ariaDescribedby={ariaDescribedby}\r\n        />\r\n    </ScrollableModal>\r\n)\r\n\r\nexport default Modal","import styled from 'styled-components';\r\n\r\nconst Scrollable = styled.div`\r\n    overflow: auto;\r\n    height: 100%;\r\n    scrollbar-width: thin;\r\n    padding-right: .5rem;\r\n    margin-right: -.5rem;\r\n    &::-webkit-scrollbar {\r\n        width: .4rem;\r\n        height: .4rem;\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n    &::-webkit-scrollbar-corner {\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n`\r\n\r\nexport default Scrollable"],"sourceRoot":""}