{"version":3,"sources":["webpack://tkfmtools/./src/components/CharStats.js","webpack://tkfmtools/./src/pages/characters/stats.js"],"names":["StatsForm","handleSelect","potentialMaxNum","potentialSubMinNum","disciplineDisabled","starMinNum","pageString","useContext","LanguageContext","characters","stats","levelTitle","starTitle","type","min","max","onChange","placeholder","as","Col","minNum","maxNum","title","potentialTitle","subMinNum","selectAttrs","disciplineTitle","disabled","StyledPanel","styled","FilterPanel","props","widthConfig","BodyContainer","StatsWrapper","theme","colors","onSurface","ResultPanel","result","useState","modalOpen","setModalOpen","resultTitle","withHelp","onClickHelp","AttackIcon","ATK","HpIcon","HP","helpModal","open","onClose","content","ariaLabelledby","ariaDescribedby","CalculatorContainer","StyledCharPanel","CharSelectPanel","TableGutter","resultPanelWidthConfig","default","992","calcStats","character","level","potential","potentialSub","discipline","star","initATK","initHP","levelBuff","buff","calcPotential","disciplineBuff","starBuff","Math","floor","CharStats","state","setState","attr","event","selected","target","value","newState","parseInt","isNaN","charData","c","id","rest","Object","values","helmet","description","path"],"mappings":"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","file":"component---src-pages-characters-stats-js-eb2ff9209ee6372a68c7.js","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport { FilterPanel } from './FilterComponents';\r\nimport MyHeader from './MyHeader';\r\nimport {\r\n    calcPotential,\r\n    CharSelectPanel,\r\n    NumForm,\r\n    Select,\r\n    TwoStageForm\r\n} from './CharPotential';\r\nimport { TextModal } from './MyModal';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport { AttackIcon, HpIcon } from './icon';\r\nimport charData from 'gamedata/character.json';\r\n\r\nconst StatsForm = ({\r\n    handleSelect,\r\n    potentialMaxNum,\r\n    potentialSubMinNum,\r\n    disciplineDisabled,\r\n    starMinNum,\r\n}) => {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <>\r\n            <Form.Row>\r\n                <Col>\r\n                    {pageString.characters.stats.levelTitle}\r\n                </Col>\r\n                <Col>\r\n                    {pageString.characters.stats.starTitle}\r\n                </Col>\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <Col>\r\n                    <Select\r\n                        type='number'\r\n                        min='1'\r\n                        max='60'\r\n                        onChange={handleSelect('level')}\r\n                        placeholder={1}\r\n                    />\r\n                </Col>\r\n                <NumForm\r\n                    as={Col}\r\n                    minNum={starMinNum}\r\n                    maxNum={5}\r\n                    onChange={handleSelect('star')}\r\n                />\r\n            </Form.Row>\r\n            <TwoStageForm\r\n                title={pageString.characters.stats.potentialTitle}\r\n                subMinNum={potentialSubMinNum}\r\n                minNum={1}\r\n                maxNum={potentialMaxNum}\r\n                selectAttrs={['potential', 'potentialSub']}\r\n                handleSelect={handleSelect}\r\n            />\r\n            {pageString.characters.stats.disciplineTitle}\r\n            <Form.Row>\r\n                <NumForm\r\n                    as={Col}\r\n                    minNum={0}\r\n                    maxNum={3}\r\n                    disabled={disciplineDisabled}\r\n                    onChange={handleSelect('discipline')}\r\n                />\r\n            </Form.Row>\r\n        </>\r\n    )\r\n}\r\n\r\nconst StyledPanel = styled(FilterPanel)`\r\n    @media screen and (max-width: 992px) {\r\n        width: ${props => props.widthConfig[992]};\r\n        margin-left: calc(100% - ${props => props.widthConfig[992]});\r\n        position: relative;\r\n        margin-top: 1rem;\r\n    }\r\n`\r\nconst BodyContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst StatsWrapper = styled.div`\r\n    margin: 1.5rem .5rem;\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        margin-right: .2rem;\r\n        fill: ${props => props.theme.colors.onSurface}; \r\n    }\r\n`\r\nconst ResultPanel = ({\r\n    widthConfig,\r\n    result\r\n}) => {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    return (\r\n        <StyledPanel widthConfig={widthConfig}>\r\n            <MyHeader\r\n                title={pageString.characters.stats.resultTitle}\r\n                withHelp\r\n                onClickHelp={() => setModalOpen(true)}\r\n            />\r\n            <BodyContainer>\r\n                <StatsWrapper>\r\n                    {AttackIcon}{`ATK: ${result.ATK}`}\r\n                </StatsWrapper>\r\n                <StatsWrapper>\r\n                    {HpIcon}{`HP: ${result.HP}`}\r\n                </StatsWrapper>\r\n            </BodyContainer>\r\n            <TextModal\r\n                title={pageString.characters.stats.helpModal.title}\r\n                open={modalOpen}\r\n                onClose={() => setModalOpen(false)}\r\n                content={pageString.characters.stats.helpModal.content}\r\n                ariaLabelledby=\"help-modal-title\"\r\n                ariaDescribedby=\"help-modal-description\"\r\n            />\r\n        </StyledPanel>\r\n    )\r\n}\r\n\r\nconst CalculatorContainer = styled.div`\r\n    display: table;\r\n    width: 100%;\r\n    > div {\r\n        display: table-cell;\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        display: block;\r\n        > div {\r\n            display: block; \r\n        }\r\n    }\r\n`\r\nconst StyledCharPanel = styled(CharSelectPanel)`\r\n    width: 35%;\r\n    @media screen and (max-width: 992px) {\r\n        width: 100%;\r\n    }\r\n`\r\nconst TableGutter = styled.div`\r\n    width: 1rem;\r\n    @media screen and (max-width: 992px) {\r\n        display: hidden;\r\n    }\r\n`\r\nconst resultPanelWidthConfig = {\r\n    default: 'calc(65% - 1rem)',\r\n    992: '100%',\r\n}\r\n\r\nexport const calcStats = (\r\n    character,\r\n    level,\r\n    potential,\r\n    potentialSub,\r\n    discipline,\r\n    star,\r\n    initATK,\r\n    initHP\r\n) => {\r\n    const levelBuff = 1.1 ** (level - 1)\r\n    const { buff } = calcPotential(\r\n        character,\r\n        [1, 0],\r\n        [potential, potentialSub]\r\n    )\r\n    const disciplineBuff = 1 + discipline * .05\r\n    const starBuff = (star + 5) / (9 - character[0])\r\n\r\n    return ({\r\n        ATK: Math.floor(initATK * levelBuff * (1 + buff.ATK / 100) * disciplineBuff * starBuff),\r\n        HP: Math.floor(initHP * levelBuff * (1 + buff.HP / 100) * disciplineBuff * starBuff)\r\n    })\r\n}\r\n\r\nexport default function CharStats() {\r\n    const [state, setState] = useState({\r\n        character: '101',\r\n        level: 1,\r\n        potential: 1,\r\n        potentialSub: 0,\r\n        discipline: 0,\r\n        star: 3,\r\n        result: {\r\n            ATK: 920,\r\n            HP: 3476,\r\n        }\r\n    })\r\n\r\n    const handleSelect = (attr) => (event) => {\r\n        const selected = event.target.value\r\n\r\n        let newState = { \r\n            ...state,\r\n            [attr] : attr === 'character' ? selected : parseInt(selected)\r\n         }\r\n\r\n        if (isNaN(parseInt(newState.level)) || newState.level < 0 || newState.level > 60) {\r\n            setState((state) => ({\r\n                ...state,\r\n                level: 1,\r\n                result: {\r\n                    ATK: '-',\r\n                    HP: '-',\r\n                }\r\n            }))\r\n\r\n            return\r\n        }\r\n\r\n        // validate auto updated values\r\n        if (newState.character[0] === '4' || newState.character[0] === '3') {\r\n            if (state.potential > 6) {\r\n                newState.potential = 1\r\n            }\r\n\r\n            if (newState.character[0] === '4') {\r\n                newState.discipline = 0\r\n            }\r\n        }\r\n        if (newState.potential !== 1 && state.potentialSub === 0) {\r\n            newState.potentialSub = 1\r\n        }\r\n        if (4 - newState.character[0] > state.star) {\r\n            newState.star = 4 - newState.character[0]\r\n        }\r\n\r\n        // calculate status\r\n        const { initATK, initHP } = charData.find(c => c.id === newState.character).stats\r\n        const { result, ...rest } = newState\r\n\r\n        newState.result = calcStats(...Object.values(rest), initATK, initHP)\r\n\r\n        setState(newState)\r\n    }\r\n\r\n    return (\r\n        <CalculatorContainer resultPanelWidthConfig={resultPanelWidthConfig}>\r\n            <StyledCharPanel\r\n                handleSelect={handleSelect}\r\n                character={state.character}\r\n            >\r\n                <StatsForm\r\n                    handleSelect={handleSelect}\r\n                    potentialSubMinNum={state.potential === 1 ? 0 : 1}\r\n                    potentialMaxNum={state.character[0] === '4' || state.character[0] === '3'\r\n                        ? 6 : 12}\r\n                    disciplineDisabled={state.character[0] === '4'}\r\n                    starMinNum={4 - state.character[0]}\r\n                />\r\n            </StyledCharPanel>\r\n            <TableGutter />\r\n            <ResultPanel\r\n                widthConfig={resultPanelWidthConfig}\r\n                result={state.result}\r\n            />\r\n        </CalculatorContainer>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport Head from 'components/Head';\r\nimport CharStats from 'components/CharStats';\r\nimport { LanguageContext } from 'components/LanguageProvider';\r\n\r\nconst Stats = () => {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <>\r\n            <Head\r\n                title={pageString.characters.stats.helmet.title}\r\n                description={pageString.characters.stats.helmet.description}\r\n                path='/characters/stats/'\r\n            />\r\n            <CharStats />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Stats"],"sourceRoot":""}