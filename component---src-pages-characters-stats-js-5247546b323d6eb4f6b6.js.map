{"version":3,"sources":["webpack://tkfmtools/./node_modules/react-bootstrap/esm/Table.js","webpack://tkfmtools/./src/components/CharSelectPanel.js","webpack://tkfmtools/./src/components/FilterComponents.js","webpack://tkfmtools/./src/components/MyForm.js","webpack://tkfmtools/./src/gamedata/calcCharStats.js","webpack://tkfmtools/./src/pages/characters/stats.js"],"names":["Table","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","classes","table","responsiveClass","CharForm","styled","StyledForm","CharContainer","CharImgWrapper","ImageSupplier","theme","colors","secondary","children","character","handleSelect","lumpNRChars","useLanguage","pageString","charString","widthConfig","default","992","title","characters","potential","characterPanelTitle","titleIcon","RaceIcon","name","alt","onSubmit","event","preventDefault","characterSelectTitle","as","Col","onChange","charData","char","idx","rarity","value","id","key","nr","StyledFilterPanel","surface","border","FilterPanel","SortableTh","onSurface","direction","undefined","StyledTable","$border","SortableTable","data","head","body","sortFunc","defaultSortKey","items","config","useState","sortConfig","setSortConfig","sortedResult","useMemo","sortableItems","requestSort","useSortableData","useEffect","React","getSortDirection","length","ResultTableContainer","TableWrapper","ScrollableContainer","StyledSortableTable","ResultTable","handleModalOpen","drop","filter","resultTitle","withHelp","onClickHelp","Form","Select","NumForm","minNum","maxNum","defaultValue","disabled","Array","keys","slice","map","i","TwoStageForm","subMinNum","selectAttrs","defaultValues","calcCharPotential","from","to","result","money","buff","ATK","HP","PASSIVE","type","c","potentialType","stages","potentialData","stage","j","pattern","rank","num","parsedItem","parseInt","toString","Object","entries","level","potentialSub","discipline","star","initATK","initHP","levelBuff","disciplineBuff","starBuff","Math","floor","StatsForm","potentialMaxNum","potentialSubMinNum","disciplineDisabled","starMinNum","stats","levelTitle","starTitle","min","max","placeholder","potentialTitle","disciplineTitle","StyledPanel","BodyContainer","StatsWrapper","ResultPanel","modalOpen","setModalOpen","AttackIcon","HpIcon","helpModal","open","onClose","content","ariaLabelledby","ariaDescribedby","CalculatorContainer","StyledCharPanel","CharSelectPanel","TableGutter","resultPanelWidthConfig","CharStats","state","setState","attr","selected","target","newState","isNaN","rest","calcCharStats","values","helmet","description","path"],"mappings":"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","file":"component---src-pages-characters-stats-js-5247546b323d6eb4f6b6.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport { FilterPanel } from 'components/FilterComponents';\r\nimport MyHeader from 'components/MyHeader';\r\nimport ImageSupplier from 'components/ImageSupplier';\r\nimport { Select, StyledForm } from 'components/MyForm';\r\nimport { useLanguage } from 'components/LanguageProvider';\r\nimport { RaceIcon } from 'components/icon';\r\nimport charData from 'gamedata/character.json';\r\n\r\nconst CharForm = styled(StyledForm)`\r\n    form {\r\n        width: 13.5rem;\r\n    }\r\n`\r\nconst CharContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n`\r\nconst CharImgWrapper = styled(ImageSupplier)`\r\n    width: 5.1rem;\r\n    margin-right: 1rem;\r\n    border: 2px solid ${props => props.theme.colors.secondary};\r\n    border-radius: .25rem;\r\n`\r\nconst CharSelectPanel = ({\r\n    children,\r\n    className,\r\n    character,\r\n    handleSelect,\r\n    lumpNRChars,\r\n}) => {\r\n    const { pageString, charString } = useLanguage()\r\n\r\n    const widthConfig = {\r\n        default: '25%',\r\n        992: '100%',\r\n    }\r\n\r\n    return (\r\n        <FilterPanel\r\n            widthConfig={widthConfig}\r\n            className={className}\r\n        >\r\n            <MyHeader\r\n                title={pageString.characters.potential.characterPanelTitle}\r\n                titleIcon={RaceIcon}\r\n            />\r\n            <CharContainer>\r\n                <CharImgWrapper\r\n                    name={`char_${character}`}\r\n                    alt=''\r\n                />\r\n                <CharForm onSubmit={(event) => event.preventDefault()}>\r\n                    {pageString.characters.potential.characterSelectTitle}\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Select\r\n                                as=\"select\"\r\n                                onChange={handleSelect('character')}\r\n                            >\r\n                                {charData.map((char, idx) => {\r\n                                    if (char.rarity < 2 && lumpNRChars) {\r\n                                        return false\r\n                                    }\r\n\r\n                                    return (\r\n                                        <option value={char.id} key={idx}>\r\n                                            {charString.name[char.id]}\r\n                                        </option>\r\n                                    )\r\n                                })}\r\n                                {lumpNRChars &&\r\n                                    <option value={'nr'} key={'nr'}>\r\n                                        {charString.name.nr}\r\n                                    </option>}\r\n                            </Select>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    {children}\r\n                </CharForm>\r\n            </CharContainer>\r\n        </FilterPanel >\r\n    )\r\n}\r\n\r\nexport default CharSelectPanel","import React, { useEffect, useMemo, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Table } from 'react-bootstrap';\r\nimport ScrollableContainer from 'components/ScrollableContainer';\r\nimport MyHeader from 'components/MyHeader';\r\nimport { useLanguage } from 'components/LanguageProvider';\r\n\r\nconst StyledFilterPanel = styled.div`\r\n    height: 100%;\r\n    width: ${props => props.widthConfig.default};\r\n    padding: 1rem;\r\n    border-radius: .25rem;\r\n    background-color: ${props => props.theme.colors.surface};\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    box-shadow: 0 0 .15em lightgray;\r\n    @media screen and (max-width: 1360px) {\r\n        width: ${props => props.widthConfig[1360]};\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        width: ${props => props.widthConfig[992]};\r\n    }\r\n`\r\nexport const FilterPanel = ({\r\n    className,\r\n    children,\r\n    widthConfig\r\n}) => (\r\n    <StyledFilterPanel\r\n        className={className}\r\n        widthConfig={widthConfig}\r\n    >\r\n        {children}\r\n    </StyledFilterPanel>\r\n)\r\n\r\nexport const SortableTh = styled.th`\r\n    cursor: pointer;\r\n    user-select: none;\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    &:after {\r\n        content: '${props => (\r\n        props.direction\r\n            ? props.direction === 'asc'\r\n                ? ' \\\\25B2'\r\n                : ' \\\\25BC'\r\n            : undefined\r\n    )}';\r\n    }\r\n`\r\nconst StyledTable = styled(Table)`\r\n    width: 100%;\r\n    margin-bottom: 0;\r\n    th {\r\n        position: sticky;\r\n        top: 0;\r\n        z-index: 1;\r\n    }\r\n    &, &&& tr {\r\n        color: ${props => props.theme.colors.onSurface};\r\n    }\r\n    th {\r\n        padding: .75rem .25rem;\r\n    }\r\n    th:first-child {\r\n        padding-left: .75rem;\r\n    }\r\n    td {\r\n        vertical-align: middle;\r\n    }\r\n    tr {\r\n        border-bottom: ${props => (\r\n        props.$border\r\n            ? '1px solid ' + props.theme.colors.secondary\r\n            : 'none'\r\n    )};\r\n    }\r\n`\r\nexport const SortableTable = ({\r\n    className,\r\n    data,\r\n    head,\r\n    body,\r\n    sortFunc,\r\n    defaultSortKey,\r\n    striped,\r\n    border\r\n}) => {\r\n    const useSortableData = (\r\n        items, config = {\r\n            key: defaultSortKey,\r\n            direction: 'desc'\r\n        }\r\n    ) => {\r\n        const [sortConfig, setSortConfig] = useState(config)\r\n\r\n        const sortedItems = useMemo(() => {\r\n            let sortableItems = [...items]\r\n            if (sortConfig.key) {\r\n                sortFunc(sortableItems, sortConfig)\r\n            }\r\n\r\n            return sortableItems\r\n        }, [items, sortConfig])\r\n\r\n        const requestSort = (key) => {\r\n            let direction = (\r\n                sortConfig.key === key &&\r\n                sortConfig.direction === 'desc'\r\n            ) ? 'asc' : 'desc'\r\n            setSortConfig({ key, direction })\r\n        }\r\n\r\n        return { sortedResult: sortedItems, requestSort, sortConfig }\r\n    }\r\n\r\n    const { sortedResult, requestSort, sortConfig } = useSortableData(data)\r\n\r\n    // apply default key if value assigned after first render\r\n    useEffect(() => {\r\n        if (sortConfig.key !== defaultSortKey) {\r\n            requestSort(defaultSortKey)\r\n        }\r\n    }, [defaultSortKey])\r\n\r\n    const getSortDirection = (key) => (\r\n        !data || data.length === 0 || sortConfig.key !== key\r\n            ? undefined\r\n            : sortConfig.direction\r\n    )\r\n\r\n    return (\r\n        <StyledTable\r\n            className={className}\r\n            striped={striped}\r\n            borderless\r\n            hover\r\n            $border={border}\r\n            size=\"sm\"\r\n        >\r\n            {React.cloneElement(head, {\r\n                requestSort: requestSort,\r\n                getSortDirection: getSortDirection,\r\n                sortedResult: sortedResult,\r\n            })}\r\n            {React.cloneElement(body, {\r\n                sortedResult: sortedResult,\r\n            })}\r\n        </StyledTable>\r\n    )\r\n}\r\n\r\nconst ResultTableContainer = styled.div`\r\n    vertical-align: top;\r\n    position: absolute;\r\n    width: ${props => props.widthConfig.default};\r\n    margin-left: calc(100% - ${props => props.widthConfig.default});\r\n    padding: 1rem;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-radius: .25rem;\r\n    background-color: ${props => props.theme.colors.surface};\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    box-shadow: 0 0 .15em lightgray;\r\n    @media screen and (max-width: 1360px) {\r\n        width: ${props => props.widthConfig[1360]};\r\n        margin-left: calc(100% - ${props => props.widthConfig[1360]});\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        width: ${props => props.widthConfig[992]};\r\n        margin-left: calc(100% - ${props => props.widthConfig[992]});\r\n        position: relative;\r\n        margin-top: 1rem;\r\n    }\r\n`\r\nconst TableWrapper = styled(ScrollableContainer)`\r\n    height: calc(100% - 1.4rem - 1.5rem);\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n`\r\nconst StyledSortableTable = styled(SortableTable)`\r\n    img {\r\n        width: 1.8rem; height: 1.8rem;\r\n    }\r\n    td {\r\n        padding-left: .75rem;\r\n    }\r\n`\r\nexport function ResultTable({\r\n    data,\r\n    head,\r\n    body,\r\n    sortFunc,\r\n    defaultSortKey,\r\n    handleModalOpen,\r\n    widthConfig,\r\n    striped,\r\n}) {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <ResultTableContainer widthConfig={widthConfig}>\r\n            <MyHeader\r\n                title={pageString.items.drop.filter.resultTitle}\r\n                withHelp\r\n                onClickHelp={handleModalOpen}\r\n            />\r\n            <TableWrapper>\r\n                <StyledSortableTable\r\n                    data={data}\r\n                    head={head}\r\n                    body={body}\r\n                    sortFunc={sortFunc}\r\n                    defaultSortKey={defaultSortKey}\r\n                    striped={striped}\r\n                >\r\n                </StyledSortableTable>\r\n            </TableWrapper>\r\n        </ResultTableContainer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col, Form } from 'react-bootstrap';\r\n\r\nexport const StyledForm = styled(Form)`\r\n    form {\r\n        > div:last-child > div {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`\r\n\r\nexport const Select = styled(Form.Control)`\r\n    && {\r\n        background-color: ${props => props.theme.colors.surface};\r\n        color: ${props => props.theme.colors.onSurface};\r\n        border-radius: .25rem;\r\n        padding: .1rem;\r\n        border: 1px solid ${props => props.theme.colors.secondary};\r\n        width: 100%;\r\n        height: 1.6rem;\r\n        &:focus {\r\n            box-shadow: 0 0 .4rem ${props => props.theme.colors.secondary};\r\n        }\r\n    }\r\n`\r\n\r\nexport const NumForm = ({\r\n    as,\r\n    minNum,\r\n    maxNum,\r\n    onChange,\r\n    defaultValue,\r\n    disabled\r\n}) => (\r\n    <Form.Group as={as}>\r\n        <Select\r\n            as=\"select\"\r\n            value={defaultValue}\r\n            onChange={onChange}\r\n            disabled={disabled}\r\n        >\r\n            {disabled\r\n                ? <option>-</option>\r\n                : [...Array(maxNum + 1).keys()].slice(minNum)\r\n                    .map(i => <option value={i} key={i}>{i}</option>)}\r\n        </Select>\r\n    </Form.Group>\r\n)\r\n\r\nexport const TwoStageForm = ({\r\n    title,\r\n    handleSelect,\r\n    subMinNum,\r\n    minNum,\r\n    maxNum,\r\n    selectAttrs,\r\n    defaultValues,\r\n    disabled\r\n}) => (\r\n    <>\r\n        {title}\r\n        <Form.Row>\r\n            <NumForm\r\n                as={Col}\r\n                minNum={minNum}\r\n                maxNum={maxNum}\r\n                onChange={handleSelect(selectAttrs[0])}\r\n                defaultValue={defaultValues ? defaultValues[0] : undefined}\r\n                disabled={disabled}\r\n            />\r\n            {'–'}\r\n            <NumForm\r\n                as={Col}\r\n                minNum={subMinNum}\r\n                maxNum={6}\r\n                onChange={handleSelect(selectAttrs[1])}\r\n                defaultValue={defaultValues ? defaultValues[1] : undefined}\r\n                disabled={disabled}\r\n            />\r\n        </Form.Row>\r\n    </>\r\n)\r\n","import charData from 'gamedata/character.json';\r\nimport potentialData from 'gamedata/potential.json';\r\n\r\nexport const calcCharPotential = (char, from, to) => {\r\n    const result = {\r\n        items: {},\r\n        money: 0,\r\n        buff: {\r\n            ATK: 0,\r\n            HP: 0,\r\n            PASSIVE: 0\r\n        },\r\n    }\r\n    const type = (char === 'nr' || char[0] === '4' || char[0] === '3')\r\n        ? 3\r\n        : charData.find(c => c.id === char).potentialType\r\n\r\n    const stages = potentialData.type[type]\r\n    for (let i = from[0] - 1; i < to[0] - 1 + 1; i++) {\r\n        let stage = stages[i]\r\n        for (\r\n            let j = i === from[0] - 1 ? from[1] - 1 : 0;\r\n            j < (i === to[0] - 1 ? to[1] : 6);\r\n            j++\r\n        ) {\r\n            if (j < 0) continue\r\n\r\n            let id = stage.pattern[j] + stage.rank[j]\r\n            if (result.items[id]) {\r\n                result.items[id] += stage.num[j]\r\n            } else {\r\n                result.items[id] = stage.num[j]\r\n            }\r\n            result.money += (i + 1) * 8000\r\n            let buff = potentialData.itemMap[stage.pattern[j]].type\r\n            result.buff[buff] += stage.buff[j]\r\n        }\r\n    }\r\n    // parse result\r\n    let parsedItem = {}\r\n    for (const [key, value] of Object.entries(result.items)) {\r\n        let itemId = potentialData.itemMap[key[0]].id.map(id => (\r\n            key[1] === '9' ? '902'\r\n                : key[1] === '8' ? '901'\r\n                    : (parseInt(key[1]) * 100 + id).toString()\r\n        ))\r\n        for (let i of itemId) {\r\n            if (parsedItem[i]) {\r\n                parsedItem[i] += value\r\n            } else {\r\n                parsedItem[i] = value\r\n            }\r\n        }\r\n    }\r\n\r\n    result.items = parsedItem\r\n    return result\r\n}\r\n\r\nexport const calcCharStats = (\r\n    character,\r\n    level,\r\n    potential,\r\n    potentialSub,\r\n    discipline,\r\n    star,\r\n    initATK,\r\n    initHP\r\n) => {\r\n    const levelBuff = 1.1 ** (level - 1)\r\n    const { buff } = calcCharPotential(\r\n        character,\r\n        [1, 0],\r\n        [potential, potentialSub]\r\n    )\r\n    const disciplineBuff = 1 + discipline * .05\r\n    const starBuff = (star + 5) / (9 - character[0])\r\n\r\n    return ({\r\n        ATK: Math.floor(initATK * levelBuff * (1 + buff.ATK / 100) * disciplineBuff * starBuff),\r\n        HP: Math.floor(initHP * levelBuff * (1 + buff.HP / 100) * disciplineBuff * starBuff)\r\n    })\r\n}\r\n\r\nexport default calcCharStats","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport Head from 'components/Head';\r\nimport CharSelectPanel from 'components/CharSelectPanel';\r\nimport { NumForm, Select, TwoStageForm } from 'components/MyForm';\r\nimport { FilterPanel } from 'components/FilterComponents';\r\nimport MyHeader from 'components/MyHeader';\r\nimport { TextModal } from 'components/MyModal';\r\nimport { useLanguage } from 'components/LanguageProvider';\r\nimport { AttackIcon, HpIcon } from 'components/icon';\r\nimport calcCharStats from 'gamedata/calcCharStats';\r\nimport charData from 'gamedata/character.json';\r\n\r\nconst StatsForm = ({\r\n    handleSelect,\r\n    potentialMaxNum,\r\n    potentialSubMinNum,\r\n    disciplineDisabled,\r\n    starMinNum,\r\n}) => {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <>\r\n            <Form.Row>\r\n                <Col>\r\n                    {pageString.characters.stats.levelTitle}\r\n                </Col>\r\n                <Col>\r\n                    {pageString.characters.stats.starTitle}\r\n                </Col>\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <Col>\r\n                    <Select\r\n                        type='number'\r\n                        min='1'\r\n                        max='60'\r\n                        onChange={handleSelect('level')}\r\n                        placeholder={1}\r\n                    />\r\n                </Col>\r\n                <NumForm\r\n                    as={Col}\r\n                    minNum={starMinNum}\r\n                    maxNum={5}\r\n                    onChange={handleSelect('star')}\r\n                />\r\n            </Form.Row>\r\n            <TwoStageForm\r\n                title={pageString.characters.stats.potentialTitle}\r\n                subMinNum={potentialSubMinNum}\r\n                minNum={1}\r\n                maxNum={potentialMaxNum}\r\n                selectAttrs={['potential', 'potentialSub']}\r\n                handleSelect={handleSelect}\r\n            />\r\n            {pageString.characters.stats.disciplineTitle}\r\n            <Form.Row>\r\n                <NumForm\r\n                    as={Col}\r\n                    minNum={0}\r\n                    maxNum={3}\r\n                    disabled={disciplineDisabled}\r\n                    onChange={handleSelect('discipline')}\r\n                />\r\n            </Form.Row>\r\n        </>\r\n    )\r\n}\r\n\r\nconst StyledPanel = styled(FilterPanel)`\r\n    @media screen and (max-width: 992px) {\r\n        width: ${props => props.widthConfig[992]};\r\n        margin-left: calc(100% - ${props => props.widthConfig[992]});\r\n        position: relative;\r\n        margin-top: 1rem;\r\n    }\r\n`\r\nconst BodyContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst StatsWrapper = styled.div`\r\n    margin: 1.5rem .5rem;\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        margin-right: .2rem;\r\n        fill: ${props => props.theme.colors.onSurface}; \r\n    }\r\n`\r\nconst ResultPanel = ({\r\n    widthConfig,\r\n    result\r\n}) => {\r\n    const { pageString } = useLanguage()\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    return (\r\n        <StyledPanel widthConfig={widthConfig}>\r\n            <MyHeader\r\n                title={pageString.characters.stats.resultTitle}\r\n                withHelp\r\n                onClickHelp={() => setModalOpen(true)}\r\n            />\r\n            <BodyContainer>\r\n                <StatsWrapper>\r\n                    {AttackIcon}{`ATK: ${result.ATK}`}\r\n                </StatsWrapper>\r\n                <StatsWrapper>\r\n                    {HpIcon}{`HP: ${result.HP}`}\r\n                </StatsWrapper>\r\n            </BodyContainer>\r\n            <TextModal\r\n                title={pageString.characters.stats.helpModal.title}\r\n                open={modalOpen}\r\n                onClose={() => setModalOpen(false)}\r\n                content={pageString.characters.stats.helpModal.content}\r\n                ariaLabelledby=\"help-modal-title\"\r\n                ariaDescribedby=\"help-modal-description\"\r\n            />\r\n        </StyledPanel>\r\n    )\r\n}\r\n\r\nconst CalculatorContainer = styled.div`\r\n    display: table;\r\n    width: 100%;\r\n    > div {\r\n        display: table-cell;\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        display: block;\r\n        > div {\r\n            display: block; \r\n        }\r\n    }\r\n`\r\nconst StyledCharPanel = styled(CharSelectPanel)`\r\n    width: 35%;\r\n    @media screen and (max-width: 992px) {\r\n        width: 100%;\r\n    }\r\n`\r\nconst TableGutter = styled.div`\r\n    width: 1rem;\r\n    @media screen and (max-width: 992px) {\r\n        display: hidden;\r\n    }\r\n`\r\nconst resultPanelWidthConfig = {\r\n    default: 'calc(65% - 1rem)',\r\n    992: '100%',\r\n}\r\n\r\nconst CharStats = () => {\r\n    const [state, setState] = useState({\r\n        character: '101',\r\n        level: 1,\r\n        potential: 1,\r\n        potentialSub: 0,\r\n        discipline: 0,\r\n        star: 3,\r\n        result: {\r\n            ATK: 920,\r\n            HP: 3476,\r\n        }\r\n    })\r\n\r\n    const handleSelect = (attr) => (event) => {\r\n        const selected = event.target.value\r\n\r\n        let newState = {\r\n            ...state,\r\n            [attr]: attr === 'character' ? selected : parseInt(selected)\r\n        }\r\n\r\n        if (isNaN(parseInt(newState.level)) || newState.level < 0 || newState.level > 60) {\r\n            setState((state) => ({\r\n                ...state,\r\n                level: 1,\r\n                result: {\r\n                    ATK: '-',\r\n                    HP: '-',\r\n                }\r\n            }))\r\n\r\n            return\r\n        }\r\n\r\n        // validate auto updated values\r\n        if (newState.character[0] === '4' || newState.character[0] === '3') {\r\n            if (state.potential > 6) {\r\n                newState.potential = 1\r\n            }\r\n\r\n            if (newState.character[0] === '4') {\r\n                newState.discipline = 0\r\n            }\r\n        }\r\n        if (newState.potential !== 1 && state.potentialSub === 0) {\r\n            newState.potentialSub = 1\r\n        }\r\n        if (4 - newState.character[0] > state.star) {\r\n            newState.star = 4 - newState.character[0]\r\n        }\r\n\r\n        // calculate status\r\n        const { initATK, initHP } = charData.find(c => c.id === newState.character).stats\r\n        const { result, ...rest } = newState\r\n\r\n        newState.result = calcCharStats(...Object.values(rest), initATK, initHP)\r\n\r\n        setState(newState)\r\n    }\r\n\r\n    return (\r\n        <CalculatorContainer resultPanelWidthConfig={resultPanelWidthConfig}>\r\n            <StyledCharPanel\r\n                handleSelect={handleSelect}\r\n                character={state.character}\r\n            >\r\n                <StatsForm\r\n                    handleSelect={handleSelect}\r\n                    potentialSubMinNum={state.potential === 1 ? 0 : 1}\r\n                    potentialMaxNum={state.character[0] === '4' || state.character[0] === '3'\r\n                        ? 6 : 12}\r\n                    disciplineDisabled={state.character[0] === '4'}\r\n                    starMinNum={4 - state.character[0]}\r\n                />\r\n            </StyledCharPanel>\r\n            <TableGutter />\r\n            <ResultPanel\r\n                widthConfig={resultPanelWidthConfig}\r\n                result={state.result}\r\n            />\r\n        </CalculatorContainer>\r\n    )\r\n}\r\n\r\nconst Stats = () => {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <>\r\n            <Head\r\n                title={pageString.characters.stats.helmet.title}\r\n                description={pageString.characters.stats.helmet.description}\r\n                path='/characters/stats/'\r\n            />\r\n            <CharStats />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Stats"],"sourceRoot":""}