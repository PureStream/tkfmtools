{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Button/Button.js","webpack:///./src/gamedata/byStageToItem.js","webpack:///./src/components/ItemShowcase.js","webpack:///./src/components/ItemFilter.js","webpack:///./src/components/CharPotential.js","webpack:///./src/pages/potential.js"],"names":["props","ref","children","classes","className","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","variant","other","concat","capitalize","ButtonBase","root","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","text","primary","transition","transitions","create","duration","short","textDecoration","backgroundColor","action","hoverOpacity","width","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","name","itemDropData","stageDropData","forEach","stage","materials","trainItems","expPotions","rest","items","item","newDrop","rarity","id","drop","push","i","toString","StyledCardHeader","styled","div","ItemImg","ImageSupplier","StyledHeader","ItemCardHeader","itemString","useContext","LanguageContext","isBackground","alt","EnergyTd","td","EnergyImg","CardBodyContnet","pageString","length","potential","overview","notAvailableMsg","map","idx","key","chapter","filter","tableHead","energy","ItemAccordion","MyAccordion","colors","ItemCard","useState","isExpanded","setExpanded","expanded","onChange","square","title","header","content","body","LayoutBtnContainer","BtnWrapper","span","$active","onSecondary","LayoutSwitcher","layout","onClick","handleLayoutChange","byItem","byStage","ItemMasonry","MyMasonry","breakpointCols","default","1360","1200","992","768","Object","entries","entry","CardTable","striped","StyledTh","SortableTh","$sortable","ItemWrapper","ItemsContainer","StyledBadge","Badge","TableContent","TableHeader","requestSort","getSortDirection","sortable","direction","TableBody","sortedResult","itemTd","undefined","pill","ItemTableWrapper","TableWrapper","ItemTable","sortFunc","sortableItems","sortConfig","toStageKey","parseInt","split","includes","sort","a","b","aKey","bKey","defaultSortKey","result","ItemShowcase","SwitchableShowcase","localLayoutConfig","layoutSwitcher","ClearIconWrapper","StyledToggleButton","MyToggleButton","ItemFilterPanel","userLanguage","btnLayoutConfig","624","0","410","widthConfig","itemPanelTitle","end","filterBy","ClearIcon","MyToggleButtonGroup","value","filterBtnValue","layoutConfig","ImgTh","TableImg","ItemTh","FilterContainer","ItemFilter","state","setState","modalOpen","setModalOpen","val","filteredStages","drops","every","queryItem","flag","newStage","splits","handleModalOpen","handleModalClose","modalContent","modal","IconWrapper","onSurface","ContainerBody","CharImgWrapper","Select","Form","Control","surface","Gutter","SelectPanel","charString","RaceIcon","character","characterPanelTitle","characterSelectTitle","Row","Group","as","Col","custom","handleSelect","charData","char","currentSelectTitle","stages","Array","keys","slice","targetSelectTitle","MaterialContainer","MaterialWrapper","$layoutConfig","MaterialImg","HelpIconWrapper","OtherImg","ResultPanel","resultLayoutConfig","MaterialBox","money","PictureSquare","ItemIcon","resultDemandTitle","HelpIcon","BuffIcon","resultBuffTitle","buff","ATK","HP","PASSIVE","resultPanelWidthConfig","TableGutter","CharPotential","currStage","currSub","targetStage","targetSub","isValid","isSnackbarOpen","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","message","snackbarMsg","AlertIcon","attr","event","newState","selected","target","potentialType","potentialData","start","j","pattern","rank","num","itemMap","parsedItem","Math","round","Layout","PageWithTabs","documentTitle","path","tabs","icon","OverviewIcon","FilterIcon","CalcIcon"],"mappings":"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","file":"component---src-pages-potential-js-4a29da5e905eff2eff50.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import stageDropData from '../gamedata/stageDrop.json';\r\n\r\nlet itemDropData = {}\r\n\r\n// from stages\r\nstageDropData.forEach(stage => {\r\n    const { materials, trainItems, expPotions, ...rest } = stage\r\n\r\n    const dropItems = [materials, trainItems, expPotions]\r\n\r\n    dropItems.forEach(items => {\r\n        items.forEach(item => {\r\n            const newDrop = { rarity: item.rarity, ...rest }\r\n\r\n            if (itemDropData[item.id]) {\r\n                itemDropData[item.id].drop.push(newDrop)\r\n            } else {\r\n                itemDropData[item.id] = {\r\n                    drop: [newDrop]\r\n                }\r\n            }\r\n        })\r\n    })\r\n})\r\n\r\n// not available from stages\r\n//legendary items\r\n\r\nfor (let i = 1; i < 11; i++) {\r\n    itemDropData[(500 + i).toString()] = { drop: [] }\r\n}\r\n\r\n// skill items\r\nfor (let i = 1; i < 3; i++) {\r\n    itemDropData[(900 + i).toString()] = { drop: [] }\r\n}\r\n\r\nexport default itemDropData","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Badge } from \"react-bootstrap\"\r\nimport SwitchableShowcase from './SwitchableShowcase';\r\nimport MyMasonry from './MyMasonry';\r\nimport MyAccordion from './MyAccordion';\r\nimport CardTable from './CardTable';\r\nimport { SortableTable, SortableTh, TableWrapper } from './FilterComponents';\r\nimport ImageSupplier from './ImageSupplier';\r\nimport itemDropData from '../gamedata/byStageToItem';\r\nimport stageDropData from '../gamedata/stageDrop.json';\r\nimport { LanguageContext } from './LanguageProvider';\r\n\r\nconst StyledCardHeader = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n`\r\nconst ItemImg = styled(ImageSupplier)`\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    margin-right: .4rem;\r\n    user-select: none;\r\n`\r\nconst StyledHeader = styled.div`\r\n    white-space: nowrap;\r\n    font-size: medium;\r\n    font-weight: normal;\r\n`\r\nconst ItemCardHeader = ({\r\n    className,\r\n    id\r\n}) => {\r\n    const { itemString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <StyledCardHeader\r\n            className={className}\r\n        >\r\n            <ItemImg\r\n                name={`item_${id}.png`}\r\n                isBackground={false}\r\n                alt=''\r\n            />\r\n            <StyledHeader>\r\n                {itemString.name[id]}\r\n            </StyledHeader>\r\n        </StyledCardHeader>\r\n    )\r\n}\r\n\r\nconst EnergyTd = styled.td`\r\n    display: flex;\r\n    align-items: center;\r\n`\r\nconst EnergyImg = styled(ImageSupplier)`\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n`\r\nconst CardBodyContnet = (props) => {\r\n    const { pageString, itemString } = useContext(LanguageContext)\r\n\r\n    if (props.drop.length === 0) {\r\n        return (\r\n            <tbody><tr><td>\r\n                {pageString.potential.overview.notAvailableMsg}\r\n            </td></tr></tbody>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <tbody>\r\n            {props.drop.map((drop, idx) => (\r\n                <tr key={idx}>\r\n                    <td>\r\n                        {`${drop.chapter}-${drop.stage}`}\r\n                    </td>\r\n                    <td>{itemString.rarity[drop.rarity]}</td>\r\n                    <EnergyTd>\r\n                        <EnergyImg\r\n                            name='energy.png'\r\n                            isBackground={false}\r\n                            alt={pageString.potential.filter.tableHead[2]}\r\n                        />\r\n                        {drop.energy}\r\n                    </EnergyTd>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nconst ItemAccordion = styled(MyAccordion)`\r\n    && {\r\n        && {\r\n            margin-bottom: 1rem;\r\n        }\r\n        border: 1px solid ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n        box-shadow: 0 0 .15em lightgray;\r\n        > .MuiAccordionSummary-root {\r\n            padding: .75rem 1.25rem;\r\n            border-bottom-right-radius: 0;\r\n            border-bottom-left-radius: 0;\r\n            border-bottom: 0px solid ${props => props.theme.colors.border};\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid ${props => props.theme.colors.border};\r\n        }\r\n        .MuiAccordionSummary-content {\r\n            display: flex;\r\n            justify-content: center;\r\n            margin: 0;\r\n        }\r\n        .MuiAccordionDetails-root {\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n    }\r\n`\r\nconst ItemCard = (props) => {\r\n    const [isExpanded, setExpanded] = useState(false)\r\n\r\n    return (\r\n        <ItemAccordion\r\n            expanded={isExpanded}\r\n            onChange={() => setExpanded(!isExpanded)}\r\n            square={false}\r\n            title={props.header}\r\n            content={props.body}\r\n        />\r\n    )\r\n}\r\n\r\nconst LayoutBtnContainer = styled.div`\r\n    margin-bottom : 1rem;\r\n    > span:last-child button {\r\n        margin: 0;\r\n    }\r\n`\r\nconst BtnWrapper = styled.span`\r\n    > button {\r\n        padding: .4rem .6rem;\r\n        margin-right: .6rem;\r\n        background-color: ${props => (\r\n            props.$active\r\n                ? props.theme.colors.secondary\r\n                : 'lightgray'\r\n        )};\r\n        color: ${props => props.theme.colors.onSecondary};\r\n    }\r\n    > button:hover {\r\n        background-color: ${props => props.theme.colors.secondary};\r\n        color: ${props => props.theme.colors.onSecondary};\r\n    }\r\n`\r\nconst LayoutSwitcher = (props) => {\r\n    const { pageString } = useContext(LanguageContext)\r\n    return (\r\n        <LayoutBtnContainer>\r\n            <BtnWrapper\r\n                $active={props.layout === 'Masonry'}\r\n            >\r\n                <Button\r\n                    onClick={props.handleLayoutChange('Masonry')}\r\n                >\r\n                    {pageString.potential.overview.layout.byItem}\r\n                </Button>\r\n            </BtnWrapper>\r\n            <BtnWrapper\r\n                $active={props.layout === 'Table'}\r\n            >\r\n                <Button\r\n                    onClick={props.handleLayoutChange('Table')}\r\n                >\r\n                    {pageString.potential.overview.layout.byStage}\r\n                </Button>\r\n            </BtnWrapper>\r\n        </LayoutBtnContainer>\r\n    )\r\n}\r\n\r\nconst ItemMasonry = () => {\r\n    const breakpointColumnsConfig = {\r\n        default: 6,\r\n        1360: 5,\r\n        1200: 4,\r\n        992: 3,\r\n        768: 2\r\n    };\r\n\r\n    return (\r\n        <MyMasonry\r\n            breakpointCols={breakpointColumnsConfig}\r\n        >\r\n            {Object.entries(itemDropData).map((entry, idx) => (\r\n                <ItemCard\r\n                    key={idx}\r\n                    header={\r\n                        <ItemCardHeader\r\n                            id={entry[0]}\r\n                        />\r\n                    }\r\n                    body={\r\n                        <CardTable striped={true}>\r\n                            <CardBodyContnet\r\n                                drop={entry[1].drop}\r\n                            />\r\n                        </CardTable>\r\n                    }\r\n                />\r\n            ))}\r\n        </MyMasonry>\r\n    )\r\n}\r\n\r\nconst StyledTh = styled(SortableTh)`\r\n    background-color:  ${props => props.theme.colors.secondary};\r\n    color:  ${props => props.theme.colors.onSecondary};\r\n    white-space: nowrap;\r\n    ${props => props.$sortable ? true : 'cursor: default;'}\r\n`\r\nconst ItemWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-wrap: nowrap;\r\n    margin-right: .8rem;\r\n    div {\r\n        font-size: 1rem;\r\n    }\r\n    img {\r\n        width: 2rem;\r\n        height: 2rem;\r\n    }\r\n`\r\nconst ItemsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    > div:last-child {\r\n        margin: 0;\r\n    }\r\n`\r\nconst StyledBadge = styled(Badge)`\r\n    background-color: lightgray;\r\n    color: black;\r\n    margin-left: .4rem;\r\n`\r\nconst TableContent = (props) => {\r\n    const { pageString, itemString } = useContext(LanguageContext)\r\n\r\n    const TableHeader = () => (\r\n        <thead>\r\n            <tr>\r\n                {Object.entries(pageString.potential.overview.tableHead)\r\n                    .map((entry, idx) => {\r\n                        const sortable = entry[0] === 'stage' || entry[0] === 'energy'\r\n                        let requestSort\r\n                        let getSortDirection\r\n                        if (sortable) {\r\n                            requestSort = () => props.requestSort(entry[0])\r\n                            getSortDirection = props.getSortDirection(entry[0])\r\n                        }\r\n\r\n                        return (\r\n                            <StyledTh\r\n                                onClick={requestSort}\r\n                                direction={getSortDirection}\r\n                                key={idx}\r\n                                $sortable={sortable}\r\n                            >\r\n                                {entry[1]}\r\n                            </StyledTh>\r\n                        )\r\n                    })}\r\n            </tr>\r\n        </thead>\r\n    )\r\n\r\n    const TableBody = () => (\r\n        <tbody>\r\n            {props.sortedResult.map((stage, idx) => {\r\n                const itemTd = (items) => (\r\n                    <td>\r\n                        <ItemsContainer>\r\n                            {items.length === 0\r\n                                ? undefined\r\n                                : items.map((item, i) => (\r\n                                    <ItemWrapper key={i}>\r\n                                        <ItemCardHeader id={item.id} />\r\n                                        <StyledBadge pill>\r\n                                            {itemString.rarity[item.rarity]}\r\n                                        </StyledBadge>\r\n                                    </ItemWrapper>\r\n                                ))}\r\n                        </ItemsContainer>\r\n                    </td>\r\n                )\r\n\r\n                return (\r\n                    <tr key={idx}>\r\n                        <td>\r\n                            {`${stage.chapter}-${stage.stage}`}\r\n                        </td>\r\n                        {itemTd(stage.materials)}\r\n                        {itemTd(stage.trainItems)}\r\n                        {itemTd(stage.expPotions)}\r\n                        <td>{stage.energy}</td>\r\n                    </tr>\r\n                )\r\n            })}\r\n        </tbody>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <TableHeader />\r\n            <TableBody />\r\n        </>\r\n    )\r\n}\r\n\r\nconst ItemTableWrapper = styled(TableWrapper)`\r\n    overflow-x: auto;\r\n    height: calc(100vh - 14.5rem);\r\n`\r\nconst ItemTable = () => {\r\n    const sortFunc = (sortableItems, sortConfig) => {\r\n        const toStageKey = key => {\r\n            return (\r\n                parseInt(key.chapter) * 1000 +\r\n                parseInt(key.stage.split(' ')[0]) * 10 +\r\n                (key.stage.includes('free') ? 1 : 0) +\r\n                (key.stage.includes('-') ? parseInt(key.stage.split('-')[1]) : 0)\r\n            )\r\n        }\r\n\r\n        sortableItems.sort((a, b) => {\r\n            let aKey\r\n            let bKey\r\n            if (sortConfig.key === 'stage') {\r\n                aKey = toStageKey(a)\r\n                bKey = toStageKey(b)\r\n            } else {\r\n                aKey = a[sortConfig.key]\r\n                bKey = b[sortConfig.key]\r\n            }\r\n            if (aKey < bKey) {\r\n                return sortConfig.direction === 'asc' ? -1 : 1\r\n            }\r\n            if (aKey > bKey) {\r\n                return sortConfig.direction === 'asc' ? 1 : -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ItemTableWrapper>\r\n            <SortableTable\r\n                sortFunc={sortFunc}\r\n                defaultSortKey={'stage'}\r\n                result={stageDropData}\r\n                border={true}\r\n            >\r\n                <TableContent />\r\n            </SortableTable>\r\n        </ItemTableWrapper>\r\n    )\r\n}\r\n\r\nexport default function ItemShowcase() {\r\n    return (\r\n        <SwitchableShowcase\r\n            localLayoutConfig='potential-item-layout'\r\n            layoutSwitcher={<LayoutSwitcher />}\r\n            items={[\r\n                { layout: 'Masonry', content: <ItemMasonry /> },\r\n                { layout: 'Table', content: <ItemTable /> },\r\n            ]}\r\n        />\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ContainerHeader, FilterPanel, ResultTable, SortableTh } from './FilterComponents';\r\nimport MyToggleButtonGroup, { MyToggleButton } from './MyToggleButtonGroup';\r\nimport ImageSupplier from './ImageSupplier';\r\nimport itemDropData from '../gamedata/byStageToItem';\r\nimport stageDropData from '../gamedata/stageDrop.json';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport { ClearIcon } from './icon';\r\n\r\nconst ClearIconWrapper = styled.div`\r\n    cursor: pointer;\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n    }\r\n`\r\nconst StyledToggleButton = styled(MyToggleButton)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: .85rem;\r\n`\r\nconst ItemImg = styled(ImageSupplier)`\r\n    width: 2.26rem; \r\n    height: 2.26rem;\r\n`\r\nconst ItemFilterPanel = (props) => {\r\n    const { userLanguage, pageString, itemString } = useContext(LanguageContext)\r\n\r\n    const widthConfig = {\r\n        default: '60%',\r\n        1360: '62%',\r\n        992: '100%',\r\n    }\r\n\r\n    const btnLayoutConfig = userLanguage === 'en'\r\n        ? {\r\n            1360: 4,\r\n            992: 3,\r\n            768: 4,\r\n            624: 3,\r\n            0: 2\r\n        }\r\n        : {\r\n            1360: 5,\r\n            992: 4,\r\n            768: 5,\r\n            624: 4,\r\n            410: 3,\r\n            0: 2,\r\n        }\r\n\r\n    return (\r\n        <FilterPanel widthConfig={widthConfig}>\r\n            <ContainerHeader\r\n                title={pageString.potential.filter.itemPanelTitle}\r\n                end={\r\n                    <ClearIconWrapper\r\n                        onClick={() => props.filterBy([])}\r\n                    >\r\n                        {ClearIcon}\r\n                    </ClearIconWrapper>\r\n                }\r\n            />\r\n            <MyToggleButtonGroup\r\n                type='checkbox'\r\n                value={props.filterBtnValue}\r\n                onChange={props.filterBy}\r\n                layoutConfig={btnLayoutConfig}\r\n            >\r\n                {Object.entries(itemDropData).map((entry, idx) => {\r\n                    if (entry[1].drop.length === 0) return true\r\n\r\n                    return (\r\n                        <StyledToggleButton\r\n                            value={entry[0]}\r\n                            key={idx}\r\n                        >\r\n                            <ItemImg\r\n                                name={`item_${entry[0]}.png`}\r\n                                isBackground={false}\r\n                                alt=''\r\n                            />\r\n                            {itemString.name[entry[0]]}\r\n                        </StyledToggleButton>\r\n                    )\r\n                })}\r\n            </MyToggleButtonGroup>\r\n        </FilterPanel>\r\n    )\r\n}\r\n\r\nconst ImgTh = styled(SortableTh)`\r\n    &:after {\r\n        position: absolute;\r\n        top: calc(50% - .75rem);\r\n        margin-left: 2rem;\r\n    }\r\n`\r\nconst TableImg = styled(ImageSupplier)`\r\n    width: 1.8rem;\r\n    height: 1.8rem;\r\n`\r\nconst TableContent = (props) => {\r\n    const { pageString, itemString } = useContext(LanguageContext)\r\n\r\n    const ItemTh = () => {\r\n        if (props.sortedResult.length === 0) {\r\n            return (\r\n                <SortableTh>\r\n                    {pageString.potential.filter.tableHead[1]}\r\n                </SortableTh>\r\n            )\r\n        }\r\n\r\n        return (\r\n            Object.entries(props.sortedResult[0]).map((entry, idx) => {\r\n                if (entry[0] === 'stage' || entry[0] === 'energy') {\r\n                    return\r\n                }\r\n\r\n                return (\r\n                    <ImgTh\r\n                        key={idx}\r\n                        onClick={() => props.requestSort(entry[0])}\r\n                        direction={props.getSortDirection(entry[0])}\r\n                    >\r\n                        <TableImg\r\n                            name={`item_${entry[0]}.png`}\r\n                            isBackground={false}\r\n                            alt={itemString.name[entry[0]]}\r\n                        />\r\n                    </ImgTh>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <thead>\r\n                <tr>\r\n                    <SortableTh\r\n                        onClick={() => props.requestSort('stage')}\r\n                        direction={props.getSortDirection('stage')}\r\n                    >\r\n                        {pageString.potential.filter.tableHead[0]}\r\n                    </SortableTh>\r\n                    <ItemTh />\r\n                    <ImgTh\r\n                        onClick={() => props.requestSort('energy')}\r\n                        direction={props.getSortDirection('energy')}\r\n                    >\r\n                        <TableImg\r\n                            name='energy.png'\r\n                            isBackground={false}\r\n                            alt={pageString.potential.filter.tableHead[2]}\r\n                        />\r\n                    </ImgTh>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.sortedResult.map((stage, idx) => {\r\n                    return (\r\n                        <tr key={idx}>\r\n                            <td>{stage.stage}</td>\r\n                            {Object.entries(stage).map((entry, idx) => {\r\n                                if (\r\n                                    entry[0] === 'stage' ||\r\n                                    entry[0] === 'energy'\r\n                                ) {\r\n                                    return\r\n                                }\r\n\r\n                                return (\r\n                                    <td key={idx}>\r\n                                        {itemString.rarity[entry[1]]}\r\n                                    </td>\r\n                                )\r\n                            })}\r\n                            <td>{stage.energy}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </>\r\n    )\r\n}\r\n\r\nconst FilterContainer = styled.div`\r\n    display: flex;\r\n    @media screen and (max-width: 992px) {\r\n        display: block;\r\n    }\r\n    > div:last-child > div:first-child {\r\n        justify-content: start;\r\n    }\r\n`\r\nexport default function ItemFilter() {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    const [state, setState] = useState({\r\n        filterBtnValue: [],\r\n        result: [],\r\n    })\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    const filterBy = (val) => {\r\n        if (val.length === 0) {\r\n            setState({\r\n                filterBtnValue: val,\r\n                result: [],\r\n            })\r\n            return;\r\n        }\r\n\r\n        const stageDrop = stageDropData.map(stage => {\r\n            const { materials, trainItems, expPotions, ...rest } = stage\r\n            return { ...rest, drops: materials.concat(trainItems, expPotions) }\r\n        })\r\n\r\n        let filteredStages = stageDrop.filter(stage => (\r\n            val.every(queryItem => {\r\n                let flag = false\r\n                stage.drops.forEach(drop => {\r\n                    if (drop.id === queryItem) {\r\n                        flag = true\r\n                        return false\r\n                    }\r\n                })\r\n                return flag\r\n            })\r\n        ))\r\n\r\n        filteredStages = filteredStages.map(stage => {\r\n            const parsedStage = stage.chapter + '-' + stage.stage\r\n            const newStage = { stage: parsedStage, energy: stage.energy }\r\n            stage.drops.forEach(item => {\r\n                if (val.includes(item.id)) {\r\n                    newStage[item.id] = item.rarity\r\n                }\r\n            })\r\n            return newStage\r\n        })\r\n\r\n        setState({\r\n            filterBtnValue: val,\r\n            result: filteredStages,\r\n        })\r\n    }\r\n\r\n    const sortFunc = (sortableItems, sortConfig) => {\r\n        const toStageKey = (stage) => {\r\n            const splits = stage.split('-')\r\n\r\n            return (\r\n                parseInt(splits[0]) * 1000 +\r\n                parseInt(splits[1].split(' ')[0]) * 10 +\r\n                (splits[1].includes('free') ? 1 : 0) +\r\n                (splits.length > 2 ? parseInt(splits[2]) : 0)\r\n            )\r\n        }\r\n\r\n        sortableItems.sort((a, b) => {\r\n            let aKey\r\n            let bKey\r\n            if (sortConfig.key === 'stage') {\r\n                aKey = toStageKey(a.stage)\r\n                bKey = toStageKey(b.stage)\r\n            } else {\r\n                aKey = a[sortConfig.key]\r\n                bKey = b[sortConfig.key]\r\n            }\r\n            if (aKey < bKey) {\r\n                return sortConfig.direction === 'asc' ? -1 : 1\r\n            }\r\n            if (aKey > bKey) {\r\n                return sortConfig.direction === 'asc' ? 1 : -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const tableWidthConfig = {\r\n        default: 'calc(40% - 1rem)',\r\n        1360: 'calc(38% - 1rem)',\r\n        992: '100%',\r\n    }\r\n\r\n    return (\r\n        <FilterContainer>\r\n            <ItemFilterPanel\r\n                filterBtnValue={state.filterBtnValue}\r\n                filterBy={filterBy}\r\n            />\r\n            <ResultTable\r\n                result={state.result}\r\n                sortFunc={sortFunc}\r\n                defaultSortKey={state.filterBtnValue[0]}\r\n                modalOpen={modalOpen}\r\n                handleModalOpen={() => setModalOpen(true)}\r\n                handleModalClose={() => setModalOpen(false)}\r\n                modalContent={pageString.potential.filter.modal}\r\n                widthConfig={tableWidthConfig}\r\n                striped={true}\r\n            >\r\n                <TableContent />\r\n            </ResultTable>\r\n        </FilterContainer>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport { ContainerHeader, FilterPanel, HelpModal } from '../components/FilterComponents';\r\nimport ImageSupplier from './ImageSupplier';\r\nimport charData from '../gamedata/character.json';\r\nimport potentialData from '../gamedata/potential.json';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport { AlertIcon, BuffIcon, ItemIcon, RaceIcon, HelpIcon } from './icon';\r\n\r\nconst IconWrapper = styled.div`\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        margin-right: .4rem;\r\n        fill: ${props => props.theme.colors.onSurface};\r\n    }\r\n`\r\nconst ContainerBody = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n`\r\nconst CharImgWrapper = styled(ImageSupplier)`\r\n    width: 5rem;\r\n    height: 15rem;\r\n    margin-right: 1rem;\r\n    border: 2px solid ${props => props.theme.colors.secondary};\r\n    border-radius: .25rem;\r\n`\r\nconst Select = styled(Form.Control)`\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    border-radius: .25rem;\r\n    padding: .1rem;\r\n    border: 1px solid ${props => props.theme.colors.secondary};\r\n    width: 100%;\r\n    &:focus {\r\n        box-shadow: 0 0 .4rem ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\nconst Gutter = styled.div`\r\n    margin-top: 3rem;\r\n`\r\nconst SelectPanel = (props) => {\r\n    const { pageString, charString } = useContext(LanguageContext)\r\n\r\n    const widthConfig = {\r\n        default: '25%',\r\n        992: '100%',\r\n    }\r\n\r\n    return (\r\n        <FilterPanel widthConfig={widthConfig}>\r\n            <ContainerHeader\r\n                title={\r\n                    <IconWrapper>\r\n                        {RaceIcon}\r\n                        {pageString.potential.character.characterPanelTitle}\r\n                    </IconWrapper>\r\n                }\r\n            />\r\n            <ContainerBody>\r\n                <CharImgWrapper\r\n                    name={`char_${props.character}.png`}\r\n                    isBackground={false}\r\n                    alt=''\r\n                />\r\n                <div>\r\n                    <Form>\r\n                        {pageString.potential.character.characterSelectTitle}\r\n                        <br />\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('character')}\r\n                                >\r\n                                    {\r\n                                        charData.map((char, idx) => {\r\n                                            if (char.rarity < 2) return false\r\n\r\n                                            return (\r\n                                                <option value={char.id} key={idx}>\r\n                                                    {charString.name[char.id]}\r\n                                                </option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <option value={'nr'} key={'nr'}>\r\n                                        {charString.name['nr']}\r\n                                    </option>\r\n                                </Select>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Gutter />\r\n                        {pageString.potential.character.currentSelectTitle}\r\n                        <br />\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('currStage')}\r\n                                >\r\n                                    {props.stages}\r\n                                </Select>\r\n                            </Form.Group>\r\n                            –\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('currSub')}\r\n                                >\r\n                                    {[...Array(7).keys()].slice(1)\r\n                                        .map(i => <option value={i} key={i}>{i}</option>)}\r\n                                </Select>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        {pageString.potential.character.targetSelectTitle}\r\n                        <br />\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('targetStage')}\r\n                                >\r\n                                    {props.stages}\r\n                                </Select>\r\n                            </Form.Group>\r\n                            –\r\n                            <Form.Group as={Col}>\r\n                                <Select\r\n                                    as=\"select\"\r\n                                    custom\r\n                                    size=\"sm\"\r\n                                    onChange={props.handleSelect('targetSub')}\r\n                                >\r\n                                    {[...Array(7).keys()].slice(1)\r\n                                        .map(i => <option value={i} key={i}>{i}</option>)}\r\n                                </Select>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </div>\r\n            </ContainerBody>\r\n        </FilterPanel>\r\n    )\r\n}\r\n\r\nconst MaterialContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 1rem;\r\n    min-height: 6rem;\r\n`\r\nconst MaterialWrapper = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 .4rem;\r\n    margin: .2rem 0;\r\n    ${props => Object.entries(props.$layoutConfig).map(entry => (\r\n    `@media screen and (min-width: ${entry[0]}px) {\r\n            width: calc(100% / ${entry[1]});\r\n        }\r\n        `\r\n))}\r\n    > div {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`\r\nconst MaterialImg = styled(ImageSupplier)`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    margin-right: .4rem;\r\n`\r\nconst HelpIconWrapper = styled.div`\r\n    margin-right: auto;\r\n    svg {\r\n        fill: ${props => props.theme.colors.secondary};\r\n        width: 1.4rem;\r\n        height: 1.4rem;\r\n        margin-left: .4rem;\r\n        cursor: pointer;\r\n        vertical-align: top;\r\n    }\r\n`\r\nconst OtherImg = styled(ImageSupplier)`\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    margin-right: .4rem;\r\n`\r\nconst ResultPanel = ({\r\n    widthConfig,\r\n    result\r\n}) => {\r\n    const { userLanguage, pageString, itemString } = useContext(LanguageContext)\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    const resultLayoutConfig = userLanguage === 'en'\r\n        ? {\r\n            1360: 5,\r\n            1200: 4,\r\n            768: 3,\r\n            0: 2\r\n        }\r\n        : {\r\n            1360: 6,\r\n            1200: 5,\r\n            768: 4,\r\n            624: 3,\r\n            0: 2\r\n        }\r\n\r\n    const MaterialBox = () => {\r\n        if (!result.items) return <></>\r\n\r\n        return (\r\n            <>\r\n                {Object.entries(result.items).map((item, idx) => (\r\n                    <MaterialWrapper\r\n                        key={idx}\r\n                        $layoutConfig={resultLayoutConfig}\r\n                    >\r\n                        <div>\r\n                            <MaterialImg\r\n                                name={`item_${item[0]}.png`}\r\n                                isBackground={false}\r\n                                alt=''\r\n                            />\r\n                            {`${itemString.name[item[0]]}`}\r\n                        </div>\r\n                        {item[1]}\r\n                    </MaterialWrapper>\r\n                ))}\r\n                <MaterialWrapper\r\n                    $layoutConfig={resultLayoutConfig}\r\n                >\r\n                    <MaterialImg\r\n                        name='money.png'\r\n                        isBackground={false}\r\n                        alt='money'\r\n                    />\r\n                    {result.money}\r\n                </MaterialWrapper>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const PictureSquare = ({\r\n        children,\r\n        name,\r\n        alt\r\n    }) => (\r\n        <MaterialWrapper\r\n            $layoutConfig={resultLayoutConfig}\r\n        >\r\n            <div>\r\n                <OtherImg\r\n                    name={name}\r\n                    isBackground={false}\r\n                    alt={alt}\r\n                />\r\n                {children}\r\n            </div>\r\n        </MaterialWrapper>\r\n    )\r\n\r\n    return (\r\n        <FilterPanel widthConfig={widthConfig}>\r\n            <div>\r\n                <ContainerHeader\r\n                    title={\r\n                        <IconWrapper>\r\n                            {ItemIcon}\r\n                            {pageString.potential.character.resultDemandTitle}\r\n                            <HelpIconWrapper\r\n                                onClick={() => setModalOpen(true)}\r\n                            >\r\n                                {HelpIcon}\r\n                            </HelpIconWrapper>\r\n                        </IconWrapper>\r\n                    }\r\n                />\r\n                <MaterialContainer>\r\n                    <MaterialBox />\r\n                </MaterialContainer>\r\n            </div>\r\n            <div>\r\n                <ContainerHeader\r\n                    title={\r\n                        <IconWrapper>\r\n                            {BuffIcon}\r\n                            {pageString.potential.character.resultBuffTitle}\r\n                        </IconWrapper>\r\n                    }\r\n                />\r\n                <div>\r\n                    <PictureSquare\r\n                        name='ui_small_atk.png'\r\n                        alt='ATK'\r\n                    >\r\n                        {`${result.buff.ATK} %`}\r\n                    </PictureSquare>\r\n                    <PictureSquare\r\n                        name='ui_small_hp.png'\r\n                        alt='HP'\r\n                    >\r\n                        {`${result.buff.HP} %`}\r\n                    </PictureSquare>\r\n                    <PictureSquare\r\n                        name='ui_small_potentialPassive.png'\r\n                        alt='Passive'\r\n                    >\r\n                        {`${result.buff.PASSIVE === 0 ? '-'\r\n                            : result.buff.PASSIVE === 1 ? '1'\r\n                                : result.buff.PASSIVE === 2 ? '2'\r\n                                    : '1 & 2'\r\n                            }`}\r\n                    </PictureSquare>\r\n                </div>\r\n            </div>\r\n            <HelpModal\r\n                modalOpen={modalOpen}\r\n                handleModalClose={() => setModalOpen(false)}\r\n                content={pageString.potential.character.modal}\r\n            />\r\n        </FilterPanel>\r\n    )\r\n}\r\n\r\nconst FilterContainer = styled.div`\r\n    display: table;\r\n    width: 100%;\r\n    > div {\r\n        display: table-cell;\r\n    }\r\n    @media screen and (max-width: 992px) {\r\n        display: block;\r\n        > div {\r\n            display: block; \r\n        }\r\n    }\r\n    > div:last-child {\r\n        @media screen and (max-width: 992px) {\r\n            width: ${props => props.resultPanelWidthConfig[992]};\r\n            margin-left: calc(100% - ${props => props.resultPanelWidthConfig[992]});\r\n            position: relative;\r\n            margin-top: 1rem;\r\n        }\r\n    }\r\n    > .MuiSnackbar-root {\r\n        > div {\r\n            background-color: #ff9800;\r\n            font-size: medium;\r\n            display: flex;\r\n            flex-direction: row-reverse;\r\n            justify-content: center;\r\n            > .MuiSnackbarContent-action {\r\n                margin: 0;\r\n                padding: 0;\r\n                svg \r\n                {\r\n                    width: 1.4rem;\r\n                    height: 1.4rem;\r\n                    fill: #fff;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\nconst TableGutter = styled.div`\r\n    width: 0;\r\n    padding: .5rem;\r\n    @media screen and (max-width: 992px) {\r\n        padding: 0;\r\n    }\r\n`\r\nconst resultPanelWidthConfig = {\r\n    default: 'calc(75% - 1rem)',\r\n    992: '100%',\r\n}\r\n\r\nexport default function CharPotential() {\r\n    const { pageString, charString } = useContext(LanguageContext)\r\n\r\n    const [state, setState] = useState({\r\n        character: '101',\r\n        currStage: '1',\r\n        currSub: '1',\r\n        targetStage: '1',\r\n        targetSub: '1',\r\n        isValid: true,\r\n        isSnackbarOpen: false,\r\n        result: {\r\n            items: undefined,\r\n            money: 0,\r\n            buff: {\r\n                ATK: 0,\r\n                HP: 0,\r\n                PASSIVE: 0\r\n            },\r\n        },\r\n    })\r\n\r\n    const handleSelect = (attr) => (event) => {\r\n        //update state\r\n        let newState = { ...state }\r\n\r\n        const selected = event.target.value\r\n\r\n        newState[attr] = selected\r\n        if (selected === 'nr') {\r\n            newState.currStage = parseInt(state.currStage) > 6 ? 1 : state.currStage\r\n            newState.targetStage = parseInt(state.targetStage) > 6 ? 1 : state.targetStage\r\n        }\r\n        newState.isValid =\r\n            parseInt(newState.targetStage) > parseInt(newState.currStage) ||\r\n            (newState.targetStage === newState.currStage &&\r\n                parseInt(newState.targetSub) >= parseInt(newState.currSub))\r\n        newState.isSnackbarOpen = !newState.isValid\r\n        if (!newState.isValid) {\r\n            newState.result = {\r\n                items: undefined,\r\n                money: 0,\r\n                buff: {\r\n                    ATK: 0,\r\n                    HP: 0,\r\n                    PASSIVE: 0\r\n                },\r\n            }\r\n            setState(newState)\r\n            return\r\n        }\r\n        let result = {\r\n            items: {},\r\n            money: 0,\r\n            buff: {\r\n                ATK: 0,\r\n                HP: 0,\r\n                PASSIVE: 0\r\n            },\r\n        }\r\n        // calculate demand\r\n        let type\r\n        if (newState.character === 'nr') {\r\n            type = 3\r\n        } else {\r\n            charData.forEach(char => {\r\n                if (char.id === newState.character) {\r\n                    type = char.potentialType\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n\r\n        const stages = potentialData.type[type]\r\n        const start = newState.currStage - 1\r\n        const end = newState.targetStage - 1\r\n        for (let i = start; i < end + 1; i++) {\r\n            let stage = stages[i]\r\n            for (\r\n                let j = i === start ? newState.currSub - 1 : 0;\r\n                j < (i === end ? newState.targetSub : 6);\r\n                j++\r\n            ) {\r\n                let id = stage.pattern[j] + stage.rank[j]\r\n                if (result.items[id]) {\r\n                    result.items[id] += stage.num[j]\r\n                } else {\r\n                    result.items[id] = stage.num[j]\r\n                }\r\n                result.money += (i + 1) * 8000\r\n                let buff = potentialData.itemMap[stage.pattern[j]].type\r\n                result.buff[buff] += stage.buff[j]\r\n            }\r\n        }\r\n        // parse result\r\n        let parsedItem = {}\r\n        for (const [key, value] of Object.entries(result.items)) {\r\n            let itemId = potentialData.itemMap[key[0]].id.map(id => (\r\n                key[1] === '9' ? '902'\r\n                    : key[1] === '8' ? '901'\r\n                        : (parseInt(key[1]) * 100 + id).toString()\r\n            ))\r\n            for (let i of itemId) {\r\n                if (parsedItem[i]) {\r\n                    parsedItem[i] += value\r\n                } else {\r\n                    parsedItem[i] = value\r\n                }\r\n            }\r\n        }\r\n        result.items = parsedItem\r\n        result.buff.ATK = Math.round(result.buff.ATK * 100) / 100\r\n        result.buff.HP = Math.round(result.buff.HP * 100) / 100\r\n        newState.result = result\r\n        setState(newState)\r\n    }\r\n\r\n    const stages = [...Array(state.character === 'nr' ? 7 : 13).keys()]\r\n        .slice(1).map(i => <option value={i} key={i}>{i}</option>)\r\n\r\n    const handleSnackbarClose = () => setState((state) => ({\r\n        ...state,\r\n        isSnackbarOpen: false\r\n    }))\r\n\r\n    return (\r\n        <FilterContainer\r\n            resultPanelWidthConfig={resultPanelWidthConfig}\r\n        >\r\n            <Snackbar\r\n                open={state.isSnackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                message={pageString.potential.character.snackbarMsg}\r\n                action={AlertIcon}\r\n            />\r\n            <SelectPanel\r\n                handleSelect={handleSelect}\r\n                stages={stages}\r\n                character={state.character}\r\n            />\r\n            <TableGutter />\r\n            <ResultPanel\r\n                widthConfig={resultPanelWidthConfig}\r\n                result={state.result}\r\n            />\r\n        </FilterContainer>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Layout from \"../components/Layout\";\r\nimport PageWithTabs from '../components/PageWithTabs';\r\nimport ItemShowcase from '../components/ItemShowcase';\r\nimport ItemFilter from '../components/ItemFilter';\r\nimport CharPotential from '../components/CharPotential';\r\nimport { LanguageContext } from '../components/LanguageProvider';\r\nimport { CalcIcon, OverviewIcon, FilterIcon } from '../components/icon';\r\n\r\nexport default () => {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <Layout>\r\n            <PageWithTabs\r\n                title={pageString.potential.documentTitle}\r\n                path='potential'\r\n                tabs={[\r\n                    { label: pageString.potential.label[0], icon: OverviewIcon, content: <ItemShowcase /> },\r\n                    { label: pageString.potential.label[1], icon: FilterIcon, content: <ItemFilter /> },\r\n                    { label: pageString.potential.label[2], icon: CalcIcon, content: <CharPotential /> },\r\n                ]}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n"],"sourceRoot":""}