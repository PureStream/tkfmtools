{"version":3,"sources":["webpack:///./node_modules/react-masonry-css/dist/react-masonry-css.es5.js","webpack:///./src/components/MyMasonry.js","webpack:///./src/components/SwitchableShowcase.js","webpack:///./src/components/CharShowcase.js","webpack:///./src/components/CardTable.js"],"names":["Object","defineProperty","exports","value","obj","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","constructor","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","_react2","__esModule","default","defaultProps","breakpointCols","undefined","className","columnClassName","children","columnAttrs","column","Masonry","_React$Component","instance","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","reCalculateColumnCount","bind","reCalculateColumnCountDebounce","columnCount","parseInt","state","subClass","superClass","create","setPrototypeOf","_inherits","window","addEventListener","removeEventListener","_this2","requestAnimationFrame","cancelAnimationFrame","_lastRecalculateAnimationFrame","windowWidth","innerWidth","Infinity","breakpointColsObject","matchedBreakpoint","columns","breakpoint","optBreakpoint","Math","max","setState","currentColumnCount","itemsInColumns","Array","items","concat","columnIndex","push","_props","_props$columnAttrs","childrenInColumns","columnWidth","logDeprecated","columnAttributes","style","width","map","createElement","message","console","error","_props2","rest","keys","indexOf","_objectWithoutProperties","classNameOutput","renderColumns","Component","StyledMasonry","styled","MyMasonry","ShowcaseContainer","div","$hidden","SwitchableShowcase","layoutSwitcher","localLayoutConfig","useState","layout","hasMounted","useEffect","localConfig","localStorage","getItem","React","cloneElement","handleLayoutChange","toLayout","setItem","item","idx","content","CharImgWrapper","ImageSupplier","TextWrapper","theme","colors","surface","CardHeader","id","charString","useContext","LanguageContext","name","isBackground","alt","split","slice","join","TagWrapper","IconWrapper","secondary","CardBody","attrIcons","attribute","AttributeIcon","position","PositionIcon","race","RaceIcon","body","BodysizeIcon","oppai","OppaiIcon","rank","RankIcon","else","ElseIcon","charTagData","charData","char","rarity","tags","available","striped","entries","entry","tag","tagWarnMsg","StyledAccordion","MyAccordion","border","CharAccordion","isExpanded","setExpanded","expanded","onChange","square","title","header","LayoutBtnContainer","StyledBtn","IconButton","$active","onSurface","LayoutSwitcher","pageString","enlist","index","onClick","MasonryViewIcon","TableViewIcon","CharMasnory","1360","1200","992","600","StyledTh","SortableTh","onSecondary","CharCardHeader","$textWrapConfig","TableContent","userLanguage","parseRarity","TableHeader","tagAttributes","requestSort","direction","getSortDirection","cardTextWrapConfig","TableBody","sortedResult","j","nowrap","colSpan","CharTableWrapper","TableWrapper","CharTable","sortFunc","sortableItems","sortConfig","sort","a","b","aKey","bKey","defaultSortKey","result","CharShowcase","StyledTable","Table","CardTable","borderless","size"],"mappings":"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","file":"fa2c06e46e222306b36df99c9c18eac8fe5b9cf9-0eca0c9dcd5c5c85b1a4.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar defaultProps = {\n  breakpointCols: undefined,\n  // optional, number or object { default: number, [key: number]: number }\n  className: undefined,\n  // required, string\n  columnClassName: undefined,\n  // required, string\n  // Any React children. Typically an array of JSX items\n  children: undefined,\n  // Custom attributes, however it is advised against\n  // using these to prevent unintended issues and future conflicts\n  // ...any other attribute, will be added to the container\n  columnAttrs: undefined,\n  // object, added to the columns\n  // Deprecated props\n  // The column property is deprecated.\n  // It is an alias of the `columnAttrs` property\n  column: undefined\n};\nvar DEFAULT_COLUMNS = 2;\n\nvar Masonry = function (_React$Component) {\n  _inherits(Masonry, _React$Component);\n\n  function Masonry(props) {\n    _classCallCheck(this, Masonry); // Correct scope for when methods are accessed externally\n\n\n    var _this = _possibleConstructorReturn(this, (Masonry.__proto__ || Object.getPrototypeOf(Masonry)).call(this, props));\n\n    _this.reCalculateColumnCount = _this.reCalculateColumnCount.bind(_this);\n    _this.reCalculateColumnCountDebounce = _this.reCalculateColumnCountDebounce.bind(_this); // default state\n\n    var columnCount = void 0;\n\n    if (_this.props.breakpointCols && _this.props.breakpointCols.default) {\n      columnCount = _this.props.breakpointCols.default;\n    } else {\n      columnCount = parseInt(_this.props.breakpointCols) || DEFAULT_COLUMNS;\n    }\n\n    _this.state = {\n      columnCount: columnCount\n    };\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.reCalculateColumnCount(); // window may not be available in some environments\n\n      if (window) {\n        window.addEventListener('resize', this.reCalculateColumnCountDebounce);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.reCalculateColumnCount();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (window) {\n        window.removeEventListener('resize', this.reCalculateColumnCountDebounce);\n      }\n    }\n  }, {\n    key: 'reCalculateColumnCountDebounce',\n    value: function reCalculateColumnCountDebounce() {\n      var _this2 = this;\n\n      if (!window || !window.requestAnimationFrame) {\n        // IE10+\n        this.reCalculateColumnCount();\n        return;\n      }\n\n      if (window.cancelAnimationFrame) {\n        // IE10+\n        window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);\n      }\n\n      this._lastRecalculateAnimationFrame = window.requestAnimationFrame(function () {\n        _this2.reCalculateColumnCount();\n      });\n    }\n  }, {\n    key: 'reCalculateColumnCount',\n    value: function reCalculateColumnCount() {\n      var windowWidth = window && window.innerWidth || Infinity;\n      var breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object\n\n      if ((typeof breakpointColsObject === 'undefined' ? 'undefined' : _typeof(breakpointColsObject)) !== 'object') {\n        breakpointColsObject = {\n          default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS\n        };\n      }\n\n      var matchedBreakpoint = Infinity;\n      var columns = breakpointColsObject.default || DEFAULT_COLUMNS;\n\n      for (var breakpoint in breakpointColsObject) {\n        var optBreakpoint = parseInt(breakpoint);\n        var isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;\n\n        if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {\n          matchedBreakpoint = optBreakpoint;\n          columns = breakpointColsObject[breakpoint];\n        }\n      }\n\n      columns = Math.max(1, parseInt(columns) || 1);\n\n      if (this.state.columnCount !== columns) {\n        this.setState({\n          columnCount: columns\n        });\n      }\n    }\n  }, {\n    key: 'itemsInColumns',\n    value: function itemsInColumns() {\n      var currentColumnCount = this.state.columnCount;\n      var itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array\n\n      var items = [].concat(this.props.children || []);\n\n      for (var i = 0; i < items.length; i++) {\n        var columnIndex = i % currentColumnCount;\n\n        if (!itemsInColumns[columnIndex]) {\n          itemsInColumns[columnIndex] = [];\n        }\n\n        itemsInColumns[columnIndex].push(items[i]);\n      }\n\n      return itemsInColumns;\n    }\n  }, {\n    key: 'renderColumns',\n    value: function renderColumns() {\n      var _props = this.props,\n          column = _props.column,\n          _props$columnAttrs = _props.columnAttrs,\n          columnAttrs = _props$columnAttrs === undefined ? {} : _props$columnAttrs,\n          columnClassName = _props.columnClassName;\n      var childrenInColumns = this.itemsInColumns();\n      var columnWidth = 100 / childrenInColumns.length + '%';\n      var className = columnClassName;\n\n      if (typeof className !== 'string') {\n        this.logDeprecated('The property \"columnClassName\" requires a string'); // This is a deprecated default and will be removed soon.\n\n        if (typeof className === 'undefined') {\n          className = 'my-masonry-grid_column';\n        }\n      }\n\n      var columnAttributes = _extends({}, column, columnAttrs, {\n        style: _extends({}, columnAttrs.style, {\n          width: columnWidth\n        }),\n        className: className\n      });\n\n      return childrenInColumns.map(function (items, i) {\n        return _react2.default.createElement('div', _extends({}, columnAttributes, {\n          key: i\n        }), items);\n      });\n    }\n  }, {\n    key: 'logDeprecated',\n    value: function logDeprecated(message) {\n      console.error('[Masonry]', message);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          children = _props2.children,\n          breakpointCols = _props2.breakpointCols,\n          columnClassName = _props2.columnClassName,\n          columnAttrs = _props2.columnAttrs,\n          column = _props2.column,\n          className = _props2.className,\n          rest = _objectWithoutProperties(_props2, ['children', 'breakpointCols', 'columnClassName', 'columnAttrs', 'column', 'className']);\n\n      var classNameOutput = className;\n\n      if (typeof className !== 'string') {\n        this.logDeprecated('The property \"className\" requires a string'); // This is a deprecated default and will be removed soon.\n\n        if (typeof className === 'undefined') {\n          classNameOutput = 'my-masonry-grid';\n        }\n      }\n\n      return _react2.default.createElement('div', _extends({}, rest, {\n        className: classNameOutput\n      }), this.renderColumns());\n    }\n  }]);\n\n  return Masonry;\n}(_react2.default.Component);\n\nMasonry.defaultProps = defaultProps;\nexports.default = Masonry;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Masonry from 'react-masonry-css';\r\n\r\nconst StyledMasonry = styled(Masonry)`\r\n    display: flex;\r\n    width: auto;\r\n    margin-left: -1rem;\r\n    > div {\r\n        padding-left: 1rem;\r\n    }\r\n`\r\nexport default function MyMasonry(props) {\r\n    return (\r\n        <StyledMasonry\r\n            breakpointCols={props.breakpointCols}\r\n            columnClassName=''\r\n        >\r\n            {props.children}\r\n        </StyledMasonry>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ShowcaseContainer = styled.div`\r\n    display: ${props => props.$hidden ? 'none' : 'block'}\r\n`\r\nexport default function SwitchableShowcase({\r\n    layoutSwitcher,\r\n    localLayoutConfig,\r\n    items\r\n}) {\r\n    const [state, setState] = useState({\r\n        layout: items[0].layout,\r\n        hasMounted: false\r\n    })\r\n\r\n    // set previous layout and flag mounted\r\n    useEffect(() => {\r\n        const localConfig = localStorage.getItem(localLayoutConfig)\r\n        setState({\r\n            layout: localConfig ? localConfig : items[0].layout,\r\n            hasMounted: true\r\n        })\r\n    }, [])\r\n\r\n    // not render at SSR time\r\n    if (!state.hasMounted) {\r\n        return null\r\n    }\r\n\r\n    const handleLayoutChange = (toLayout) => () => {\r\n        setState((state) => ({\r\n            ...state,\r\n            layout: toLayout\r\n        }))\r\n        localStorage.setItem(localLayoutConfig, toLayout)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {React.cloneElement(layoutSwitcher, {\r\n                layout: state.layout,\r\n                handleLayoutChange: handleLayoutChange,\r\n            })}\r\n            {items.map((item, idx) => (\r\n                <ShowcaseContainer\r\n                    $hidden={state.layout !== item.layout}\r\n                    key={idx}\r\n                >\r\n                    {item.content}\r\n                </ShowcaseContainer>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IconButton } from '@material-ui/core';\r\nimport SwitchableShowcase from './SwitchableShowcase';\r\nimport MyMasonry from './MyMasonry';\r\nimport MyAccordion from './MyAccordion';\r\nimport CardTable from './CardTable';\r\nimport { SortableTable, SortableTh, TableWrapper } from './FilterComponents';\r\nimport ImageSupplier from './ImageSupplier';\r\nimport charData from '../gamedata/character.json';\r\nimport { LanguageContext } from './LanguageProvider';\r\nimport {\r\n    AttributeIcon,\r\n    PositionIcon,\r\n    RaceIcon,\r\n    BodysizeIcon,\r\n    OppaiIcon,\r\n    RankIcon,\r\n    ElseIcon,\r\n    MasonryViewIcon,\r\n    TableViewIcon\r\n} from './icon';\r\n\r\nconst CharImgWrapper = styled(ImageSupplier)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    width: 100%;\r\n    min-width: 10rem;\r\n    height: 3.6rem;\r\n    background-repeat: no-repeat;\r\n    background-size: 6rem 6rem;\r\n    background-position: 0 -1.6rem;\r\n`\r\nconst TextWrapper = styled.div`\r\n    margin-left: 0;\r\n    margin-right: 1rem;\r\n    transition: all 0.3s ease;\r\n    text-shadow: 0 0 1px ${props => props.theme.colors.surface},\r\n    -2px 0 1px  ${props => props.theme.colors.surface},\r\n    2px 0 1px  ${props => props.theme.colors.surface},\r\n    0 -2px 1px ${props => props.theme.colors.surface},\r\n    0 2px 1px  ${props => props.theme.colors.surface},\r\n    2px 2px 1px ${props => props.theme.colors.surface},\r\n    2px -2px 1px ${props => props.theme.colors.surface},\r\n    -2px 2px 1px ${props => props.theme.colors.surface},\r\n    -2px -2px 1px ${props => props.theme.colors.surface};\r\n`\r\nconst CardHeader = ({\r\n    className,\r\n    id\r\n}) => {\r\n    const { charString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <CharImgWrapper\r\n            className={className}\r\n            name={`char_small_${id}.png`}\r\n            isBackground={true}\r\n            alt=''\r\n        >\r\n            <TextWrapper>\r\n                {charString.name[id].split(' ').slice(0, -1).join(' ')}\r\n            </TextWrapper>\r\n            <TextWrapper>\r\n                {charString.name[id].split(' ').slice(-1)[0]}\r\n            </TextWrapper>\r\n        </CharImgWrapper>\r\n    )\r\n}\r\n\r\nconst TagWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst IconWrapper = styled.div`\r\n    margin-bottom: .1rem;\r\n    margin-left: .25rem;\r\n    margin-right: .4rem;\r\n    > svg {\r\n        width: 1.2rem;\r\n        fill: ${props => props.theme.colors.secondary};\r\n        color:  ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\nconst CardBody = (props) => {\r\n    const { charString } = useContext(LanguageContext)\r\n\r\n    const attrIcons = {\r\n        attribute: AttributeIcon,\r\n        position: PositionIcon,\r\n        race: RaceIcon,\r\n        body: BodysizeIcon,\r\n        oppai: OppaiIcon,\r\n        rank: RankIcon,\r\n        else: ElseIcon\r\n    }\r\n\r\n    const charTagData = charData.map((char => {\r\n        const { id, rarity, tags, ...rest } = char\r\n        return ({ id, rarity, ...tags })\r\n    }))\r\n\r\n    if (!charData[props.idx].tags.available) {\r\n        return (\r\n            <CardTable striped={true}>\r\n                <tbody><tr><td>\r\n                    {charString.tagWarnMsg}\r\n                </td></tr></tbody>\r\n            </CardTable>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <CardTable striped={true}>\r\n            <tbody>\r\n                {Object.entries(charTagData[props.idx]).map((entry, idx) => {\r\n                    if (\r\n                        entry[0] === 'id' ||\r\n                        entry[0] === 'rarity' ||\r\n                        entry[0] === 'available'\r\n                    ) {\r\n                        return true\r\n                    }\r\n                    if (entry[0] === 'else') {\r\n                        return (\r\n                            entry[1].map((tag, i) => (\r\n                                <tr key={idx + i + 1}>\r\n                                    <td>\r\n                                        <TagWrapper>\r\n                                            <IconWrapper>\r\n                                                {attrIcons[entry[0]]}\r\n                                            </IconWrapper>\r\n                                            {charString.tags[tag]}\r\n                                        </TagWrapper>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        )\r\n                    }\r\n\r\n                    if (entry[1].length !== 0) {\r\n                        return (\r\n                            <tr key={idx}>\r\n                                <td>\r\n                                    <TagWrapper>\r\n                                        <IconWrapper>\r\n                                            {attrIcons[entry[0]]}\r\n                                        </IconWrapper>\r\n                                        {charString.tags[entry[1]]}\r\n                                    </TagWrapper>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    } else {\r\n                        return true\r\n                    }\r\n                })}\r\n            </tbody>\r\n        </CardTable>\r\n    )\r\n}\r\n\r\nconst StyledAccordion = styled(MyAccordion)`\r\n    && {\r\n        && {\r\n            margin-bottom: 1rem;\r\n        }\r\n        border: 1px solid ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n        box-shadow: 0 0 .15em lightgray;\r\n        > .MuiAccordionSummary-root {\r\n            padding: 0;\r\n            border-bottom-right-radius: 0;\r\n            border-bottom-left-radius: 0;\r\n            border-bottom: 0px solid ${props => props.theme.colors.border};\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid ${props => props.theme.colors.border};\r\n        }\r\n        .MuiAccordionSummary-content {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            padding: 0;\r\n            margin: 0;\r\n        }\r\n        .MuiAccordionDetails-root {\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n    }\r\n`\r\nconst CharAccordion = (props) => {\r\n    const [isExpanded, setExpanded] = useState(false)\r\n\r\n    return (\r\n        <StyledAccordion\r\n            expanded={isExpanded}\r\n            onChange={() => setExpanded(!isExpanded)}\r\n            square={false}\r\n            title={props.header}\r\n            content={props.body}\r\n        />\r\n    )\r\n}\r\n\r\nconst LayoutBtnContainer = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: -4rem;\r\n    @media screen and (max-width: 410px) {\r\n        font-size: 0;\r\n    }\r\n`\r\nconst StyledBtn = styled(IconButton)`\r\n    padding: .75rem .5rem;\r\n    svg {\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n        fill: ${props => (\r\n        props.$active\r\n            ? props.theme.colors.secondary\r\n            : props.theme.colors.onSurface\r\n    )};\r\n    }\r\n    &:hover svg {\r\n        fill: ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\nconst LayoutSwitcher = (props) => {\r\n    const { pageString } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <LayoutBtnContainer>\r\n            {pageString.enlist.index.layout}\r\n            <StyledBtn\r\n                $active={props.layout === 'Masonry'}\r\n                onClick={props.handleLayoutChange('Masonry')}\r\n            >\r\n                {MasonryViewIcon}\r\n            </StyledBtn>\r\n            <StyledBtn\r\n                $active={props.layout === 'Table'}\r\n                onClick={props.handleLayoutChange('Table')}\r\n            >\r\n                {TableViewIcon}\r\n            </StyledBtn>\r\n        </LayoutBtnContainer>\r\n    )\r\n}\r\n\r\nconst CharMasnory = () => {\r\n    const { charString } = useContext(LanguageContext)\r\n\r\n    const breakpointColumnsConfig = {\r\n        default: 6,\r\n        1360: 5,\r\n        1200: 4,\r\n        992: 3,\r\n        600: 2\r\n    }\r\n\r\n    return (\r\n        <MyMasonry\r\n            breakpointCols={breakpointColumnsConfig}\r\n        >\r\n            {Object.entries(charString.name).map((entry, idx) => {\r\n                if (entry[0] === 'nr') return true\r\n\r\n                return (\r\n                    <CharAccordion\r\n                        header={<CardHeader id={entry[0]} />}\r\n                        body={<CardBody idx={idx} />}\r\n                        key={idx}\r\n                    />\r\n                )\r\n            })}\r\n        </MyMasonry>\r\n    )\r\n}\r\n\r\nconst StyledTh = styled(SortableTh)`\r\n    background-color:  ${props => props.theme.colors.secondary};\r\n    color:  ${props => props.theme.colors.onSecondary};\r\n    white-space: nowrap;\r\n`\r\nexport const CharCardHeader = styled(CardHeader)`\r\n    @media screen and (min-width: ${props => (\r\n        props.$textWrapConfig\r\n    )}px) {\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        > div {\r\n            margin-left: 7rem\r\n        }\r\n        > div:last-child {\r\n            margin-left: -.6rem;\r\n        }\r\n    }\r\n`\r\nconst TableContent = (props) => {\r\n    const { userLanguage, charString } = useContext(LanguageContext)\r\n\r\n    const parseRarity = (rarity) => (\r\n        rarity === 0 ? 'N'\r\n            : rarity === 1 ? 'R'\r\n                : rarity === 2 ? 'SR'\r\n                    : 'SSR'\r\n    )\r\n\r\n    const TableHeader = () => (\r\n        <thead>\r\n            <tr>\r\n                {Object.entries(charString.tagAttributes)\r\n                    .map((entry, idx) => (\r\n                        <StyledTh\r\n                            onClick={() => props.requestSort(entry[0])}\r\n                            direction={props.getSortDirection(entry[0])}\r\n                            key={idx}\r\n                        >\r\n                            {entry[1]}\r\n                        </StyledTh>\r\n                    ))}\r\n            </tr>\r\n        </thead>\r\n    )\r\n\r\n    const cardTextWrapConfig = {\r\n        'zh-TW': 900,\r\n        'en': 1300,\r\n    }\r\n\r\n    const TableBody = () => (\r\n        <tbody>\r\n            {props.sortedResult.map(char => {\r\n                if (!char.available) {\r\n                    return (\r\n                        <tr key={char.id}>\r\n                            <td>\r\n                                <CharCardHeader\r\n                                    id={char.id}\r\n                                    $textWrapConfig={\r\n                                        cardTextWrapConfig[userLanguage]\r\n                                    }\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                                {parseRarity(char.rarity)}\r\n                            </td>\r\n                            <td>\r\n                                {charString.tags[char.attribute]}\r\n                            </td>\r\n                            <td>\r\n                                {charString.tags[char.position]}\r\n                            </td>\r\n                            <td colSpan='5'>\r\n                                {charString.tagWarnMsg}\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }\r\n\r\n                return (\r\n                    <tr key={char.id}>\r\n                        {Object.entries(char).map((entry, j) => {\r\n                            if (entry[0] === 'available') {\r\n                                return true\r\n                            }\r\n                            if (entry[0] === 'id') {\r\n                                return (\r\n                                    <td key={j}>\r\n                                        <CharCardHeader\r\n                                            id={char.id}\r\n                                            $textWrapConfig={\r\n                                                cardTextWrapConfig[userLanguage]\r\n                                            }\r\n                                        />\r\n                                    </td>\r\n                                )\r\n                            }\r\n                            if (entry[0] === 'rarity') {\r\n                                return (\r\n                                    <td key={j}>\r\n                                        {parseRarity(entry[1])}\r\n                                    </td>\r\n                                )\r\n                            }\r\n                            if (entry[0] === 'else') {\r\n                                return (\r\n                                    <td key={j} nowrap='nowrap'>\r\n                                        {entry[1].map(tag => (\r\n                                            charString.tags[tag]\r\n                                        )).join(', ')}\r\n                                    </td>\r\n                                )\r\n                            }\r\n\r\n                            let tag\r\n                            if (entry[1].length === 0) {\r\n                                tag = '-'\r\n                            } else {\r\n                                tag = charString.tags[entry[1]]\r\n                            }\r\n                            return <td key={j} nowrap='nowrap'>{tag}</td>\r\n                        })}\r\n                    </tr>\r\n                )\r\n            })}\r\n        </tbody>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <TableHeader />\r\n            <TableBody />\r\n        </>\r\n    )\r\n}\r\n\r\nconst CharTableWrapper = styled(TableWrapper)`\r\n    overflow-x: auto;\r\n    height: calc(100vh - 12rem);\r\n`\r\nconst CharTable = () => {\r\n    const { charString } = useContext(LanguageContext)\r\n\r\n    const charTagData = charData.map((char => {\r\n        const { id, rarity, tags, ...rest } = char\r\n        return ({ id, rarity, ...tags })\r\n    }))\r\n\r\n    const sortFunc = (sortableItems, sortConfig) => {\r\n        sortableItems.sort((a, b) => {\r\n            let aKey\r\n            let bKey\r\n            if (sortConfig.key === 'else') {\r\n                aKey = a[sortConfig.key].join('')\r\n                bKey = b[sortConfig.key].join('')\r\n            } else if (sortConfig.key === 'name') {\r\n                aKey = charString.name[a.id]\r\n                bKey = charString.name[b.id]\r\n            } else {\r\n                aKey = a[sortConfig.key]\r\n                bKey = b[sortConfig.key]\r\n            }\r\n            if (aKey < bKey) {\r\n                return sortConfig.direction === 'asc' ? -1 : 1\r\n            }\r\n            if (aKey > bKey) {\r\n                return sortConfig.direction === 'asc' ? 1 : -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n\r\n    return (\r\n        <CharTableWrapper>\r\n            <SortableTable\r\n                sortFunc={sortFunc}\r\n                defaultSortKey={'rarity'}\r\n                result={charTagData}\r\n                border={true}\r\n            >\r\n                <TableContent />\r\n            </SortableTable>\r\n        </CharTableWrapper>\r\n    )\r\n}\r\n\r\nexport default function CharShowcase() {\r\n    return (\r\n        <SwitchableShowcase\r\n            localLayoutConfig='enlist-character-layout'\r\n            layoutSwitcher={<LayoutSwitcher />}\r\n            items={[\r\n                { layout: 'Masonry', content: <CharMasnory /> },\r\n                { layout: 'Table', content: <CharTable /> },\r\n            ]}\r\n        />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst StyledTable = styled(Table)`\r\n    font-size: .9rem;\r\n    color: ${props => props.theme.colors.onSurface};\r\n    margin: 0;\r\n    > tbody > tr > {\r\n        td:first-child {\r\n            padding-left: .75rem;\r\n        }\r\n    }\r\n`\r\nexport default function CardTable({\r\n    className,\r\n    children,\r\n    striped\r\n}) {\r\n    return (\r\n        <StyledTable\r\n            className={className}\r\n            striped={striped}\r\n            borderless\r\n            size=\"sm\"\r\n        >\r\n            {children}\r\n        </StyledTable>\r\n    )\r\n}\r\n"],"sourceRoot":""}