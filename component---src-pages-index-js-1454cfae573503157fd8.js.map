{"version":3,"sources":["webpack://tkfmtools/./src/components/Head.js","webpack://tkfmtools/./src/components/MyHeader.js","webpack://tkfmtools/./src/components/MyIconButton.js","webpack://tkfmtools/./src/components/MyModal.js","webpack://tkfmtools/./src/components/ScrollableContainer.js","webpack://tkfmtools/./src/components/SiteAccordionBody.js","webpack://tkfmtools/./src/pages/index.js"],"names":["title","description","path","useLanguage","isDefault","userLanguage","url","split","slice","join","name","content","property","lang","StyledHeader","styled","props","theme","colors","border","onSurface","TitleWrapper","className","titleIcon","withHelp","onClickHelp","end","onClick","HelpIcon","MyIconButton","IconButton","$active","secondary","HeaderIconButton","StyledModal","surface","ModalHeader","MyHeader","onSecondary","CloseWrapper","MyModal","children","open","onClose","ariaLabelledby","ariaDescribedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","disableEnforceFocus","aria-labelledby","aria-describedby","in","FitHeightModal","ScrollableModal","ModalBody","TextModalContent","map","item","idx","key","text","TextModal","ScrollableContainer","BodyContainer","link","linkHover","DescriptionContainer","DescriptionHeader","DescriptionBody","SiteDescription","pageString","index","about","Body","href","target","rel","refItem","header","MsgAccordion","MyAccordion","LogMsg","msg","alwaysOpen","useState","isExpanded","setExpanded","type","Badge","NewBadge","FixBadge","ChangeBadge","expanded","onChange","square","MsgBox","SiteUpdateLog","updateLog","version","LicenseList","LicenseItemTitle","LicenseItemContent","SiteLicense","license","titleLink","licenseLink","MsgModal","UpdateModal","modalOpen","latestMsg","helmet","HomeContainer","Header","unreadAnimation","keyframes","NoteIconWrapper","$unread","DescriptionAccordion","unread","state","setState","useEffect","localSetting","localStorage","getItem","Head","setItem","NoteIcon","body","panel","event","expandIcon","ExpandMoreIcon"],"mappings":"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","file":"component---src-pages-index-js-1454cfae573503157fd8.js","sourcesContent":["import React from 'react';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useLanguage } from 'components/LanguageProvider';\r\n\r\nexport default ({ title, description, path }) => {\r\n    const { isDefault, userLanguage } = useLanguage()\r\n    const url = path === '/' ? '' : path.split('/').slice(0, -1).join('_')\r\n\r\n    return (\r\n        <Helmet>\r\n            <meta name=\"title\" content={title} />\r\n            <meta name=\"description\" content={description} />\r\n            <meta property=\"og:title\" content={title} />\r\n            <meta property=\"og:description\" content={description} />\r\n            <meta property=\"twitter:title\" content={title} />\r\n            <meta property=\"twitter:description\" content={description} />\r\n            <meta\r\n                property=\"og:url\"\r\n                content={`https://purindaisuki.github.io/tkfmtools${(isDefault\r\n                    ? '' : ('/' + userLanguage)) + path}`}\r\n            />\r\n            <meta\r\n                property=\"og:image\"\r\n                content={`https://purindaisuki.github.io/tkfmtools/website_preview${url\r\n                    + (isDefault ? '' : '_' + userLanguage)}.png`}\r\n            />\r\n            <meta\r\n                property=\"twitter:url\"\r\n                content={`https://purindaisuki.github.io/tkfmtools${(isDefault\r\n                    ? '' : ('/' + userLanguage)) + path}`}\r\n            />\r\n            <meta\r\n                property=\"twitter:image\"\r\n                content={`https://purindaisuki.github.io/tkfmtools/website_preview${url\r\n                    + (isDefault ? '' : '_' + userLanguage)}.png`}\r\n            />\r\n            <title lang={userLanguage}>{title}</title>\r\n        </Helmet>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { HeaderIconButton } from 'components/MyIconButton';\r\nimport { HelpIcon } from 'components/icon';\r\n\r\nconst StyledHeader = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n    height: 2.2rem;\r\n    border-bottom: solid 1px ${props => props.theme.colors.border};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    font-size: large;\r\n    font-weight: normal;\r\n`\r\nconst TitleWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    > span {\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        line-height: normal;\r\n        svg {\r\n            width: 1.2rem;\r\n            height: 1.2rem;\r\n            margin-right: .4rem;\r\n            margin-bottom: .2rem;\r\n            fill: ${props => props.theme.colors.onSurface};\r\n        }\r\n    }\r\n`\r\nconst MyHeader = ({\r\n    className,\r\n    title,\r\n    titleIcon,\r\n    withHelp,\r\n    onClickHelp,\r\n    end\r\n}) => (\r\n    <StyledHeader className={className}>\r\n        <TitleWrapper>\r\n            <span>{titleIcon}{title}</span>\r\n            {withHelp && onClickHelp &&\r\n                <HeaderIconButton\r\n                    onClick={onClickHelp}\r\n                >\r\n                    {HelpIcon}\r\n                </HeaderIconButton>}\r\n        </TitleWrapper>\r\n        {end && <div>{end}</div>}\r\n    </StyledHeader>\r\n)\r\n\r\nexport default MyHeader","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst MyIconButton = styled(IconButton)`\r\n    padding: .75rem .5rem;\r\n    svg {\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n        fill: ${props => (\r\n        props.$active\r\n            ? props.theme.colors.secondary\r\n            : props.theme.colors.onSurface\r\n    )};\r\n    }\r\n    &:hover svg {\r\n        fill: ${props => props.theme.colors.secondary};\r\n    }\r\n`\r\n\r\nexport const HeaderIconButton = styled(MyIconButton)`\r\n    && {\r\n        padding: .4rem;\r\n        svg {\r\n            width: 1.4rem;\r\n            height: 1.4rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport default MyIconButton","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Backdrop, Fade, Modal } from '@material-ui/core';\r\nimport MyHeader from 'components/MyHeader';\r\nimport ScrollableContainer from 'components/ScrollableContainer';\r\n\r\nconst StyledModal = styled.div`\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    position: absolute;\r\n    width: 70%;\r\n    height: auto;\r\n    left: 0;\r\n    right: 0;\r\n    top: 10%;\r\n    bottom: auto;\r\n    margin: auto;\r\n    @media screen and (max-width: 992px) {\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        width: 90%;\r\n    }\r\n    padding: 1rem;\r\n    border-radius: .25rem;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n`\r\nconst ModalHeader = styled(MyHeader)`\r\n    margin: -1rem;\r\n    margin-bottom: 1rem;\r\n    padding: .2rem .5rem;\r\n    background-color: ${props => props.theme.colors.secondary};\r\n    span {\r\n        color: ${props => props.theme.colors.onSecondary};\r\n    }\r\n`\r\nconst CloseWrapper = styled.span`\r\n    cursor: pointer;\r\n    font-size: x-large;\r\n`\r\nexport const MyModal = ({\r\n    children,\r\n    className,\r\n    title,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby\r\n}) => (\r\n    <Modal\r\n        className={className}\r\n        open={open}\r\n        onClose={onClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{ timeout: 500 }}\r\n        disableEnforceFocus\r\n        aria-labelledby={ariaLabelledby}\r\n        aria-describedby={ariaDescribedby}\r\n    >\r\n        <Fade in={open}>\r\n            <StyledModal>\r\n                <ModalHeader\r\n                    title={title}\r\n                    end={<CloseWrapper onClick={onClose}>&times;</CloseWrapper>}\r\n                />\r\n                {children}\r\n            </StyledModal>\r\n        </Fade>\r\n    </Modal>\r\n)\r\n\r\nconst FitHeightModal = styled(MyModal)`\r\n    > div:nth-child(3) > div {\r\n        max-height: calc(80vh - 2rem);\r\n    }\r\n`\r\nexport const ScrollableModal = ({\r\n    children,\r\n    className,\r\n    title,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby,\r\n}) => (\r\n    <FitHeightModal\r\n        className={className}\r\n        title={title}\r\n        open={open}\r\n        onClose={onClose}\r\n        ariaLabelledby={ariaLabelledby}\r\n        ariaDescribedby={ariaDescribedby}\r\n    >\r\n        <ScrollableContainer>\r\n            {children}\r\n        </ScrollableContainer>\r\n    </FitHeightModal>\r\n)\r\n\r\nconst ModalBody = styled.div`\r\n    margin: 1rem 0;\r\n`\r\nconst TextModalContent = ({\r\n    content\r\n}) => (\r\n    content.map((item, idx) => (\r\n        <React.Fragment key={idx}>\r\n            <MyHeader\r\n                title={item.title}\r\n            />\r\n            <ModalBody>\r\n                {item.content.map((text, idx) => <p key={idx}>{text}</p>)}\r\n            </ModalBody>\r\n        </React.Fragment>\r\n    ))\r\n)\r\n\r\nexport const TextModal = ({\r\n    title,\r\n    content,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby\r\n}) => (\r\n    <ScrollableModal\r\n        title={title}\r\n        open={open}\r\n        onClose={onClose}\r\n        ariaLabelledby={ariaLabelledby}\r\n        ariaDescribedby={ariaDescribedby}\r\n    >\r\n        <TextModalContent\r\n            content={content}\r\n        />\r\n    </ScrollableModal>\r\n)\r\n\r\nexport default MyModal","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ScrollableContainer = styled.div`\r\n    overflow: auto;\r\n    height: 100%;\r\n    scrollbar-width: thin;\r\n    padding-right: .5rem;\r\n    margin-right: -.5rem;\r\n    &::-webkit-scrollbar {\r\n        width: .4rem;\r\n        height: .4rem;\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n    &::-webkit-scrollbar-corner {\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n`\r\n\r\nexport default ScrollableContainer","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport MyAccordion from 'components/MyAccordion';\r\nimport { useLanguage } from 'components/LanguageProvider';\r\nimport { ChangeBadge, FixBadge, NewBadge } from 'components/icon';\r\n\r\nconst BodyContainer = styled.div`\r\n    width: 100%;\r\n    font-size: .9rem;\r\n    a {\r\n        color: ${props => props.theme.colors.link};\r\n        &:hover {\r\n            color: ${props => props.theme.colors.linkHover};\r\n        }\r\n    }\r\n    ul {\r\n        list-style: none;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    > div {\r\n        margin-top: 1rem;\r\n    }\r\n    > div:first-child {\r\n        margin-top: 0;\r\n    }\r\n`\r\nconst DescriptionContainer = styled.li`\r\n    margin: 1rem 0;\r\n    &:first-child {\r\n        margin-top : 0;\r\n    }\r\n    &:last-child {\r\n        margin-bottom : 0;\r\n    }\r\n`\r\nconst DescriptionHeader = styled.div`\r\n    font-size: large;\r\n    margin-bottom: .5rem;\r\n`\r\nconst DescriptionBody = styled.div`\r\n    margin: 0;\r\n    p {\r\n        margin: .3rem .5rem;\r\n    }\r\n`\r\nexport const SiteDescription = () => {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <BodyContainer>\r\n            <ul>\r\n                {pageString.index.about.content.map((item, idx) => {\r\n                    let Body\r\n                    if (item.name === 'feedback') {\r\n                        Body = () => (\r\n                            <p>\r\n                                {item.content[0]}\r\n                                <a\r\n                                    href='https://peing.net/ja/b5295760aebf4c'\r\n                                    target='_blank'\r\n                                    rel='noreferrer'\r\n                                >\r\n                                    {item.content[1]}\r\n                                </a>\r\n                                {item.content[2]}\r\n                            </p>\r\n                        )\r\n                    } else if (item.name === 'reference') {\r\n                        Body = () => (\r\n                            item.content.map((refItem, idx) => {\r\n                                if (idx === 3) {\r\n                                    return <p key={idx}>{refItem}</p>\r\n                                }\r\n                                return (\r\n                                    <p key={idx}>\r\n                                        <a\r\n                                            href={refItem.link}\r\n                                            target='_blank'\r\n                                            rel='noreferrer'\r\n                                        >\r\n                                            {refItem.title}\r\n                                        </a>\r\n                                    </p>\r\n                                )\r\n                            })\r\n                        )\r\n                    } else {\r\n                        Body = () => item.content\r\n                            .map((text, idx) => <p key={idx}>{text}</p>)\r\n                    }\r\n\r\n                    return (\r\n                        <DescriptionContainer key={idx}>\r\n                            <DescriptionHeader>{item.header}</DescriptionHeader>\r\n                            <DescriptionBody>\r\n                                <Body />\r\n                            </DescriptionBody>\r\n                        </DescriptionContainer>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </BodyContainer>\r\n    )\r\n}\r\n\r\nconst MsgAccordion = styled(MyAccordion)`\r\n    && {\r\n        border-bottom: 1px solid lightgray;\r\n        > .MuiAccordionSummary-root {\r\n            padding: 0 .5rem;\r\n            border-bottom: 0px solid lightgray;\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid lightgray;\r\n        }\r\n        .MuiAccordionSummary-content {\r\n            display: flex;\r\n            align-items: center;\r\n            margin: .5rem 0;\r\n            > span {\r\n                padding: .25rem .4rem;\r\n                margin-right: .4rem;\r\n            }\r\n        }\r\n        && .MuiAccordionDetails-root {\r\n            font-size: small;\r\n            padding: .4rem .5rem;\r\n            margin: 0;\r\n        }\r\n    }\r\n`\r\nexport function LogMsg({ msg, alwaysOpen }) {\r\n    const [isExpanded, setExpanded] = useState(alwaysOpen ? true : false)\r\n    const { type, title, description } = msg\r\n    const Badge = type === 'New' ? NewBadge\r\n        : type === 'Fix' ? FixBadge\r\n            : ChangeBadge\r\n\r\n    const handleChange = () => {\r\n        if (!alwaysOpen) {\r\n            setExpanded(!isExpanded)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MsgAccordion\r\n            expanded={isExpanded}\r\n            onChange={handleChange}\r\n            square={true}\r\n            title={\r\n                <>\r\n                    <Badge />\r\n                    {title}\r\n                </>\r\n            }\r\n            content={description}\r\n        />\r\n    )\r\n}\r\n\r\nconst MsgBox = styled.div`\r\n    > div:first-child {\r\n        border-bottom: 1px solid lightgray;\r\n    }\r\n    > div > div {\r\n        border-top: none;\r\n    }\r\n`\r\nexport function SiteUpdateLog() {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <BodyContainer>\r\n            {pageString.index.updateLog.content.map((version, idx) => (\r\n                <MsgBox key={idx}>\r\n                    <div>{version.version}</div>\r\n                    {version.content.map((msg, idx) => (\r\n                        <LogMsg key={idx} msg={msg} />\r\n                    ))}\r\n                </MsgBox>\r\n            ))}\r\n        </BodyContainer>\r\n    )\r\n}\r\n\r\nconst LicenseList = styled.ul`\r\n    margin-bottom: -.5rem;\r\n`\r\nconst LicenseItemTitle = styled.div`\r\n    font-weight: bold;\r\n`\r\nconst LicenseItemContent = styled.div`\r\n    padding-left: .5rem;\r\n    padding-bottom: .5rem;\r\n`\r\nexport const SiteLicense = () => {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <BodyContainer>\r\n            <LicenseList>\r\n                <li key={'text'}>\r\n                    <LicenseItemTitle>\r\n                        <span>{pageString.index.license.content.title}</span>\r\n                    </LicenseItemTitle>\r\n                    <LicenseItemContent>\r\n                        <span>{pageString.index.license.content.content}</span>\r\n                    </LicenseItemContent>\r\n                </li>\r\n                {[\r\n                    {\r\n                        titleLink: 'https://github.com/google/material-design-icons',\r\n                        title: 'Material icons - Google Design',\r\n                        licenseLink: 'https://github.com/google/material-design-icons/blob/master/LICENSE',\r\n                        license: 'Apache License 2.0',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/facebook/react',\r\n                        title: 'react',\r\n                        licenseLink: 'https://github.com/facebook/react/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/gatsbyjs/gatsby',\r\n                        title: 'gatsby',\r\n                        licenseLink: 'https://github.com/gatsbyjs/gatsby/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/react-bootstrap/react-bootstrap',\r\n                        title: 'react-bootstrap',\r\n                        licenseLink: 'https://github.com/react-bootstrap/react-bootstrap/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/paulcollett/react-masonry-css',\r\n                        title: 'react-masonry-css',\r\n                        licenseLink: 'https://github.com/paulcollett/react-masonry-css/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/dirtyredz/react-scroll-up-button',\r\n                        title: 'react-scroll-up-button',\r\n                        licenseLink: 'https://github.com/dirtyredz/react-scroll-up-button/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/mui-org/material-ui',\r\n                        title: 'material-ui',\r\n                        licenseLink: 'https://github.com/mui-org/material-ui/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/styled-components/styled-components',\r\n                        title: 'styled-components',\r\n                        licenseLink: 'https://github.com/styled-components/styled-components/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/plouc/nivo',\r\n                        title: 'nivo',\r\n                        licenseLink: 'https://github.com/plouc/nivo/blob/master/LICENSE.md',\r\n                        license: 'MIT License',\r\n                    },\r\n                ].map((item, idx) => (\r\n                    <li key={idx}>\r\n                        <LicenseItemTitle>\r\n                            <a\r\n                                href={item.titleLink}\r\n                                target='_blank'\r\n                                rel='noreferrer'\r\n                            >\r\n                                {item.title}\r\n                            </a>\r\n                        </LicenseItemTitle>\r\n                        <LicenseItemContent>\r\n                            <a\r\n                                href={item.licenseLink}\r\n                                target='_blank'\r\n                                rel='noreferrer'\r\n                            >\r\n                                {item.license}\r\n                            </a>\r\n                        </LicenseItemContent>\r\n                    </li>\r\n                ))}\r\n            </LicenseList>\r\n        </BodyContainer>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport Head from 'components/Head';\r\nimport MyAccordion from 'components/MyAccordion';\r\nimport {\r\n    LogMsg,\r\n    SiteDescription,\r\n    SiteUpdateLog,\r\n    SiteLicense\r\n} from 'components/SiteAccordionBody';\r\nimport MyModal from 'components/MyModal';\r\nimport { useLanguage } from 'components/LanguageProvider';\r\nimport { ExpandMoreIcon, NoteIcon } from 'components/icon';\r\n\r\nconst MsgModal = styled(MyModal)`\r\n    > div:nth-child(3) {\r\n        width: 40%;\r\n        @media screen and (max-width: 992px) {\r\n            width: 80%;\r\n        }\r\n        @media screen and (max-width: 768px) {\r\n            width: 90%;\r\n        }\r\n        top: 20%;\r\n    }\r\n`\r\nconst ModalBody = styled.div`\r\n    margin: 0;\r\n    &&& .MuiAccordion-root,\r\n    &&& .MuiAccordionSummary-root {\r\n        border: none;\r\n        cursor: text;\r\n    }\r\n`\r\nconst UpdateModal = ({\r\n    modalOpen,\r\n    onClose\r\n}) => {\r\n    const { pageString } = useLanguage()\r\n    const latestMsg = pageString.index.updateLog.content[0]\r\n\r\n    return (\r\n        <MsgModal\r\n            title={`${pageString.index.helmet.title} ${latestMsg.version}`}\r\n            open={modalOpen}\r\n            onClose={onClose}\r\n            ariaLabelledby=\"update-modal-title\"\r\n            ariaDescribedby=\"update-modal-description\"\r\n        >\r\n            <ModalBody>\r\n                {latestMsg.content.map((msg, idx) => (\r\n                    <LogMsg\r\n                        msg={msg}\r\n                        alwaysOpen={true}\r\n                        key={idx}\r\n                    />\r\n                ))}\r\n            </ModalBody>\r\n        </MsgModal>\r\n    )\r\n}\r\n\r\nconst HomeContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    &&& > div {\r\n        margin-bottom: 2rem;\r\n    }\r\n`\r\nconst Header = styled.div`\r\n    width: 60%;\r\n    @media screen and (max-width: 992px) {\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 624px) {\r\n        width: 90%;\r\n    }\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    font-size: x-large;\r\n    font-weight: bold;\r\n    color: ${props => props.theme.colors.onSurface};\r\n    > span:nth-child(2) {\r\n        margin: .4rem;\r\n        font-size: large;\r\n    }\r\n`\r\nconst unreadAnimation = keyframes`\r\n    0%, 67%, 80%, 96%, 100% {\r\n        transform: scale(1,1) translate(0,0);\r\n    }\r\n    72% {\r\n        transform: scale(1.1,.9) translate(0,5%);\r\n    }\r\n    76%, 92% {\r\n        transform: scale(1.2,.8) translate(0,15%);\r\n    }\r\n    84% {\r\n        transform: scale(.9,1.2) translate(0,-100%);\r\n    }\r\n    88% {\r\n        transform: scale(.9,1.2) translate(0,-20%);\r\n    }\r\n`\r\nconst NoteIconWrapper = styled.span`\r\n    position: relative;\r\n    cursor: pointer;\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        fill: ${props => props.theme.colors.onSurface};\r\n    }\r\n    &:after {\r\n        position: absolute;\r\n        content: '';\r\n        right: -.3rem;\r\n        top: .1rem;\r\n        background-color: red;\r\n        border-radius: 100%;\r\n        animation: ${unreadAnimation} 1.5s ease-in-out infinite;\r\n        ${props => props.$unread\r\n        ? 'width: .6rem; height: .6rem;'\r\n        : null}\r\n    }\r\n`\r\nconst DescriptionAccordion = styled(MyAccordion)`\r\n    && {\r\n        width: 60%;\r\n        @media screen and (max-width: 992px) {\r\n            width: 80%;\r\n        }\r\n        @media screen and (max-width: 624px) {\r\n            width: 90%;\r\n        }\r\n        border: 1px solid ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n        & {\r\n            box-shadow: 0 0 .15em lightgray;\r\n        }\r\n        > .MuiAccordionSummary-root {\r\n            font-size: large;\r\n            padding: .75rem 1.25rem;\r\n            border-bottom-right-radius: 0;\r\n            border-bottom-left-radius: 0;\r\n            border-bottom: 0px solid ${props => props.theme.colors.border};\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid ${props => props.theme.colors.border};\r\n        }\r\n        .MuiAccordionDetails-root {\r\n            margin: 1rem;\r\n            padding: 0;\r\n        }\r\n    }\r\n`\r\nconst Home = () => {\r\n    const { isDefault, pageString } = useLanguage()\r\n    const latestMsg = pageString.index.updateLog.content[0]\r\n\r\n    const [state, setState] = useState({\r\n        expanded: 0,\r\n        modalOpen: false,\r\n        unread: true\r\n    })\r\n\r\n    // get whether read latest update\r\n    useEffect(() => {\r\n        const localSetting = localStorage.getItem('last-read-version')\r\n        if (localSetting) {\r\n            setState((state) => ({\r\n                ...state,\r\n                unread: localSetting !== latestMsg.version\r\n            }))\r\n        }\r\n    }, [])\r\n\r\n    const handleExpand = (panel) => (event, isExpanded) => {\r\n        setState((state) => ({\r\n            ...state,\r\n            expanded: isExpanded ? panel : false\r\n        }))\r\n    }\r\n\r\n    const handleModalOpen = () => {\r\n        setState((state) => ({\r\n            ...state,\r\n            modalOpen: true,\r\n            unread: false,\r\n        }))\r\n        localStorage.setItem('last-read-version', latestMsg.version)\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setState((state) => ({\r\n            ...state,\r\n            modalOpen: false,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Head\r\n                title={pageString.index.helmet.title}\r\n                description={pageString.index.helmet.description}\r\n                path='/'\r\n            />\r\n            <HomeContainer>\r\n                <Header>\r\n                    <span>{pageString.index.helmet.title}</span>\r\n                    <span>{latestMsg.version}</span>\r\n                    <NoteIconWrapper\r\n                        onClick={handleModalOpen}\r\n                        $unread={state.unread}\r\n                    >\r\n                        {NoteIcon}\r\n                    </NoteIconWrapper>\r\n                </Header>\r\n                {[\r\n                    {\r\n                        header: pageString.index.about.header,\r\n                        body: <SiteDescription />,\r\n                    },\r\n                    {\r\n                        header: pageString.index.updateLog.header,\r\n                        body: <SiteUpdateLog />,\r\n                    },\r\n                    {\r\n                        header: pageString.index.license.header,\r\n                        body: <SiteLicense />,\r\n                    },\r\n                ].map((item, idx) => (\r\n                    <DescriptionAccordion\r\n                        expanded={state.expanded === idx}\r\n                        onChange={handleExpand(idx)}\r\n                        square={false}\r\n                        expandIcon={ExpandMoreIcon}\r\n                        title={item.header}\r\n                        content={item.body}\r\n                        key={idx}\r\n                    />\r\n                ))}\r\n            </HomeContainer>\r\n            <UpdateModal\r\n                modalOpen={state.modalOpen}\r\n                onClose={handleModalClose}\r\n                ariaLabelledby=\"latest-update-modal-title\"\r\n                ariaDescribedby=\"latest-update-modal-description\"\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home"],"sourceRoot":""}