{"version":3,"sources":["webpack://tkfmtools/./src/components/MyModal.js","webpack://tkfmtools/./src/components/ScrollableContainer.js","webpack://tkfmtools/./src/components/SiteAccordionBody.js","webpack://tkfmtools/./src/pages/index.js"],"names":["StyledModal","styled","props","theme","colors","surface","onSurface","border","ModalHeader","MyHeader","secondary","onSecondary","CloseWrapper","MyModal","children","className","title","open","onClose","ariaLabelledby","ariaDescribedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","disableEnforceFocus","aria-labelledby","aria-describedby","in","id","end","onClick","StyledScrollableModal","ScrollableModal","ModalBody","TextModalContent","content","map","item","idx","key","text","TextModal","Array","length","keys","i","join","ScrollableContainer","BodyContainer","link","linkHover","DescriptionContainer","DescriptionHeader","DescriptionBody","SiteDescription","pageString","useLanguage","index","about","Body","name","href","target","rel","refItem","header","MsgAccordion","MyAccordion","LogMsg","msg","alwaysOpen","useState","isExpanded","setExpanded","type","description","Badge","NewBadge","FixBadge","ChangeBadge","expanded","onChange","square","MsgBox","SiteUpdateLog","updateLog","version","LicenseList","LicenseItemTitle","LicenseItemContent","SiteLicense","license","titleLink","licenseLink","MsgModal","UpdateModal","modalOpen","latestMsg","helmet","HomeContainer","Header","unreadAnimation","keyframes","NoteButton","MyIconButton","$unread","DescriptionAccordion","unread","state","setState","useEffect","localSetting","localStorage","getItem","Head","path","setItem","tooltipText","noteButtonTooltip","NoteIcon","body","panel","event","expandIcon","ExpandMoreIcon"],"mappings":"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","file":"component---src-pages-index-js-d007dfae9cdd05f6f510.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Backdrop, Fade, Modal } from '@material-ui/core';\r\nimport MyHeader from 'components/MyHeader';\r\nimport ScrollableContainer from 'components/ScrollableContainer';\r\n\r\nconst StyledModal = styled.div`\r\n    background-color: ${props => props.theme.colors.surface};\r\n    color: ${props => props.theme.colors.onSurface};\r\n    position: absolute;\r\n    width: 70%;\r\n    height: auto;\r\n    left: 0;\r\n    right: 0;\r\n    top: 10%;\r\n    bottom: auto;\r\n    margin: auto;\r\n    @media screen and (max-width: 992px) {\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        width: 90%;\r\n    }\r\n    padding: 1rem;\r\n    border-radius: .25rem;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n`\r\nconst ModalHeader = styled(MyHeader)`\r\n    margin: -1rem;\r\n    margin-bottom: 1rem;\r\n    padding: .2rem .5rem;\r\n    background-color: ${props => props.theme.colors.secondary};\r\n    span {\r\n        color: ${props => props.theme.colors.onSecondary};\r\n    }\r\n`\r\nconst CloseWrapper = styled.span`\r\n    cursor: pointer;\r\n    font-size: x-large;\r\n`\r\nexport const MyModal = ({\r\n    children,\r\n    className,\r\n    title,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby\r\n}) => (\r\n    <Modal\r\n        className={className}\r\n        open={open}\r\n        onClose={onClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{ timeout: 500 }}\r\n        disableEnforceFocus\r\n        aria-labelledby={ariaLabelledby}\r\n        aria-describedby={ariaDescribedby}\r\n    >\r\n        <Fade in={open}>\r\n            <StyledModal>\r\n                <ModalHeader\r\n                    title={title}\r\n                    id={ariaLabelledby}\r\n                    end={<CloseWrapper onClick={onClose}>&times;</CloseWrapper>}\r\n                />\r\n                {children}\r\n            </StyledModal>\r\n        </Fade>\r\n    </Modal>\r\n)\r\n\r\nconst StyledScrollableModal = styled(MyModal)`\r\n    > div:nth-child(3) > div {\r\n        max-height: calc(80vh - 2rem);\r\n    }\r\n`\r\nexport const ScrollableModal = ({\r\n    children,\r\n    className,\r\n    title,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby,\r\n}) => (\r\n    <StyledScrollableModal\r\n        className={className}\r\n        title={title}\r\n        open={open}\r\n        onClose={onClose}\r\n        ariaLabelledby={ariaLabelledby}\r\n        ariaDescribedby={ariaDescribedby}\r\n    >\r\n        <ScrollableContainer>\r\n            {children}\r\n        </ScrollableContainer>\r\n    </StyledScrollableModal>\r\n)\r\n\r\nconst ModalBody = styled.div`\r\n    margin: 1rem 0;\r\n`\r\nconst TextModalContent = ({\r\n    content,\r\n    ariaDescribedby\r\n}) => (\r\n    content.map((item, idx) => (\r\n        <React.Fragment key={idx}>\r\n            <MyHeader\r\n                title={item.title}\r\n            />\r\n            <ModalBody>\r\n                {item.content.map((text, idx) => (\r\n                    <p key={idx} id={ariaDescribedby + '_' + idx}>{text}</p>\r\n                ))}\r\n            </ModalBody>\r\n        </React.Fragment>\r\n    ))\r\n)\r\n\r\nexport const TextModal = ({\r\n    title,\r\n    content,\r\n    open,\r\n    onClose,\r\n    ariaLabelledby,\r\n    ariaDescribedby\r\n}) => (\r\n    <ScrollableModal\r\n        title={title}\r\n        open={open}\r\n        onClose={onClose}\r\n        ariaLabelledby={ariaLabelledby}\r\n        ariaDescribedby={[...Array(content.length).keys()].map(i => ariaDescribedby + '_' + i).join(' ')}\r\n    >\r\n        <TextModalContent\r\n            content={content}\r\n            ariaDescribedby={ariaDescribedby}\r\n        />\r\n    </ScrollableModal>\r\n)\r\n\r\nexport default MyModal","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ScrollableContainer = styled.div`\r\n    overflow: auto;\r\n    height: 100%;\r\n    scrollbar-width: thin;\r\n    padding-right: .5rem;\r\n    margin-right: -.5rem;\r\n    &::-webkit-scrollbar {\r\n        width: .4rem;\r\n        height: .4rem;\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n    &::-webkit-scrollbar-corner {\r\n        background: ${props => props.theme.colors.surface};\r\n    }\r\n`\r\n\r\nexport default ScrollableContainer","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport MyAccordion from 'components/MyAccordion';\r\nimport { useLanguage } from 'components/LanguageProvider';\r\nimport { ChangeBadge, FixBadge, NewBadge } from 'components/icon';\r\n\r\nconst BodyContainer = styled.div`\r\n    width: 100%;\r\n    font-size: .9rem;\r\n    a {\r\n        color: ${props => props.theme.colors.link};\r\n        &:hover {\r\n            color: ${props => props.theme.colors.linkHover};\r\n        }\r\n    }\r\n    ul {\r\n        list-style: none;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    > div {\r\n        margin-top: 1rem;\r\n    }\r\n    > div:first-child {\r\n        margin-top: 0;\r\n    }\r\n`\r\nconst DescriptionContainer = styled.li`\r\n    margin: 1rem 0;\r\n    &:first-child {\r\n        margin-top : 0;\r\n    }\r\n    &:last-child {\r\n        margin-bottom : 0;\r\n    }\r\n`\r\nconst DescriptionHeader = styled.div`\r\n    font-size: large;\r\n    margin-bottom: .5rem;\r\n`\r\nconst DescriptionBody = styled.div`\r\n    margin: 0;\r\n    p {\r\n        margin: .3rem .5rem;\r\n    }\r\n`\r\nexport const SiteDescription = () => {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <BodyContainer>\r\n            <ul>\r\n                {pageString.index.about.content.map((item, idx) => {\r\n                    let Body\r\n                    if (item.name === 'feedback' || item.name === 'policy') {\r\n                        Body = () => (\r\n                            <p>\r\n                                {item.content[0]}\r\n                                <a\r\n                                    href={item.link}\r\n                                    target='_blank'\r\n                                    rel='noreferrer'\r\n                                >\r\n                                    {item.content[1]}\r\n                                </a>\r\n                                {item.content[2]}\r\n                            </p>\r\n                        )\r\n                    } else if (item.name === 'reference') {\r\n                        Body = () => (\r\n                            item.content.map((refItem, idx) => {\r\n                                if (idx === 3) {\r\n                                    return <p key={idx}>{refItem}</p>\r\n                                }\r\n                                return (\r\n                                    <p key={idx}>\r\n                                        <a\r\n                                            href={refItem.link}\r\n                                            target='_blank'\r\n                                            rel='noreferrer'\r\n                                        >\r\n                                            {refItem.title}\r\n                                        </a>\r\n                                    </p>\r\n                                )\r\n                            })\r\n                        )\r\n                    } else {\r\n                        Body = () => item.content\r\n                            .map((text, idx) => <p key={idx}>{text}</p>)\r\n                    }\r\n\r\n                    return (\r\n                        <DescriptionContainer key={idx}>\r\n                            <DescriptionHeader>{item.header}</DescriptionHeader>\r\n                            <DescriptionBody>\r\n                                <Body />\r\n                            </DescriptionBody>\r\n                        </DescriptionContainer>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </BodyContainer>\r\n    )\r\n}\r\n\r\nconst MsgAccordion = styled(MyAccordion)`\r\n    && {\r\n        border-bottom: 1px solid lightgray;\r\n        > .MuiAccordionSummary-root {\r\n            padding: 0 .5rem;\r\n            border-bottom: 0px solid lightgray;\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid lightgray;\r\n        }\r\n        .MuiAccordionSummary-content {\r\n            display: flex;\r\n            align-items: center;\r\n            margin: .5rem 0;\r\n            > span {\r\n                padding: .25rem .4rem;\r\n                margin-right: .4rem;\r\n            }\r\n        }\r\n        && .MuiAccordionDetails-root {\r\n            font-size: small;\r\n            padding: .4rem .5rem;\r\n            margin: 0;\r\n        }\r\n    }\r\n`\r\nexport function LogMsg({ msg, alwaysOpen }) {\r\n    const [isExpanded, setExpanded] = useState(alwaysOpen ? true : false)\r\n    const { type, title, description } = msg\r\n    const Badge = type === 'New' ? NewBadge\r\n        : type === 'Fix' ? FixBadge\r\n            : ChangeBadge\r\n\r\n    const handleChange = () => {\r\n        if (!alwaysOpen) {\r\n            setExpanded(!isExpanded)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MsgAccordion\r\n            expanded={isExpanded}\r\n            onChange={handleChange}\r\n            square={true}\r\n            title={\r\n                <>\r\n                    <Badge />\r\n                    {title}\r\n                </>\r\n            }\r\n            content={description}\r\n        />\r\n    )\r\n}\r\n\r\nconst MsgBox = styled.div`\r\n    > div:first-child {\r\n        border-bottom: 1px solid lightgray;\r\n    }\r\n    > div > div {\r\n        border-top: none;\r\n    }\r\n`\r\nexport function SiteUpdateLog() {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <BodyContainer>\r\n            {pageString.index.updateLog.content.map((version, idx) => (\r\n                <MsgBox key={idx}>\r\n                    <div>{version.version}</div>\r\n                    {version.content.map((msg, idx) => (\r\n                        <LogMsg key={idx} msg={msg} />\r\n                    ))}\r\n                </MsgBox>\r\n            ))}\r\n        </BodyContainer>\r\n    )\r\n}\r\n\r\nconst LicenseList = styled.ul`\r\n    margin-bottom: -.5rem;\r\n`\r\nconst LicenseItemTitle = styled.div`\r\n    font-weight: bold;\r\n`\r\nconst LicenseItemContent = styled.div`\r\n    padding-left: .5rem;\r\n    padding-bottom: .5rem;\r\n`\r\nexport const SiteLicense = () => {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <BodyContainer>\r\n            <LicenseList>\r\n                <li key={'text'}>\r\n                    <LicenseItemTitle>\r\n                        <span>{pageString.index.license.content.title}</span>\r\n                    </LicenseItemTitle>\r\n                    <LicenseItemContent>\r\n                        <span>{pageString.index.license.content.content}</span>\r\n                    </LicenseItemContent>\r\n                </li>\r\n                {[\r\n                    {\r\n                        titleLink: 'https://github.com/google/material-design-icons',\r\n                        title: 'Material icons - Google Design',\r\n                        licenseLink: 'https://github.com/google/material-design-icons/blob/master/LICENSE',\r\n                        license: 'Apache License 2.0',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/facebook/react',\r\n                        title: 'react',\r\n                        licenseLink: 'https://github.com/facebook/react/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/gatsbyjs/gatsby',\r\n                        title: 'gatsby',\r\n                        licenseLink: 'https://github.com/gatsbyjs/gatsby/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/styled-components/styled-components',\r\n                        title: 'styled-components',\r\n                        licenseLink: 'https://github.com/styled-components/styled-components/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/mui-org/material-ui',\r\n                        title: 'material-ui',\r\n                        licenseLink: 'https://github.com/mui-org/material-ui/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/react-bootstrap/react-bootstrap',\r\n                        title: 'react-bootstrap',\r\n                        licenseLink: 'https://github.com/react-bootstrap/react-bootstrap/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/plouc/nivo',\r\n                        title: 'nivo',\r\n                        licenseLink: 'https://github.com/plouc/nivo/blob/master/LICENSE.md',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/atlassian/react-beautiful-dnd',\r\n                        title: 'react-beautiful-dnd',\r\n                        licenseLink: 'https://github.com/atlassian/react-beautiful-dnd/blob/master/LICENSE',\r\n                        license: 'Apache License 2.0',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/niklasvh/html2canvas',\r\n                        title: 'html2canvas',\r\n                        licenseLink: 'https://github.com/niklasvh/html2canvas/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/dirtyredz/react-scroll-up-button',\r\n                        title: 'react-scroll-up-button',\r\n                        licenseLink: 'https://github.com/dirtyredz/react-scroll-up-button/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    },\r\n                    {\r\n                        titleLink: 'https://github.com/paulcollett/react-masonry-css',\r\n                        title: 'react-masonry-css',\r\n                        licenseLink: 'https://github.com/paulcollett/react-masonry-css/blob/master/LICENSE',\r\n                        license: 'MIT License',\r\n                    }\r\n                ].map((item, idx) => (\r\n                    <li key={idx}>\r\n                        <LicenseItemTitle>\r\n                            <a\r\n                                href={item.titleLink}\r\n                                target='_blank'\r\n                                rel='noreferrer'\r\n                            >\r\n                                {item.title}\r\n                            </a>\r\n                        </LicenseItemTitle>\r\n                        <LicenseItemContent>\r\n                            <a\r\n                                href={item.licenseLink}\r\n                                target='_blank'\r\n                                rel='noreferrer'\r\n                            >\r\n                                {item.license}\r\n                            </a>\r\n                        </LicenseItemContent>\r\n                    </li>\r\n                ))}\r\n            </LicenseList>\r\n        </BodyContainer>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport Head from 'components/Head';\r\nimport MyIconButton from 'components/MyIconButton';\r\nimport MyAccordion from 'components/MyAccordion';\r\nimport {\r\n    LogMsg,\r\n    SiteDescription,\r\n    SiteUpdateLog,\r\n    SiteLicense\r\n} from 'components/SiteAccordionBody';\r\nimport MyModal from 'components/MyModal';\r\nimport { useLanguage } from 'components/LanguageProvider';\r\nimport { ExpandMoreIcon, NoteIcon } from 'components/icon';\r\n\r\nconst MsgModal = styled(MyModal)`\r\n    > div:nth-child(3) {\r\n        width: 40%;\r\n        @media screen and (max-width: 992px) {\r\n            width: 80%;\r\n        }\r\n        @media screen and (max-width: 768px) {\r\n            width: 90%;\r\n        }\r\n        top: 20%;\r\n    }\r\n`\r\nconst ModalBody = styled.div`\r\n    margin: 0;\r\n    &&& .MuiAccordion-root,\r\n    &&& .MuiAccordionSummary-root {\r\n        border: none;\r\n        cursor: text;\r\n    }\r\n`\r\nconst UpdateModal = ({\r\n    modalOpen,\r\n    onClose\r\n}) => {\r\n    const { pageString } = useLanguage()\r\n    const latestMsg = pageString.index.updateLog.content[0]\r\n\r\n    return (\r\n        <MsgModal\r\n            title={`${pageString.index.helmet.title} ${latestMsg.version}`}\r\n            open={modalOpen}\r\n            onClose={onClose}\r\n            ariaLabelledby=\"update-modal-title\"\r\n        >\r\n            <ModalBody>\r\n                {latestMsg.content.map((msg, idx) => (\r\n                    <LogMsg\r\n                        msg={msg}\r\n                        alwaysOpen={true}\r\n                        key={idx}\r\n                    />\r\n                ))}\r\n            </ModalBody>\r\n        </MsgModal>\r\n    )\r\n}\r\n\r\nconst HomeContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    &&& > div {\r\n        margin-bottom: 2rem;\r\n    }\r\n`\r\nconst Header = styled.div`\r\n    width: 60%;\r\n    @media screen and (max-width: 992px) {\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 624px) {\r\n        width: 90%;\r\n    }\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    font-size: x-large;\r\n    font-weight: bold;\r\n    color: ${props => props.theme.colors.onSurface};\r\n    > span:nth-child(2) {\r\n        margin: .4rem;\r\n        font-size: large;\r\n    }\r\n`\r\nconst unreadAnimation = keyframes`\r\n    0%, 67%, 80%, 96%, 100% {\r\n        transform: scale(1,1) translate(0,0);\r\n    }\r\n    72% {\r\n        transform: scale(1.1,.9) translate(0,5%);\r\n    }\r\n    76%, 92% {\r\n        transform: scale(1.2,.8) translate(0,15%);\r\n    }\r\n    84% {\r\n        transform: scale(.9,1.2) translate(0,-100%);\r\n    }\r\n    88% {\r\n        transform: scale(.9,1.2) translate(0,-20%);\r\n    }\r\n`\r\nconst NoteButton = styled(MyIconButton)`\r\n    position: relative;\r\n    cursor: pointer;\r\n    && {\r\n        padding: 0;\r\n    }\r\n    svg {\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        fill: ${props => props.theme.colors.onSurface};\r\n    }\r\n    &:after {\r\n        position: absolute;\r\n        content: '';\r\n        right: -.3rem;\r\n        top: -.3rem;\r\n        background-color: red;\r\n        border-radius: 100%;\r\n        animation: ${unreadAnimation} 1.5s ease-in-out infinite;\r\n        ${props => props.$unread\r\n        ? 'width: .6rem; height: .6rem;'\r\n        : null}\r\n    }\r\n`\r\nconst DescriptionAccordion = styled(MyAccordion)`\r\n    && {\r\n        width: 60%;\r\n        @media screen and (max-width: 992px) {\r\n            width: 80%;\r\n        }\r\n        @media screen and (max-width: 624px) {\r\n            width: 90%;\r\n        }\r\n        border: 1px solid ${props => props.theme.colors.border};\r\n        border-radius: .25rem;\r\n        & {\r\n            box-shadow: 0 0 .15em lightgray;\r\n        }\r\n        > .MuiAccordionSummary-root {\r\n            font-size: large;\r\n            padding: .75rem 1.25rem;\r\n            border-bottom-right-radius: 0;\r\n            border-bottom-left-radius: 0;\r\n            border-bottom: 0px solid ${props => props.theme.colors.border};\r\n        }\r\n        > .MuiAccordionSummary-root.Mui-expanded {\r\n            border-bottom: 1px solid ${props => props.theme.colors.border};\r\n        }\r\n        .MuiAccordionDetails-root {\r\n            margin: 1rem;\r\n            padding: 0;\r\n        }\r\n    }\r\n`\r\nconst Home = () => {\r\n    const { pageString } = useLanguage()\r\n    const latestMsg = pageString.index.updateLog.content[0]\r\n\r\n    const [state, setState] = useState({\r\n        expanded: 0,\r\n        modalOpen: false,\r\n        unread: true\r\n    })\r\n\r\n    // get whether read latest update\r\n    useEffect(() => {\r\n        const localSetting = localStorage.getItem('last-read-version')\r\n        if (localSetting) {\r\n            setState((state) => ({\r\n                ...state,\r\n                unread: localSetting !== latestMsg.version\r\n            }))\r\n        }\r\n    }, [])\r\n\r\n    const handleExpand = (panel) => (event, isExpanded) => {\r\n        setState((state) => ({\r\n            ...state,\r\n            expanded: isExpanded ? panel : false\r\n        }))\r\n    }\r\n\r\n    const handleModalOpen = () => {\r\n        setState((state) => ({\r\n            ...state,\r\n            modalOpen: true,\r\n            unread: false,\r\n        }))\r\n        localStorage.setItem('last-read-version', latestMsg.version)\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setState((state) => ({\r\n            ...state,\r\n            modalOpen: false,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Head\r\n                title={pageString.index.helmet.title}\r\n                description={pageString.index.helmet.description}\r\n                path='/'\r\n            />\r\n            <HomeContainer>\r\n                <Header>\r\n                    <span>{pageString.index.helmet.title}</span>\r\n                    <span>{latestMsg.version}</span>\r\n                    <NoteButton\r\n                        onClick={handleModalOpen}\r\n                        tooltipText={pageString.index.noteButtonTooltip}\r\n                        $unread={state.unread}\r\n                    >\r\n                        {NoteIcon}\r\n                    </NoteButton>\r\n                </Header>\r\n                {[\r\n                    {\r\n                        header: pageString.index.about.header,\r\n                        body: <SiteDescription />,\r\n                    },\r\n                    {\r\n                        header: pageString.index.updateLog.header,\r\n                        body: <SiteUpdateLog />,\r\n                    },\r\n                    {\r\n                        header: pageString.index.license.header,\r\n                        body: <SiteLicense />,\r\n                    },\r\n                ].map((item, idx) => (\r\n                    <DescriptionAccordion\r\n                        expanded={state.expanded === idx}\r\n                        onChange={handleExpand(idx)}\r\n                        square={false}\r\n                        expandIcon={ExpandMoreIcon}\r\n                        title={item.header}\r\n                        content={item.body}\r\n                        key={idx}\r\n                    />\r\n                ))}\r\n            </HomeContainer>\r\n            <UpdateModal\r\n                modalOpen={state.modalOpen}\r\n                onClose={handleModalClose}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home"],"sourceRoot":""}